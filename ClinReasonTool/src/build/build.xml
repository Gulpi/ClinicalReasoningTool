<project name="CTR" default="dist" basedir=".">
	<description>
        built CRT
    </description>
    
  	<!-- set global properties for this build -->
	<property name="src" location="./ClinicalReasoningTool-master/ClinReasonTool/src/java"/>
	<property name="build" location="./ClinicalReasoningTool-master/ClinReasonTool/WEB-INF/classes"/>
	<property name="lib" location="./ClinicalReasoningTool-master/ClinReasonTool/WEB-INF/lib"/>
	<property name="mytomcat" location="/usr/local/tomcat7/lib"/>
	<property name="dst_tomcat" location="/home/software/test2/"/>
	
    <!-- All libraries + additional required jdk libraries -->
	<path id="project.class.path">
		<!-- normal call path -->
		<pathelement path="${java.class.path}/"/>
		<!-- servlet -->
		<pathelement path="${mytomcat}/servlet-api.jar"/>
		
		<fileset dir="${lib}">
    		<include name="**/*.jar" />
  		</fileset>
   			
		<pathelement location="${build}"/>	
	</path>
    
  	<target name="init">
		<echo>ANT Script for deployment of Casus Online ProMediWeb 19.01.2003</echo>
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
  	</target>

	<target name="compile" depends="clean,init"
				description="compile the source " >
	   <echo>Compiling...</echo>
	   
	   
	   
	   <!-- Compile the java code from ${src} into ${build} -->
		<javac sourcepath="" srcdir="${src}" destdir="${build}" nowarn="on" debug="on" target="1.7" source="1.7" 
			debuglevel="lines,vars,source">
			<classpath refid="project.class.path"/>	
		</javac>
	</target>
  
	<target name="dist" depends="compile"
			description="generate the distribution" >


		<!-- for all hibernate mappings ... -->
		<echo>copy (hibernate + other) xmls... ${src} to ${build}</echo>
		<copy preservelastmodified="true" todir="${build}">
			<fileset dir="${src}">
				<include name="**/*.xml"/>		
			</fileset>
		</copy>
		
		<echo>copy ${src}/hibernate.properties -> ${build}/hibernate.properties</echo>
		<copy overwrite="yes" failonerror="false" file="${src}/hibernate.properties" tofile="${build}/hibernate.properties"/>
	
		<echo>copy to webapp</echo>
		<copy preservelastmodified="true" todir="${dst_tomcat}/webapps/crt/">
			<fileset dir="${build}" includes="**"/>  
		</copy>

	</target>

	<target name="clean" description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete>
			<fileset dir="${build}" casesensitive="yes">
				<include name="**/*.class"/>
				<include name="**/*.xml"/>
			</fileset>
		</delete>
		<delete dir="${dist}/*.*"/>
	</target>

</project>

