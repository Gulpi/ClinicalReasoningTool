--
-- Create Schema Script
--   Database Version            : 11.2.0.4.0
--   Database Compatible Level   : 11.2.0.0.0
--   Script Compatible Level     : 11.2.0.0.0
--   Toad Version                : 12.12.0.39
--   DB Connect String           : 192.168.1.13:1521/CASUS2
--   Schema                      : CASUS
--   Script Created by           : CASUS
--   Script Created at           : 28.09.2018 22:01:16
--   Notes                       : 
--

-- Object Counts: 
--   Roles: 8           System Privileges: 211  Roles: 16           Grants: 2864 
--   Users: 1           System Privileges: 1    Roles: 8                Grants: 3           Tablespace Quotas: 2 
--   Tablespaces: 3     Datafiles: 2        Tempfiles: 1 
-- 
--   DBMS Jobs: 3 
--   Directories: 4 
--   Functions: 3       Lines of Code: 162 
--   Indexes: 391       Columns: 487        
--   Object Privileges: 1076 
--   Procedures: 53     Lines of Code: 1547 
--   Scheduler Jobs: 2 
--   Sequences: 47 
--   Synonym: 2 
--   Tables: 346        Columns: 2607       Constraints: 409    
--   Triggers: 82 
--   Views: 86          Columns: 736        


-- "Set define off" turns off substitution variables.
Set define off; 

--
-- DATA_PUMP_DIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
DATA_PUMP_DIR AS 
'/opt/oracle/oracle11/admin/casus2/dpdump/';


--
-- ORACLE_OCM_CONFIG_DIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
ORACLE_OCM_CONFIG_DIR AS 
'/opt/oracle/oracle11/product/11.2.0/dbhome_1/ccr/hosts/odn13.instruct.eu/state';


--
-- ORACLE_OCM_CONFIG_DIR2  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
ORACLE_OCM_CONFIG_DIR2 AS 
'/opt/oracle/oracle11/product/11.2.0/dbhome_1/ccr/state';


--
-- XMLDIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
XMLDIR AS 
'/opt/oracle/oracle11/product/11.2.0/dbhome_1/rdbms/xml';


--
-- INDX  (Tablespace) 
--
CREATE TABLESPACE INDX DATAFILE 
  '/opt/oracle/oracle11/oradata/casus2/indx01.dbf' SIZE 19590M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED
LOGGING
ONLINE
EXTENT MANAGEMENT LOCAL AUTOALLOCATE
BLOCKSIZE 8K
SEGMENT SPACE MANAGEMENT AUTO
FLASHBACK ON;


--
-- TEMP  (Tablespace) 
--
CREATE TEMPORARY TABLESPACE TEMP TEMPFILE 
  '/opt/oracle/oracle11/oradata/casus2/temp01.dbf' SIZE 896M AUTOEXTEND ON NEXT 640K MAXSIZE UNLIMITED
TABLESPACE GROUP ''
EXTENT MANAGEMENT LOCAL UNIFORM SIZE 1M;


--
-- USERS  (Tablespace) 
--
CREATE TABLESPACE USERS DATAFILE 
  '/opt/oracle/oracle11/oradata/casus2/users01.dbf' SIZE 9923840K AUTOEXTEND ON NEXT 1280K MAXSIZE UNLIMITED
LOGGING
ONLINE
EXTENT MANAGEMENT LOCAL AUTOALLOCATE
BLOCKSIZE 8K
SEGMENT SPACE MANAGEMENT AUTO
FLASHBACK ON;


--
-- "DEFAULT"  (Profile) 
--
CREATE PROFILE "DEFAULT" LIMIT
  SESSIONS_PER_USER UNLIMITED
  CPU_PER_SESSION UNLIMITED
  CPU_PER_CALL UNLIMITED
  CONNECT_TIME UNLIMITED
  IDLE_TIME UNLIMITED
  LOGICAL_READS_PER_SESSION UNLIMITED
  LOGICAL_READS_PER_CALL UNLIMITED
  COMPOSITE_LIMIT UNLIMITED
  PRIVATE_SGA UNLIMITED
  FAILED_LOGIN_ATTEMPTS UNLIMITED
  PASSWORD_LIFE_TIME UNLIMITED
  PASSWORD_REUSE_TIME UNLIMITED
  PASSWORD_REUSE_MAX UNLIMITED
  PASSWORD_LOCK_TIME 1
  PASSWORD_GRACE_TIME 7
  PASSWORD_VERIFY_FUNCTION NULL;


--
-- CASUS_ADMIN  (Role) 
--
CREATE ROLE CASUS_ADMIN NOT IDENTIFIED;

-- Object privileges granted to CASUS_ADMIN
GRANT ALTER ON EVAL.EVAL_ENTRY TO CASUS_ADMIN;
GRANT DELETE ON EVAL.EVAL_ENTRY TO CASUS_ADMIN;
GRANT INSERT ON EVAL.EVAL_ENTRY TO CASUS_ADMIN;
GRANT SELECT ON EVAL.EVAL_ENTRY TO CASUS_ADMIN;
GRANT UPDATE ON EVAL.EVAL_ENTRY TO CASUS_ADMIN;
GRANT ALTER ON EVAL.EVAL_MAIN TO CASUS_ADMIN;
GRANT DELETE ON EVAL.EVAL_MAIN TO CASUS_ADMIN;
GRANT INSERT ON EVAL.EVAL_MAIN TO CASUS_ADMIN;
GRANT SELECT ON EVAL.EVAL_MAIN TO CASUS_ADMIN;
GRANT UPDATE ON EVAL.EVAL_MAIN TO CASUS_ADMIN;
GRANT SELECT ON EVAL.EVAL_MAIN_SEQ TO CASUS_ADMIN;
GRANT EXECUTE ON SYS.DBMS_CRYPTO TO CASUS_ADMIN;

-- Grants of objects owned by CASUS to the CASUS_ADMIN role are at the the end of the schema script.


--
-- CASUS_AUTHOR  (Role) 
--
CREATE ROLE CASUS_AUTHOR NOT IDENTIFIED;

-- Object privileges granted to CASUS_AUTHOR
GRANT INSERT ON EVAL.EVAL_ENTRY TO CASUS_AUTHOR;
GRANT INSERT ON EVAL.EVAL_MAIN TO CASUS_AUTHOR;
GRANT SELECT ON EVAL.EVAL_MAIN_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON FRAGEBOGEN.FIELD TO CASUS_AUTHOR;
GRANT SELECT ON FRAGEBOGEN.POLL TO CASUS_AUTHOR;
GRANT SELECT ON FRAGEBOGEN.TANBLOCK TO CASUS_AUTHOR;
GRANT SELECT ON FRAGEBOGEN.TRANSACTION TO CASUS_AUTHOR;
GRANT SELECT ON FRAGEBOGEN.TRANSACTIONENTRY TO CASUS_AUTHOR;

-- Grants of objects owned by CASUS to the CASUS_AUTHOR role are at the the end of the schema script.


--
-- CASUS_COURSE_SU  (Role) 
--
CREATE ROLE CASUS_COURSE_SU NOT IDENTIFIED;

-- Object privileges granted to CASUS_COURSE_SU
GRANT SELECT ON EVAL.EVAL_MAIN_SEQ TO CASUS_COURSE_SU;

-- Grants of objects owned by CASUS to the CASUS_COURSE_SU role are at the the end of the schema script.


--
-- CASUS_EVAL  (Role) 
--
CREATE ROLE CASUS_EVAL NOT IDENTIFIED;

-- Object privileges granted to CASUS_EVAL

-- Grants of objects owned by CASUS to the CASUS_EVAL role are at the the end of the schema script.


--
-- CASUS_PLAYER  (Role) 
--
CREATE ROLE CASUS_PLAYER NOT IDENTIFIED;

-- Object privileges granted to CASUS_PLAYER
GRANT INSERT ON EVAL.EVAL_ENTRY TO CASUS_PLAYER;
GRANT INSERT ON EVAL.EVAL_MAIN TO CASUS_PLAYER;
GRANT SELECT ON EVAL.EVAL_MAIN_SEQ TO CASUS_PLAYER;

-- Grants of objects owned by CASUS to the CASUS_PLAYER role are at the the end of the schema script.


--
-- CONNECT  (Role) 
--
CREATE ROLE CONNECT NOT IDENTIFIED;

-- Object privileges granted to CONNECT

-- Grants of objects owned by CASUS to the CONNECT role are at the the end of the schema script.
-- System privileges granted to CONNECT
GRANT CREATE SESSION TO CONNECT;


--
-- DBA  (Role) 
--
CREATE ROLE DBA NOT IDENTIFIED;

-- Object privileges granted to DBA
GRANT EXECUTE ON SYS.AS_REPLAY TO DBA;
GRANT DEBUG ON SYS.AW$ TO DBA;
GRANT SELECT ON SYS.AW$ TO DBA;
GRANT DEBUG ON SYS.AW_OBJ$ TO DBA;
GRANT SELECT ON SYS.AW_OBJ$ TO DBA;
GRANT DEBUG ON SYS.AW_PROP$ TO DBA;
GRANT SELECT ON SYS.AW_PROP$ TO DBA;
GRANT ALTER ON SYS.AWSEQ$ TO DBA;
GRANT SELECT ON SYS.AWSEQ$ TO DBA;
GRANT DEBUG ON SYS.AW_TRACK$ TO DBA;
GRANT SELECT ON SYS.AW_TRACK$ TO DBA;
GRANT EXECUTE ON SYS.DBMS_ADR TO DBA;
GRANT EXECUTE ON SYS.DBMS_AUTO_SQLTUNE TO DBA;
GRANT EXECUTE ON SYS.DBMS_AUTO_TASK_ADMIN TO DBA;
GRANT EXECUTE ON SYS.DBMS_AUTO_TASK_IMMEDIATE TO DBA;
GRANT EXECUTE ON SYS.DBMS_CACHEUTIL TO DBA;
GRANT EXECUTE ON SYS.DBMS_DEFER_QUERY TO DBA;
GRANT EXECUTE ON SYS.DBMS_DEFER_SYS TO DBA;
GRANT EXECUTE ON SYS.DBMS_DNFS TO DBA;
GRANT EXECUTE ON SYS.DBMS_FEATURE_USAGE_REPORT TO DBA;
GRANT EXECUTE ON SYS.DBMS_FLASHBACK TO DBA;
GRANT EXECUTE ON SYS.DBMS_FLASHBACK_ARCHIVE TO DBA;
GRANT EXECUTE ON SYS.DBMS_HM TO DBA;
GRANT EXECUTE ON SYS.DBMS_IR TO DBA;
GRANT EXECUTE ON SYS.DBMS_LOGSTDBY TO DBA;
GRANT EXECUTE ON SYS.DBMS_MONITOR TO DBA;
GRANT EXECUTE ON SYS.DBMS_NETWORK_ACL_ADMIN TO DBA;
GRANT EXECUTE ON SYS.DBMS_RAT_MASK TO DBA;
GRANT EXECUTE ON SYS.DBMS_RESULT_CACHE TO DBA;
GRANT EXECUTE ON SYS.DBMS_RESUMABLE TO DBA;
GRANT EXECUTE ON SYS.DBMS_SERVER_ALERT TO DBA;
GRANT EXECUTE ON SYS.DBMS_SERVER_TRACE TO DBA;
GRANT EXECUTE ON SYS.DBMS_SERVICE TO DBA;
GRANT EXECUTE ON SYS.DBMS_STORAGE_MAP TO DBA;
GRANT EXECUTE ON SYS.DBMS_TDB TO DBA;
GRANT EXECUTE ON SYS.DBMS_UADV_ARR TO DBA;
GRANT EXECUTE ON SYS.DBMS_UNDO_ADV TO DBA;
GRANT EXECUTE ON SYS.DBMS_WLM TO DBA;
GRANT EXECUTE ON SYS.DBMS_WORKLOAD_CAPTURE TO DBA;
GRANT EXECUTE ON SYS.DBMS_WORKLOAD_REPLAY TO DBA;
GRANT EXECUTE ON SYS.DBMS_WORKLOAD_REPOSITORY TO DBA;
GRANT EXECUTE ON SYS.DBMS_XS_PRINCIPALS TO DBA;
GRANT EXECUTE ON SYS.DBMS_XS_PRINCIPALS_INT TO DBA;
GRANT EXECUTE ON SYS.HM_SQLTK_INTERNAL TO DBA;
GRANT EXECUTE ON SYS.LOAD_UNDO_STAT TO DBA;
GRANT ALTER ON SYS.MAP_OBJECT TO DBA;
GRANT DEBUG ON SYS.MAP_OBJECT TO DBA;
GRANT DELETE ON SYS.MAP_OBJECT TO DBA;
GRANT FLASHBACK ON SYS.MAP_OBJECT TO DBA;
GRANT INSERT ON SYS.MAP_OBJECT TO DBA;
GRANT ON COMMIT REFRESH ON SYS.MAP_OBJECT TO DBA;
GRANT QUERY REWRITE ON SYS.MAP_OBJECT TO DBA;
GRANT SELECT ON SYS.MAP_OBJECT TO DBA;
GRANT UPDATE ON SYS.MAP_OBJECT TO DBA;
GRANT DEBUG ON SYS.OLAP_TAB$ TO DBA;
GRANT SELECT ON SYS.OLAP_TAB$ TO DBA;
GRANT DEBUG ON SYS.OLAP_TAB_COL$ TO DBA;
GRANT SELECT ON SYS.OLAP_TAB_COL$ TO DBA;
GRANT DEBUG ON SYS.OLAP_TAB_HIER$ TO DBA;
GRANT SELECT ON SYS.OLAP_TAB_HIER$ TO DBA;
GRANT EXECUTE ON SYS.OUTLN_EDIT_PKG TO DBA;
GRANT EXECUTE ON SYS.OUTLN_PKG TO DBA;
GRANT DEBUG ON SYS.PS$ TO DBA;
GRANT SELECT ON SYS.PS$ TO DBA;
GRANT EXECUTE ON SYS.RESET_UNDO_STAT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_ADR_CONTROL TO DBA;
GRANT SELECT ON SYS.V_$DIAG_ADR_INVALIDATION TO DBA;
GRANT SELECT ON SYS.V_$DIAG_ALERT_EXT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_AMS_XACTION TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USER_ACTION TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USER_ACTION_DEF TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USR_ACT_PARAM TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USR_ACT_PARAM_DEF TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USR_INC_ACT_MAP TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USR_INC_TYPE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DFW_CONFIG_CAPTURE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DFW_CONFIG_ITEM TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DIAGV_INCIDENT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DIR_EXT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_EM_DIAG_JOB TO DBA;
GRANT SELECT ON SYS.V_$DIAG_EM_TARGET_INFO TO DBA;
GRANT SELECT ON SYS.V_$DIAG_EM_USER_ACTIVITY TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_FDG_SET TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_FINDING TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_INFO TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_MESSAGE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_RECOMMENDATION TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_RUN TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INCCKEY TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INCIDENT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INCIDENT_FILE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INC_METER_CONFIG TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INC_METER_IMPT_DEF TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INC_METER_INFO TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INC_METER_PK_IMPTS TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INC_METER_SUMMARY TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_CONFIGURATION TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_FILE_COPY_LOG TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_FILE_METADATA TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PACKAGE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PACKAGE_FILE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PACKAGE_HISTORY TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PACKAGE_INCIDENT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PKG_UNPACK_HIST TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PROGRESS_LOG TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_REMOTE_PACKAGE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_PICKLEERR TO DBA;
GRANT SELECT ON SYS.V_$DIAG_PROBLEM TO DBA;
GRANT SELECT ON SYS.V_$DIAG_RELMD_EXT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_SWEEPERR TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_ACTINC TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_ACTPROB TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VEM_USER_ACTLOG TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VEM_USER_ACTLOG1 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VHM_RUN TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIEW TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIEWCOL TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_INCCOUNT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_INCFCOUNT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VINCIDENT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VINCIDENT_FILE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VINC_METER_INFO TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_INC_METER_INFO_PROB TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_FILE_COPY_LOG TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_FILE_METADATA TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PACKAGE_FILE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PACKAGE_HISTORY TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PACKAGE_MAIN_INT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PACKAGE_SIZE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PKG_FILE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PKG_INC_CAND TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PKG_INC_DTL TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PKG_INC_DTL1 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PKG_MAIN_PROBLEM TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_IPSPRBCNT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_IPSPRBCNT1 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_NFCINC TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VNOT_EXIST_INCIDENT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM_BUCKET TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM_BUCKET_COUNT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM_BUCKET1 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM_INT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM_LASTINC TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM1 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM2 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VSHOWCATVIEW TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VSHOWINCB TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VSHOWINCB_I TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_SWPERRCOUNT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VTEST_EXISTS TO DBA;
GRANT SELECT ON SYS.V$XS_SESSION TO DBA;
GRANT SELECT ON SYS.V$XS_SESSION_ATTRIBUTE TO DBA;
GRANT SELECT ON SYS.V$XS_SESSION_ROLE TO DBA;
GRANT EXECUTE ON XDB.DBMS_CSX_ADMIN TO DBA;
GRANT EXECUTE ON XDB.DBMS_XDB_ADMIN TO DBA;
GRANT ALTER ON XDB.XDB$ACL TO DBA;
GRANT DEBUG ON XDB.XDB$ACL TO DBA;
GRANT DELETE ON XDB.XDB$ACL TO DBA;
GRANT FLASHBACK ON XDB.XDB$ACL TO DBA;
GRANT INSERT ON XDB.XDB$ACL TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$ACL TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$ACL TO DBA;
GRANT SELECT ON XDB.XDB$ACL TO DBA;
GRANT UPDATE ON XDB.XDB$ACL TO DBA;
GRANT ALTER ON XDB.XDB$CONFIG TO DBA;
GRANT DEBUG ON XDB.XDB$CONFIG TO DBA;
GRANT DELETE ON XDB.XDB$CONFIG TO DBA;
GRANT FLASHBACK ON XDB.XDB$CONFIG TO DBA;
GRANT INSERT ON XDB.XDB$CONFIG TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$CONFIG TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$CONFIG TO DBA;
GRANT SELECT ON XDB.XDB$CONFIG TO DBA;
GRANT UPDATE ON XDB.XDB$CONFIG TO DBA;
GRANT ALTER ON XDB.XDB$D_LINK TO DBA;
GRANT DEBUG ON XDB.XDB$D_LINK TO DBA;
GRANT DELETE ON XDB.XDB$D_LINK TO DBA;
GRANT FLASHBACK ON XDB.XDB$D_LINK TO DBA;
GRANT INSERT ON XDB.XDB$D_LINK TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$D_LINK TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$D_LINK TO DBA;
GRANT SELECT ON XDB.XDB$D_LINK TO DBA;
GRANT UPDATE ON XDB.XDB$D_LINK TO DBA;
GRANT ALTER ON XDB.XDB$H_INDEX TO DBA;
GRANT DEBUG ON XDB.XDB$H_INDEX TO DBA;
GRANT DELETE ON XDB.XDB$H_INDEX TO DBA;
GRANT FLASHBACK ON XDB.XDB$H_INDEX TO DBA;
GRANT INSERT ON XDB.XDB$H_INDEX TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$H_INDEX TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$H_INDEX TO DBA;
GRANT SELECT ON XDB.XDB$H_INDEX TO DBA;
GRANT UPDATE ON XDB.XDB$H_INDEX TO DBA;
GRANT ALTER ON XDB.XDB$H_LINK TO DBA;
GRANT DEBUG ON XDB.XDB$H_LINK TO DBA;
GRANT DELETE ON XDB.XDB$H_LINK TO DBA;
GRANT FLASHBACK ON XDB.XDB$H_LINK TO DBA;
GRANT INSERT ON XDB.XDB$H_LINK TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$H_LINK TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$H_LINK TO DBA;
GRANT SELECT ON XDB.XDB$H_LINK TO DBA;
GRANT UPDATE ON XDB.XDB$H_LINK TO DBA;
GRANT ALTER ON XDB.XDB$NLOCKS TO DBA;
GRANT DEBUG ON XDB.XDB$NLOCKS TO DBA;
GRANT DELETE ON XDB.XDB$NLOCKS TO DBA;
GRANT FLASHBACK ON XDB.XDB$NLOCKS TO DBA;
GRANT INSERT ON XDB.XDB$NLOCKS TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$NLOCKS TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$NLOCKS TO DBA;
GRANT SELECT ON XDB.XDB$NLOCKS TO DBA;
GRANT UPDATE ON XDB.XDB$NLOCKS TO DBA;
GRANT ALTER ON XDB.XDB$RESCONFIG TO DBA;
GRANT DEBUG ON XDB.XDB$RESCONFIG TO DBA;
GRANT DELETE ON XDB.XDB$RESCONFIG TO DBA;
GRANT FLASHBACK ON XDB.XDB$RESCONFIG TO DBA;
GRANT INSERT ON XDB.XDB$RESCONFIG TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$RESCONFIG TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$RESCONFIG TO DBA;
GRANT SELECT ON XDB.XDB$RESCONFIG TO DBA;
GRANT UPDATE ON XDB.XDB$RESCONFIG TO DBA;
GRANT ALTER ON XDB.XDB$RESOURCE TO DBA;
GRANT DEBUG ON XDB.XDB$RESOURCE TO DBA;
GRANT DELETE ON XDB.XDB$RESOURCE TO DBA;
GRANT FLASHBACK ON XDB.XDB$RESOURCE TO DBA;
GRANT INSERT ON XDB.XDB$RESOURCE TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$RESOURCE TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$RESOURCE TO DBA;
GRANT SELECT ON XDB.XDB$RESOURCE TO DBA;
GRANT UPDATE ON XDB.XDB$RESOURCE TO DBA;
GRANT ALTER ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT DEBUG ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT DELETE ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT FLASHBACK ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT INSERT ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT ON COMMIT REFRESH ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT QUERY REWRITE ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT SELECT ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT UPDATE ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT ALTER ON XDB.XS$DATA_SECURITY TO DBA;
GRANT DEBUG ON XDB.XS$DATA_SECURITY TO DBA;
GRANT DELETE ON XDB.XS$DATA_SECURITY TO DBA;
GRANT FLASHBACK ON XDB.XS$DATA_SECURITY TO DBA;
GRANT INSERT ON XDB.XS$DATA_SECURITY TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XS$DATA_SECURITY TO DBA;
GRANT QUERY REWRITE ON XDB.XS$DATA_SECURITY TO DBA;
GRANT SELECT ON XDB.XS$DATA_SECURITY TO DBA;
GRANT UPDATE ON XDB.XS$DATA_SECURITY TO DBA;
GRANT ALTER ON XDB.XS$PRINCIPALS TO DBA;
GRANT DEBUG ON XDB.XS$PRINCIPALS TO DBA;
GRANT DELETE ON XDB.XS$PRINCIPALS TO DBA;
GRANT FLASHBACK ON XDB.XS$PRINCIPALS TO DBA;
GRANT INSERT ON XDB.XS$PRINCIPALS TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XS$PRINCIPALS TO DBA;
GRANT QUERY REWRITE ON XDB.XS$PRINCIPALS TO DBA;
GRANT SELECT ON XDB.XS$PRINCIPALS TO DBA;
GRANT UPDATE ON XDB.XS$PRINCIPALS TO DBA;
GRANT ALTER ON XDB.XS$ROLESETS TO DBA;
GRANT DEBUG ON XDB.XS$ROLESETS TO DBA;
GRANT DELETE ON XDB.XS$ROLESETS TO DBA;
GRANT FLASHBACK ON XDB.XS$ROLESETS TO DBA;
GRANT INSERT ON XDB.XS$ROLESETS TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XS$ROLESETS TO DBA;
GRANT QUERY REWRITE ON XDB.XS$ROLESETS TO DBA;
GRANT SELECT ON XDB.XS$ROLESETS TO DBA;
GRANT UPDATE ON XDB.XS$ROLESETS TO DBA;
GRANT ALTER ON XDB.XS$SECURITYCLASS TO DBA;
GRANT DEBUG ON XDB.XS$SECURITYCLASS TO DBA;
GRANT DELETE ON XDB.XS$SECURITYCLASS TO DBA;
GRANT FLASHBACK ON XDB.XS$SECURITYCLASS TO DBA;
GRANT INSERT ON XDB.XS$SECURITYCLASS TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XS$SECURITYCLASS TO DBA;
GRANT QUERY REWRITE ON XDB.XS$SECURITYCLASS TO DBA;
GRANT SELECT ON XDB.XS$SECURITYCLASS TO DBA;
GRANT UPDATE ON XDB.XS$SECURITYCLASS TO DBA;

-- System privileges granted to DBA
GRANT ADMINISTER ANY SQL TUNING SET TO DBA WITH ADMIN OPTION;
GRANT ADMINISTER DATABASE TRIGGER TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'DBA', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => TRUE);
END;
/
GRANT ADMINISTER SQL MANAGEMENT OBJECT TO DBA WITH ADMIN OPTION;
GRANT ADMINISTER SQL TUNING SET TO DBA WITH ADMIN OPTION;
GRANT ADVISOR TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY CLUSTER TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY DIMENSION TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY EDITION TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT ALTER ANY INDEX TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY OUTLINE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY ROLE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT ALTER ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY SQL PROFILE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY TRIGGER TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT ALTER DATABASE TO DBA WITH ADMIN OPTION;
GRANT ALTER PROFILE TO DBA WITH ADMIN OPTION;
GRANT ALTER RESOURCE COST TO DBA WITH ADMIN OPTION;
GRANT ALTER ROLLBACK SEGMENT TO DBA WITH ADMIN OPTION;
GRANT ALTER SESSION TO DBA WITH ADMIN OPTION;
GRANT ALTER SYSTEM TO DBA WITH ADMIN OPTION;
GRANT ALTER TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT ALTER USER TO DBA WITH ADMIN OPTION;
GRANT ANALYZE ANY TO DBA WITH ADMIN OPTION;
GRANT ANALYZE ANY DICTIONARY TO DBA WITH ADMIN OPTION;
GRANT AUDIT ANY TO DBA WITH ADMIN OPTION;
GRANT AUDIT SYSTEM TO DBA WITH ADMIN OPTION;
GRANT BACKUP ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT BECOME USER TO DBA WITH ADMIN OPTION;
GRANT CHANGE NOTIFICATION TO DBA WITH ADMIN OPTION;
GRANT COMMENT ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT COMMENT ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CLUSTER TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CONTEXT TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY DIMENSION TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY DIRECTORY TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY EDITION TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT CREATE ANY INDEX TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY JOB TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY OUTLINE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY PROCEDURE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT CREATE ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY SQL PROFILE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY SYNONYM TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY TRIGGER TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT CREATE ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT CREATE CLUSTER TO DBA WITH ADMIN OPTION;
GRANT CREATE CUBE TO DBA WITH ADMIN OPTION;
GRANT CREATE CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT CREATE CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT CREATE DATABASE LINK TO DBA WITH ADMIN OPTION;
GRANT CREATE DIMENSION TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_EVALUATION_CONTEXT_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT CREATE EXTERNAL JOB TO DBA WITH ADMIN OPTION;
GRANT CREATE INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE JOB TO DBA WITH ADMIN OPTION;
GRANT CREATE LIBRARY TO DBA WITH ADMIN OPTION;
GRANT CREATE MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT CREATE MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT CREATE MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT CREATE OPERATOR TO DBA WITH ADMIN OPTION;
GRANT CREATE PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT CREATE PROFILE TO DBA WITH ADMIN OPTION;
GRANT CREATE PUBLIC DATABASE LINK TO DBA WITH ADMIN OPTION;
GRANT CREATE PUBLIC SYNONYM TO DBA WITH ADMIN OPTION;
GRANT CREATE ROLE TO DBA WITH ADMIN OPTION;
GRANT CREATE ROLLBACK SEGMENT TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_SET_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT CREATE SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT CREATE SESSION TO DBA WITH ADMIN OPTION;
GRANT CREATE SYNONYM TO DBA WITH ADMIN OPTION;
GRANT CREATE TABLE TO DBA WITH ADMIN OPTION;
GRANT CREATE TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT CREATE TRIGGER TO DBA WITH ADMIN OPTION;
GRANT CREATE TYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE USER TO DBA WITH ADMIN OPTION;
GRANT CREATE VIEW TO DBA WITH ADMIN OPTION;
GRANT DEBUG ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT DEBUG CONNECT SESSION TO DBA WITH ADMIN OPTION;
GRANT DELETE ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT DELETE ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT DELETE ANY TABLE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'DEQUEUE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => TRUE);
END;
/
GRANT DROP ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CLUSTER TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CONTEXT TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT DROP ANY DIMENSION TO DBA WITH ADMIN OPTION;
GRANT DROP ANY DIRECTORY TO DBA WITH ADMIN OPTION;
GRANT DROP ANY EDITION TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT DROP ANY INDEX TO DBA WITH ADMIN OPTION;
GRANT DROP ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT DROP ANY MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT DROP ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT DROP ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT DROP ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT DROP ANY OUTLINE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY ROLE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT DROP ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY SQL PROFILE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY SYNONYM TO DBA WITH ADMIN OPTION;
GRANT DROP ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY TRIGGER TO DBA WITH ADMIN OPTION;
GRANT DROP ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT DROP PROFILE TO DBA WITH ADMIN OPTION;
GRANT DROP PUBLIC DATABASE LINK TO DBA WITH ADMIN OPTION;
GRANT DROP PUBLIC SYNONYM TO DBA WITH ADMIN OPTION;
GRANT DROP ROLLBACK SEGMENT TO DBA WITH ADMIN OPTION;
GRANT DROP TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT DROP USER TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'ENQUEUE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => TRUE);
END;
/
GRANT EXECUTE ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY CLASS TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT EXECUTE ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY PROGRAM TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT EXECUTE ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT EXPORT FULL DATABASE TO DBA WITH ADMIN OPTION;
GRANT FLASHBACK ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT FLASHBACK ARCHIVE ADMINISTER TO DBA WITH ADMIN OPTION;
GRANT FORCE ANY TRANSACTION TO DBA WITH ADMIN OPTION;
GRANT FORCE TRANSACTION TO DBA WITH ADMIN OPTION;
GRANT GLOBAL QUERY REWRITE TO DBA WITH ADMIN OPTION;
GRANT GRANT ANY OBJECT PRIVILEGE TO DBA WITH ADMIN OPTION;
GRANT GRANT ANY PRIVILEGE TO DBA WITH ADMIN OPTION;
GRANT GRANT ANY ROLE TO DBA WITH ADMIN OPTION;
GRANT IMPORT FULL DATABASE TO DBA WITH ADMIN OPTION;
GRANT INSERT ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT INSERT ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT INSERT ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT LOCK ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT MANAGE ANY FILE GROUP TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => TRUE);
END;
/
GRANT MANAGE FILE GROUP TO DBA WITH ADMIN OPTION;
GRANT MANAGE SCHEDULER TO DBA WITH ADMIN OPTION;
GRANT MANAGE TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT MERGE ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT ON COMMIT REFRESH TO DBA WITH ADMIN OPTION;
GRANT QUERY REWRITE TO DBA WITH ADMIN OPTION;
GRANT READ ANY FILE GROUP TO DBA WITH ADMIN OPTION;
GRANT RESTRICTED SESSION TO DBA WITH ADMIN OPTION;
GRANT RESUMABLE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY DICTIONARY TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY TRANSACTION TO DBA WITH ADMIN OPTION;
GRANT UNDER ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT UNDER ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT UNDER ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT UNLIMITED TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY TABLE TO DBA WITH ADMIN OPTION;

-- Roles granted to DBA
--
-- DATAPUMP_EXP_FULL_DATABASE  (Role) 
--
GRANT DATAPUMP_EXP_FULL_DATABASE TO DBA;
--
-- DATAPUMP_IMP_FULL_DATABASE  (Role) 
--
GRANT DATAPUMP_IMP_FULL_DATABASE TO DBA;
--
-- DELETE_CATALOG_ROLE  (Role) 
--
GRANT DELETE_CATALOG_ROLE TO DBA WITH ADMIN OPTION;
--
-- EXECUTE_CATALOG_ROLE  (Role) 
--
GRANT EXECUTE_CATALOG_ROLE TO DBA WITH ADMIN OPTION;
--
-- EXP_FULL_DATABASE  (Role) 
--
GRANT EXP_FULL_DATABASE TO DBA;
--
-- GATHER_SYSTEM_STATISTICS  (Role) 
--
GRANT GATHER_SYSTEM_STATISTICS TO DBA;
--
-- IMP_FULL_DATABASE  (Role) 
--
GRANT IMP_FULL_DATABASE TO DBA;
--
-- JAVA_ADMIN  (Role) 
--
GRANT JAVA_ADMIN TO DBA;
--
-- JAVA_DEPLOY  (Role) 
--
GRANT JAVA_DEPLOY TO DBA;
--
-- OLAP_DBA  (Role) 
--
GRANT OLAP_DBA TO DBA;
--
-- OLAP_XS_ADMIN  (Role) 
--
GRANT OLAP_XS_ADMIN TO DBA;
--
-- SCHEDULER_ADMIN  (Role) 
--
GRANT SCHEDULER_ADMIN TO DBA WITH ADMIN OPTION;
--
-- SELECT_CATALOG_ROLE  (Role) 
--
GRANT SELECT_CATALOG_ROLE TO DBA WITH ADMIN OPTION;
--
-- WM_ADMIN_ROLE  (Role) 
--
GRANT WM_ADMIN_ROLE TO DBA;
--
-- XDBADMIN  (Role) 
--
GRANT XDBADMIN TO DBA;
--
-- XDB_SET_INVOKER  (Role) 
--
GRANT XDB_SET_INVOKER TO DBA;


--
-- RESOURCE  (Role) 
--
CREATE ROLE RESOURCE NOT IDENTIFIED;

-- System privileges granted to RESOURCE
GRANT CREATE CLUSTER TO RESOURCE;
GRANT CREATE INDEXTYPE TO RESOURCE;
GRANT CREATE OPERATOR TO RESOURCE;
GRANT CREATE PROCEDURE TO RESOURCE;
GRANT CREATE SEQUENCE TO RESOURCE;
GRANT CREATE TABLE TO RESOURCE;
GRANT CREATE TRIGGER TO RESOURCE;
GRANT CREATE TYPE TO RESOURCE;


--
-- CASUS  (User) 
--
CREATE USER CASUS
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  ACCOUNT UNLOCK;

-- 8 Roles for CASUS 
--
-- CASUS_ADMIN  (Role) 
--
GRANT CASUS_ADMIN TO CASUS WITH ADMIN OPTION;
--
-- CASUS_AUTHOR  (Role) 
--
GRANT CASUS_AUTHOR TO CASUS WITH ADMIN OPTION;
--
-- CASUS_COURSE_SU  (Role) 
--
GRANT CASUS_COURSE_SU TO CASUS WITH ADMIN OPTION;
--
-- CASUS_EVAL  (Role) 
--
GRANT CASUS_EVAL TO CASUS WITH ADMIN OPTION;
--
-- CASUS_PLAYER  (Role) 
--
GRANT CASUS_PLAYER TO CASUS WITH ADMIN OPTION;
--
-- CONNECT  (Role) 
--
GRANT CONNECT TO CASUS WITH ADMIN OPTION;
--
-- DBA  (Role) 
--
GRANT DBA TO CASUS WITH ADMIN OPTION;
--
-- RESOURCE  (Role) 
--
GRANT RESOURCE TO CASUS WITH ADMIN OPTION;
ALTER USER CASUS DEFAULT ROLE ALL;

-- 1 System Privilege for CASUS 
GRANT UNLIMITED TABLESPACE TO CASUS WITH ADMIN OPTION;

-- 2 Tablespace Quotas for CASUS 
ALTER USER CASUS QUOTA UNLIMITED ON USERS;
ALTER USER CASUS QUOTA UNLIMITED ON INDX;

-- 3 Object Privileges for CASUS 
GRANT SELECT ON FRAGEBOGEN.TRANSACTION TO CASUS;
GRANT SELECT ON FRAGEBOGEN.TRANSACTIONENTRY TO CASUS;
GRANT EXECUTE ON SYS.DBMS_LOCK TO CASUS;


--
-- ANNOTATION_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.ANNOTATION_ID_SEQ
  START WITH 22077
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CARDADD_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CARDADD_ID_SEQ
  START WITH 11266
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CARD_NAV_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CARD_NAV_SEQ
  START WITH 9663
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CARD_RULES_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CARD_RULES_SEQ
  START WITH 10000
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CARD_RULES_SPEC_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CARD_RULES_SPEC_SEQ
  START WITH 10073
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CASERATING_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CASERATING_SEQ
  START WITH 12034
  MAXVALUE 9999999999999999999999999999
  MINVALUE 200
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CASE_RESOURCES_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CASE_RESOURCES_SEQ
  START WITH 16071
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CASEREVIEWER_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CASEREVIEWER_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CASESUMM_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CASESUMM_ID_SEQ
  START WITH 95
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CGT_MY_STUDENTS_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CGT_MY_STUDENTS_ID_SEQ
  START WITH 2613
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CGT_NAMEDLIST_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CGT_NAMEDLIST_ID_SEQ
  START WITH 6
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CLICKS_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CLICKS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- COURSEGROUP_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.COURSEGROUP_SEQ
  START WITH 204
  MAXVALUE 999999999999999999999999999
  MINVALUE 20
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- COURSE_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.COURSE_ID_SEQ
  START WITH 43566
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CSA_DETAILS_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.CSA_DETAILS_SEQ
  START WITH 10069108
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- EVAL_MAIN_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.EVAL_MAIN_SEQ
  START WITH 86438
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- EVT_NOTIFY_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.EVT_NOTIFY_SEQ
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- EVT_OPERATORS_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.EVT_OPERATORS_SEQ
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- EVT_PROFILE_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.EVT_PROFILE_SEQ
  START WITH 21
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- EXPL_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.EXPL_SEQ
  START WITH 32368
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- EXTSESSION_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.EXTSESSION_ID_SEQ
  START WITH 40370
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- GROUP_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.GROUP_ID_SEQ
  START WITH 1218
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- GUEST_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.GUEST_ID_SEQ
  START WITH 102368
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- HL_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.HL_ID_SEQ
  START WITH 24707
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.ID_SEQ
  START WITH 6
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- INDEX_WORDS_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.INDEX_WORDS_SEQ
  START WITH 33382
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- ITEM_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.ITEM_ID_SEQ
  START WITH 1087332
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- LO_CON_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.LO_CON_SEQ
  START WITH 4854
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- LO_EDGE_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.LO_EDGE_ID_SEQ
  START WITH 5005
  MAXVALUE 9999999999999999999999999999
  MINVALUE 5000
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- LONGMENU_HEADER_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.LONGMENU_HEADER_ID_SEQ
  START WITH 23
  MAXVALUE 999999999999999999999999999
  MINVALUE 23
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- LONGMENU_ITEMS_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.LONGMENU_ITEMS_ID_SEQ
  START WITH 2575
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- LO_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.LO_SEQ
  START WITH 199
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- LO_USER_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.LO_USER_SEQ
  START WITH 127
  MAXVALUE 999999999999999999999999999
  MINVALUE 25
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- LO2_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.LO2_SEQ
  START WITH 4630
  MAXVALUE 999999999999999999999999999
  MINVALUE 4500
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- LRS_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.LRS_ID_SEQ
  START WITH 3
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- MAIL_MESSAGE_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.MAIL_MESSAGE_ID_SEQ
  START WITH 39541
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- METADATA_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.METADATA_SEQ
  START WITH 854
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- NET_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.NET_ID_SEQ
  START WITH 1357139
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- NET2_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.NET2_ID_SEQ
  START WITH 58195
  MAXVALUE 999999999999999999999999999
  MINVALUE 1000
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- NOITEM_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.NOITEM_ID_SEQ
  START WITH 22
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- PICTUREHLLIST_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.PICTUREHLLIST_SEQ
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- SESSION_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.SESSION_ID_SEQ
  START WITH 1798876
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- TOOL_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.TOOL_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- UNIQUE_CASE_IDENTIFIER_1  (Sequence) 
--
CREATE SEQUENCE CASUS.UNIQUE_CASE_IDENTIFIER_1
  START WITH 5203
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- URL_TOKEN_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.URL_TOKEN_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- USER_ID_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.USER_ID_SEQ
  START WITH 220265
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- USER_SUMMARY_STATEMENTS_SEQ  (Sequence) 
--
CREATE SEQUENCE CASUS.USER_SUMMARY_STATEMENTS_SEQ
  START WITH 803303
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- ACCESS_URL  (Table) 
--
CREATE TABLE CASUS.ACCESS_URL
(
  PIN              VARCHAR2(256 BYTE),
  URL_KEY          VARCHAR2(100 BYTE),
  EMAIL            VARCHAR2(100 BYTE),
  EXPIRATION_DATE  DATE                         DEFAULT SYSDATE,
  USER_ID          NUMBER                       DEFAULT -1,
  PARAM1_ID        NUMBER                       DEFAULT -1,
  PARAM2_ID        NUMBER                       DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ADDCARD_CLINREASON  (Table) 
--
CREATE TABLE CASUS.ADDCARD_CLINREASON
(
  TYPE               NUMBER,
  NAME               VARCHAR2(4000 BYTE),
  CARD_ID            NUMBER,
  CASE_ID            NUMBER,
  SESSION_ID         NUMBER,
  ID                 NUMBER                     DEFAULT -1,
  SUBTYPE            NUMBER                     DEFAULT -1,
  DELETE_FLAG        NUMBER                     DEFAULT 0,
  STATUS             NUMBER                     DEFAULT -1,
  STATUS1            NUMBER                     DEFAULT -1,
  DELETE_CARD        NUMBER                     DEFAULT -1,
  USER_ID            NUMBER                     DEFAULT -1,
  ORDER_NR           NUMBER                     DEFAULT -1,
  INTERNAL_ID        NUMBER                     DEFAULT -1,
  CREATION_DATE      DATE                       DEFAULT SYSDATE,
  MODIFICATION_DATE  DATE                       DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ADDCARD_MOV_CNT  (Table) 
--
CREATE TABLE CASUS.ADDCARD_MOV_CNT
(
  COUNTER     NUMBER                            DEFAULT 0,
  TYPE        NUMBER                            DEFAULT -1,
  CARD_ID     NUMBER                            DEFAULT -1,
  CASE_ID     NUMBER                            DEFAULT -1,
  SESSION_ID  NUMBER                            DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ADMIN_LOG  (Table) 
--
CREATE TABLE CASUS.ADMIN_LOG
(
  USER_ID          NUMBER                       NOT NULL,
  CREATION_DATE    DATE                         DEFAULT SYSDATE,
  ACTION           VARCHAR2(70 BYTE),
  RELATED_ITEM_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- AICC_AU  (Table) 
--
CREATE TABLE CASUS.AICC_AU
(
  ITEM_ID            NUMBER                     DEFAULT 0,
  ORDER_NR           NUMBER                     DEFAULT 0,
  SYSTEM_ID          VARCHAR2(255 BYTE)         DEFAULT '',
  AU_TYPE            VARCHAR2(255 BYTE)         DEFAULT '',
  COMMAND_LINE       VARCHAR2(255 BYTE)         DEFAULT '',
  FILE_NAME          VARCHAR2(400 BYTE)         DEFAULT '',
  MAX_SCORE          NUMBER                     DEFAULT 0,
  MASTERY_SCORE      NUMBER                     DEFAULT 0,
  MAX_TIME_ALLOWED   VARCHAR2(20 BYTE)          DEFAULT '',
  TIME_LIMIT_ACTION  VARCHAR2(255 BYTE)         DEFAULT '',
  SYSTEM_VENDOR      VARCHAR2(255 BYTE)         DEFAULT '',
  CORE_VENDOR        VARCHAR2(255 BYTE)         DEFAULT '',
  WEB_LAUNCH         VARCHAR2(255 BYTE)         DEFAULT '',
  AU_PASSWORD        VARCHAR2(255 BYTE)         DEFAULT '',
  ORIGINAL           LONG
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- AICC_CRS  (Table) 
--
CREATE TABLE CASUS.AICC_CRS
(
  ITEM_ID                     NUMBER            DEFAULT 0,
  CASE_ID                     NUMBER            DEFAULT 0,
  CRS_CREATOR                 VARCHAR2(255 BYTE) DEFAULT '',
  CRS_ID                      VARCHAR2(255 BYTE) DEFAULT '',
  CRS_SYSTEM                  VARCHAR2(255 BYTE) DEFAULT '',
  TITLE                       VARCHAR2(255 BYTE) DEFAULT '',
  CRS_LEVEL                   VARCHAR2(255 BYTE) DEFAULT '',
  MAX_FIELDS_CST              NUMBER            DEFAULT 0,
  MAX_FIELDS_ORT              NUMBER            DEFAULT 0,
  TOTAL_AUS                   NUMBER            DEFAULT 0,
  TOTAL_BLOCKS                NUMBER            DEFAULT 0,
  TOTAL_OBJECTIVES            NUMBER            DEFAULT 0,
  TOTAL_COMPLEX_OBJ           NUMBER            DEFAULT 0,
  CRS_VERSION                 VARCHAR2(255 BYTE) DEFAULT '',
  MAX_NORMAL                  NUMBER            DEFAULT 0,
  DESCRIPTION                 VARCHAR2(4000 BYTE) DEFAULT '',
  CASUS_EXTENSION_EVALUATION  NUMBER            DEFAULT 0,
  ORIGINAL_FILE               LONG
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- AICC_CST  (Table) 
--
CREATE TABLE CASUS.AICC_CST
(
  ITEM_ID     NUMBER                            DEFAULT 0,
  ORDER_NR    NUMBER                            DEFAULT 0,
  CST_BLOCK   VARCHAR2(255 BYTE)                DEFAULT '',
  CST_MEMBER  VARCHAR2(255 BYTE)                DEFAULT '',
  ORIGINAL    LONG
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- AICC_DES  (Table) 
--
CREATE TABLE CASUS.AICC_DES
(
  ITEM_ID       NUMBER                          DEFAULT 0,
  ORDER_NR      NUMBER                          DEFAULT 0,
  SYSTEM_ID     VARCHAR2(255 BYTE)              DEFAULT '',
  DEVELOPER_ID  VARCHAR2(255 BYTE)              DEFAULT '',
  TITLE         VARCHAR2(255 BYTE)              DEFAULT '',
  DESCRIPTION   VARCHAR2(4000 BYTE)             DEFAULT '',
  ORIGINAL      LONG
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- AICC_SESS_PLUGIN  (Table) 
--
CREATE TABLE CASUS.AICC_SESS_PLUGIN
(
  GROUP_ID           NUMBER                     DEFAULT 0,
  MINDIFFTIME        NUMBER                     DEFAULT 300000,
  ENCODING           VARCHAR2(20 BYTE)          DEFAULT 'UTF-8',
  ALWAYSINITSESSION  NUMBER                     DEFAULT 0,
  NAME               VARCHAR2(100 BYTE),
  DESCR              VARCHAR2(1000 BYTE),
  SYSTEM             VARCHAR2(50 BYTE),
  PLUGIN_ID          NUMBER                     DEFAULT -1,
  DEACTIVATED        NUMBER                     DEFAULT 0,
  COMMAND            VARCHAR2(20 BYTE)          DEFAULT 'Command',
  VERSION            VARCHAR2(20 BYTE)          DEFAULT 'Version',
  SESSION_ID         VARCHAR2(20 BYTE)          DEFAULT 'Session_id',
  AICC_DATA          VARCHAR2(20 BYTE)          DEFAULT 'Aicc_data',
  EXT_ACCESS         NUMBER                     DEFAULT 1,
  CONTACT            VARCHAR2(2000 BYTE),
  LOGIN_PREFIX       VARCHAR2(100 BYTE),
  DB                 VARCHAR2(50 BYTE),
  IGNOREEXITSESSION  NUMBER                     DEFAULT 0,
  GETPARAM           VARCHAR2(20 BYTE)          DEFAULT 'GetParam',
  PUTPARAM           VARCHAR2(20 BYTE)          DEFAULT 'PutParam',
  EXITAU             VARCHAR2(20 BYTE)          DEFAULT 'ExitAU',
  RESULT_URL         VARCHAR2(500 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- AICC_SESS_PLUGINS_URLS  (Table) 
--
CREATE TABLE CASUS.AICC_SESS_PLUGINS_URLS
(
  PLUGIN_ID  NUMBER                             DEFAULT -1                    NOT NULL,
  URL        VARCHAR2(500 BYTE)                 NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ANNO_REFS  (Table) 
--
CREATE TABLE CASUS.ANNO_REFS
(
  CASE_ID        NUMBER,
  COURSE_ID      NUMBER,
  USER_ID        NUMBER,
  HAS_BEEN_READ  NUMBER                         DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ANNO_SUMMARYFEEDBACKSTATEMENT  (Table) 
--
CREATE TABLE CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT
(
  COURSE_ID      NUMBER                         DEFAULT -1,
  CASE_ID        NUMBER                         DEFAULT -1,
  CARD_ID        NUMBER                         DEFAULT -1,
  USER_ID        NUMBER                         DEFAULT -1,
  VAL1           NUMBER                         DEFAULT -1,
  VAL2           NUMBER                         DEFAULT -1,
  VAL3           NUMBER                         DEFAULT -1,
  ANNOTATION_ID  NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ANNOTATIONS  (Table) 
--
CREATE TABLE CASUS.ANNOTATIONS
(
  ITEM_ID        NUMBER,
  USER_ID        NUMBER                         DEFAULT -1,
  THREAD_ID      NUMBER                         DEFAULT -1,
  A_PRIORITY     NUMBER,
  A_STATUS       NUMBER,
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  CASE_ID        NUMBER,
  TARGET_ID      NUMBER,
  TARGET_TYPE    VARCHAR2(4 BYTE),
  A_COMMENT      VARCHAR2(4000 BYTE),
  A_TITLE        VARCHAR2(500 BYTE),
  A_PUBLIC       NUMBER,
  DELETE_FLAG    NUMBER                         DEFAULT 0,
  TO_USER_ID     NUMBER                         DEFAULT -1,
  REFERENCE_ID   NUMBER                         DEFAULT -1,
  COURSE_ID      NUMBER                         DEFAULT -1,
  ORIGIN         NUMBER                         DEFAULT -1,
  TYPE           NUMBER                         DEFAULT -1,
  SENT           NUMBER                         DEFAULT -1,
  SUBTYPE        NUMBER                         DEFAULT 0,
  PLAYER_STATUS  NUMBER                         DEFAULT 0,
  ASSIGNEDTO     NUMBER                         DEFAULT -1,
  NOTE           VARCHAR2(4000 BYTE),
  REPLYTO_ID     NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.ANNOTATIONS.TO_USER_ID IS 'special anno for directing msg to a specified user';


--
-- ANNOTATIONS_CASE_REF  (Table) 
--
CREATE TABLE CASUS.ANNOTATIONS_CASE_REF
(
  ANNOTATION_ID  NUMBER                         NOT NULL,
  TARGET_ID      NUMBER                         NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ANS_DETAILS  (Table) 
--
CREATE TABLE CASUS.ANS_DETAILS
(
  ITEM_ID                NUMBER,
  SHOW_CORR_ANS          NUMBER                 DEFAULT 0,
  VARIANT                NUMBER(2)              DEFAULT 0,
  RATING_MECH            NUMBER(2)              DEFAULT 0,
  PEER_GROUP             NUMBER(2)              DEFAULT 0,
  PG_DAYS                NUMBER                 DEFAULT 30,
  PG_MIN_ANSWERS         NUMBER                 DEFAULT 0,
  PG_LAST_RESET_DATE     DATE                   DEFAULT SYSDATE,
  EXAM_PERMUTE_MODE      NUMBER                 DEFAULT 0,
  TUTOR_FEEDBACK         NUMBER                 DEFAULT 0,
  ANSWER_WEIGHT          NUMBER(2,1)            DEFAULT -1,
  TRIGGER_NOTE           NUMBER                 DEFAULT -1,
  SHOW_CORR_ANS_VARIANT  NUMBER                 DEFAULT -1,
  LIMIT                  NUMBER                 DEFAULT -1,
  ITEMEXPLANATION        NUMBER                 DEFAULT -1,
  TUTOR_FEEDBACK_ADDON   VARCHAR2(100 BYTE),
  VALUE                  VARCHAR2(2000 BYTE),
  THRESHOLD              FLOAT(126)             DEFAULT -1,
  MODEL                  VARCHAR2(2000 BYTE),
  ANSWER_RESET           NUMBER                 DEFAULT -1,
  CONFIDENCE             NUMBER(2)              DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.ANS_DETAILS.PG_DAYS IS 'peer group option: number of days analysing user answers for peer group results: "sysdate - pg_days" in sql query';

COMMENT ON COLUMN CASUS.ANS_DETAILS.PG_MIN_ANSWERS IS ' peer group option: minimum number of giver answers before peer group results are shown';

COMMENT ON COLUMN CASUS.ANS_DETAILS.PG_LAST_RESET_DATE IS 'peer group option: it''s the authors choice to reset peergroup results, e.g. the answer changed in a way that counting has to be restarted from pg_last_reset_date';

COMMENT ON COLUMN CASUS.ANS_DETAILS.TUTOR_FEEDBACK IS 'flag for setting possible individual tutor feedback to the student';

COMMENT ON COLUMN CASUS.ANS_DETAILS.CONFIDENCE IS 'collect the confidence/certainty of the users anwser (std = slider)';


--
-- ANSWER_EXPLANATION  (Table) 
--
CREATE TABLE CASUS.ANSWER_EXPLANATION
(
  CASE_ID         NUMBER,
  CARD_ID         NUMBER,
  ANSWER_ITEM_ID  NUMBER,
  SESSION_ID      NUMBER,
  USER_ID         NUMBER,
  VALUE           VARCHAR2(2000 BYTE),
  ID              NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ASSOC_PARENT  (Table) 
--
CREATE TABLE CASUS.ASSOC_PARENT
(
  PARENT_PARENT  NUMBER                         NOT NULL,
  ASSOC_PARENT   NUMBER                         NOT NULL,
  COURSE_ID      NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- AUTHORING_MENUS  (Table) 
--
CREATE TABLE CASUS.AUTHORING_MENUS
(
  NR        NUMBER(10)                          NOT NULL,
  NAME      VARCHAR2(255 BYTE),
  ORDER_NR  NUMBER(2),
  KEY       VARCHAR2(40 BYTE)                   NOT NULL,
  LANG      VARCHAR2(4 BYTE)                    NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- BATCHINITNEWCSESSION_STATUS  (Table) 
--
CREATE TABLE CASUS.BATCHINITNEWCSESSION_STATUS
(
  LAST_MIN  NUMBER                              DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- BIGMEDIA  (Table) 
--
CREATE TABLE CASUS.BIGMEDIA
(
  ITEM_ID    NUMBER,
  ORDER_NR   NUMBER,
  DATA_SIZE  NUMBER,
  DATA       LONG RAW
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CAMPUS_LMU_PROBLEM_20140407  (Table) 
--
CREATE TABLE CASUS.CAMPUS_LMU_PROBLEM_20140407
(
  LOGIN    VARCHAR2(500 BYTE),
  CASE_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CAMPUS_LMU_PROBLEM2_20140407  (Table) 
--
CREATE TABLE CASUS.CAMPUS_LMU_PROBLEM2_20140407
(
  LOGIN    VARCHAR2(500 BYTE),
  CASE_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CAMPUS_LMU_PROB_MAP_20140407  (Table) 
--
CREATE TABLE CASUS.CAMPUS_LMU_PROB_MAP_20140407
(
  SESSION_ID   NUMBER,
  CASE_ID      NUMBER,
  USER_ID_OLD  NUMBER,
  USER_ID_NEW  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CARDADD  (Table) 
--
CREATE TABLE CASUS.CARDADD
(
  CARD_ID   NUMBER,
  TYPE      NUMBER,
  SHOWWHEN  NUMBER,
  CASEID    NUMBER,
  ID        NUMBER,
  VALUE     VARCHAR2(2000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CARDADD_BOX  (Table) 
--
CREATE TABLE CASUS.CARDADD_BOX
(
  ID        NUMBER                              DEFAULT -1                    NOT NULL,
  CARD_ID   NUMBER                              DEFAULT -1,
  CASE_ID   NUMBER                              DEFAULT -1,
  ITEM_ID   NUMBER                              DEFAULT -1,
  TITLE     VARCHAR2(1000 BYTE),
  DISPLAY   NUMBER                              DEFAULT -1,
  CATEGORY  NUMBER                              DEFAULT -1,
  ORDER_NR  NUMBER                              DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CARDADD_COSTS  (Table) 
--
CREATE TABLE CASUS.CARDADD_COSTS
(
  CARD_ID   NUMBER,
  CURR      VARCHAR2(20 BYTE),
  ITEM      VARCHAR2(1000 BYTE),
  NUM       NUMBER,
  ORDER_NR  NUMBER                              DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CARD_CHG  (Table) 
--
CREATE TABLE CASUS.CARD_CHG
(
  ITEM_ID      NUMBER                           DEFAULT 0,
  INFO_ID      NUMBER                           DEFAULT 0,
  QUESTION_ID  NUMBER                           DEFAULT 0,
  ANSWER_ID    NUMBER                           DEFAULT 0,
  MM_ID        NUMBER                           DEFAULT 0,
  EXPERT_ID    NUMBER                           DEFAULT 0,
  CHG_DATE     DATE                             DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CARD_NAV  (Table) 
--
CREATE TABLE CASUS.CARD_NAV
(
  ID               NUMBER                       DEFAULT -1,
  CASE_ID          NUMBER                       DEFAULT -1,
  CARD_ID          NUMBER                       DEFAULT -1,
  TYPE             NUMBER                       DEFAULT -1,
  POSITION         NUMBER                       DEFAULT -1,
  TARGET_ID        NUMBER                       DEFAULT -1,
  TITLE            VARCHAR2(500 BYTE),
  DESCRIPTION      VARCHAR2(4000 BYTE),
  CONDITION        NUMBER                       DEFAULT -1,
  CONDITION_TYPE   NUMBER                       DEFAULT -1,
  CONDITION_VALUE  NUMBER                       DEFAULT -1,
  ID_WITHIN_CARD   VARCHAR2(50 BYTE),
  ORDER_NR         NUMBER                       DEFAULT -1,
  MEDIA_ID         NUMBER                       DEFAULT -1,
  HTML_ID          VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CARD_RULES  (Table) 
--
CREATE TABLE CASUS.CARD_RULES
(
  EXPLANATION  VARCHAR2(1000 BYTE),
  RULE_ID      NUMBER,
  FIELD        VARCHAR2(400 BYTE),
  RULE         VARCHAR2(400 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CARD_RULES_SPEC  (Table) 
--
CREATE TABLE CASUS.CARD_RULES_SPEC
(
  RULE_ID  NUMBER,
  CARD_ID  NUMBER,
  VALUE    VARCHAR2(300 BYTE),
  ID       NUMBER                               DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_ACC  (Table) 
--
CREATE TABLE CASUS.CASE_ACC
(
  CASE_ID  NUMBER,
  USER_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_CODES  (Table) 
--
CREATE TABLE CASUS.CASE_CODES
(
  CASE_ID   NUMBER,
  LIST_ID   NUMBER,
  ORDER_NR  NUMBER,
  VALUE     NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_COMMENTS  (Table) 
--
CREATE TABLE CASUS.CASE_COMMENTS
(
  CASE_ID   NUMBER,
  LIST_ID   NUMBER,
  ORDER_NR  NUMBER,
  VALUE     VARCHAR2(2000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_DEPENDENCIES  (Table) 
--
CREATE TABLE CASUS.CASE_DEPENDENCIES
(
  CASE_ID    NUMBER                             NOT NULL,
  COURSE_ID  NUMBER                             NOT NULL,
  PARENT_ID  NUMBER                             NOT NULL,
  MODE2      NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_ENG_SETTING  (Table) 
--
CREATE TABLE CASUS.CASE_ENG_SETTING
(
  CASE_ID          NUMBER                       NOT NULL,
  INCLUDE_CLICKS   NUMBER                       DEFAULT -1,
  INCLUDE_DDX      NUMBER                       DEFAULT -1,
  ENABLED          NUMBER                       DEFAULT 0,
  INCLUDE_SUMMARY  NUMBER                       DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_FLAGS  (Table) 
--
CREATE TABLE CASUS.CASE_FLAGS
(
  CASE_ID   NUMBER,
  LIST_ID   NUMBER,
  ORDER_NR  NUMBER,
  VALUE     NUMBER                              DEFAULT 0                     NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_INFO_LIST  (Table) 
--
CREATE TABLE CASUS.CASE_INFO_LIST
(
  LIST_ID        NUMBER,
  ORDER_NR       NUMBER,
  DATA_TYPE      VARCHAR2(50 BYTE),
  PARAMETER_1    VARCHAR2(100 BYTE),
  PARAMETER_2    VARCHAR2(100 BYTE),
  LABEL          VARCHAR2(100 BYTE),
  RESULT_PARAMS  NUMBER,
  SHOW           VARCHAR2(50 BYTE),
  SHOW_LIST      NUMBER,
  LANG_DEP       NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_INTERNET  (Table) 
--
CREATE TABLE CASUS.CASE_INTERNET
(
  CASE_ID           NUMBER,
  INFO              VARCHAR2(255 BYTE),
  PREPDATE          DATE,
  MODIFICATIONDATE  DATE,
  LANGUAGE          VARCHAR2(5 BYTE)            DEFAULT '-',
  HTTP_CACHE        VARCHAR2(100 BYTE)          DEFAULT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_LM_LISTS  (Table) 
--
CREATE TABLE CASUS.CASE_LM_LISTS
(
  ITEM_ID  NUMBER                               DEFAULT -1,
  TYPE     NUMBER                               DEFAULT -1,
  LM_ID    NUMBER                               DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_METADATA  (Table) 
--
CREATE TABLE CASUS.CASE_METADATA
(
  CASE_ID             NUMBER                    NOT NULL,
  FIELD               NUMBER                    DEFAULT 0,
  DIFFICULTY          NUMBER                    DEFAULT 0,
  TIME                NUMBER                    DEFAULT 0,
  INT_COMMENT         VARCHAR2(4000 BYTE),
  PAT_NAME            VARCHAR2(100 BYTE),
  PAT_CONSENT         NUMBER                    DEFAULT 0,
  CONT_REV            NUMBER(1)                 DEFAULT 0,
  FORM_REV            NUMBER(1)                 DEFAULT 0,
  DID_REV             NUMBER(1)                 DEFAULT 0,
  LANG                VARCHAR2(10 BYTE)         DEFAULT 'de',
  PATBIRTHDAY         VARCHAR2(20 BYTE),
  KEYWORDS            VARCHAR2(200 BYTE),
  CASEFLAGS           NUMBER                    DEFAULT -1,
  COPYRIGHT           NUMBER                    DEFAULT 0,
  CASE_TYPE           NUMBER                    DEFAULT -1,
  ISSN                VARCHAR2(50 BYTE),
  CASE_TYPE2          NUMBER                    DEFAULT 0,
  CONT_REV_COMM       VARCHAR2(500 BYTE),
  FORM_REV_COMM       VARCHAR2(500 BYTE),
  DID_REV_COMM        VARCHAR2(500 BYTE),
  COPY_COMM           VARCHAR2(500 BYTE),
  EXTERNAL_ID         VARCHAR2(200 BYTE),
  OPEN_NAV            NUMBER                    DEFAULT -1,
  DIAGNOSES           VARCHAR2(500 BYTE),
  TIME_HANDLING       NUMBER(2)                 DEFAULT -1,
  TIME_MESSAGE        VARCHAR2(4000 BYTE),
  PAT_DISPLAY_NAME    VARCHAR2(100 BYTE),
  PAT_ICON_ID         NUMBER                    DEFAULT -1,
  CARD_NAME_HEADLINE  NUMBER                    DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.CASE_METADATA.TIME_HANDLING IS 'how strict is the time handled, future use, at this moment only the message is supported without kicking out a user';

COMMENT ON COLUMN CASUS.CASE_METADATA.TIME_MESSAGE IS 'msg displayed when over time and eoc session flag ot yet set';


--
-- CASE_METADATA_ADD  (Table) 
--
CREATE TABLE CASUS.CASE_METADATA_ADD
(
  CASEID       NUMBER,
  ID           NUMBER                           DEFAULT 0,
  CNX_VAL      NUMBER                           DEFAULT -1,
  RESOURCE_ID  NUMBER                           DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_PROPERTIES  (Table) 
--
CREATE TABLE CASUS.CASE_PROPERTIES
(
  CASE_ID   NUMBER,
  LIST_ID   NUMBER,
  ORDER_NR  NUMBER,
  KEY       NUMBER,
  VALUE     NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_RADIO  (Table) 
--
CREATE TABLE CASUS.CASE_RADIO
(
  CASE_ID   NUMBER                              NOT NULL,
  LIST_ID   NUMBER                              NOT NULL,
  ORDER_NR  NUMBER                              NOT NULL,
  VALUE     NUMBER                              NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_RATING  (Table) 
--
CREATE TABLE CASUS.CASE_RATING
(
  CASE_ID       NUMBER                          DEFAULT -1,
  USER_ID       NUMBER                          DEFAULT -1,
  RATING_VAL    NUMBER                          DEFAULT -1,
  USER_COMMENT  VARCHAR2(4000 BYTE),
  CREATIONDATE  DATE                            DEFAULT SYSDATE,
  SOURCE        NUMBER                          DEFAULT -1,
  ID            NUMBER                          DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_RATING_SUM  (Table) 
--
CREATE TABLE CASUS.CASE_RATING_SUM
(
  CASE_ID         NUMBER                        NOT NULL,
  RATING_OVERALL  NUMBER                        DEFAULT -1,
  RATING_NUM      NUMBER                        DEFAULT -1,
  CREATIONDATE    DATE                          DEFAULT SYSDATE,
  RATING_VAL      FLOAT(126)                    DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_RESOURCES  (Table) 
--
CREATE TABLE CASUS.CASE_RESOURCES
(
  NAMED_ID    VARCHAR2(100 BYTE),
  CODE_ID     NUMBER,
  VALUE       VARCHAR2(2000 BYTE),
  SHORT_DESC  VARCHAR2(2000 BYTE),
  ADD_DESC    VARCHAR2(2000 BYTE),
  LANG        VARCHAR2(2 BYTE)                  DEFAULT '',
  CONTEXT     NUMBER                            DEFAULT 0,
  ID          NUMBER                            DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_REVIEW_REF  (Table) 
--
CREATE TABLE CASUS.CASE_REVIEW_REF
(
  CASE_ID        NUMBER(10)                     DEFAULT -1,
  USER_ID        NUMBER(10)                     DEFAULT -1,
  REVIEW_STATUS  NUMBER(2)                      DEFAULT 0,
  INTERNAL_ID    NUMBER,
  COURSE_ID      NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASES_ADD  (Table) 
--
CREATE TABLE CASUS.CASES_ADD
(
  CASE_ID              NUMBER,
  DESC_FOR_TUTOR       VARCHAR2(4000 BYTE),
  ADDITIONAL_FIELDS    VARCHAR2(255 BYTE),
  DIAGNOSES            VARCHAR2(255 BYTE),
  CARDINAL_SYMPTOMS    VARCHAR2(255 BYTE),
  COPYRIGHT_OK         NUMBER(1),
  COPYRIGHT_DESC       VARCHAR2(1000 BYTE),
  REVIEW_FORMAL        NUMBER(10),
  REVIEW_FORMAL_DESC   VARCHAR2(255 BYTE),
  REVIEW_CONTENT       NUMBER(10),
  REVIEW_CONTENT_DESC  VARCHAR2(255 BYTE),
  REVIEW_PED           NUMBER(10),
  REVIEW_PED_DESC      VARCHAR2(255 BYTE),
  TENTATIVE_DIAGNOSES  VARCHAR2(255 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASES_NET_STRUCTURE_TABLE  (Table) 
--
CREATE TABLE CASUS.CASES_NET_STRUCTURE_TABLE
(
  CASE_ID     NUMBER,
  DU_ID       NUMBER,
  FDG_ID      NUMBER,
  DU_IDX_NR   NUMBER,
  FDG_IDX_NR  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASES_STRUCTURE_CARDNUM_TEST  (Table) 
--
CREATE TABLE CASUS.CASES_STRUCTURE_CARDNUM_TEST
(
  ITEM_ID       NUMBER                          NOT NULL,
  NUM_OF_CARDS  NUMBER                          DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASES_STRUCTURE_TABLE  (Table) 
--
CREATE TABLE CASUS.CASES_STRUCTURE_TABLE
(
  CASE_ID       NUMBER,
  NUM_OF_CARDS  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_SUMM_COMP  (Table) 
--
CREATE TABLE CASUS.CASE_SUMM_COMP
(
  CASE_ID    NUMBER                             DEFAULT -1,
  ORDER_NR   NUMBER                             DEFAULT -1,
  COMPONENT  NUMBER                             DEFAULT -1,
  ID         NUMBER                             DEFAULT -1,
  CONF_ID    NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_SUMM_CONF  (Table) 
--
CREATE TABLE CASUS.CASE_SUMM_CONF
(
  CASE_ID       NUMBER                          DEFAULT -1,
  FORMAT        NUMBER                          DEFAULT 1,
  DISPLAY_SUMM  NUMBER                          DEFAULT -1,
  DYN_CONF      NUMBER                          DEFAULT 0,
  CONF_ID       NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASES_VIEW_TABLE  (Table) 
--
CREATE TABLE CASUS.CASES_VIEW_TABLE
(
  ITEM_ID               NUMBER,
  TYPE                  CHAR(4 BYTE),
  NAME                  VARCHAR2(255 BYTE),
  VERSION               NUMBER(10),
  DELETE_FLAG           NUMBER                  DEFAULT 0,
  USER_ID               NUMBER                  DEFAULT 0,
  INDEXED               NUMBER(1)               DEFAULT 0,
  CASEFLAGS             NUMBER,
  FIELD                 NUMBER,
  SUBFIELD              NUMBER,
  AUTHORNAME            VARCHAR2(255 BYTE),
  AUTHORPRENAME         VARCHAR2(255 BYTE),
  AUTHORINSTITUTION     VARCHAR2(255 BYTE),
  PATIENTDATA           NUMBER,
  PATIENTAGE            NUMBER,
  CASEDESCRIPTION       VARCHAR2(255 BYTE),
  ADMISSIONDATE         DATE,
  TIME                  NUMBER,
  DIFFICULTY            NUMBER,
  CASECOMMENT           VARCHAR2(255 BYTE),
  CASEHYPERLINKS        NUMBER,
  EVALUATION            NUMBER,
  VARARRAY_COUNT        NUMBER,
  NETID                 NUMBER,
  EXTRADATA             NUMBER,
  CREATIONDATE          DATE,
  LASTMODIFICATIONDATE  DATE,
  AUTHORDATA            NUMBER,
  UNUSED1               NUMBER,
  UNUSED2               NUMBER,
  UNUSED3               NUMBER,
  CODE_ID               NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASE_TARGET_GROUP  (Table) 
--
CREATE TABLE CASUS.CASE_TARGET_GROUP
(
  CASE_ID       NUMBER                          NOT NULL,
  TARGET_GROUP  NUMBER                          NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASUS_DB_CASES_IDS  (Table) 
--
CREATE TABLE CASUS.CASUS_DB_CASES_IDS
(
  ITEM_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_COURSE_LASTUPDATE  (Table) 
--
CREATE TABLE CASUS.C_COURSE_LASTUPDATE
(
  COURSE_ID    NUMBER,
  LAST_UPDATE  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CERTIFICATE  (Table) 
--
CREATE TABLE CASUS.CERTIFICATE
(
  NAME          VARCHAR2(300 BYTE),
  MATRNUM       VARCHAR2(100 BYTE),
  INSTITUTION   VARCHAR2(100 BYTE),
  TERM          VARCHAR2(50 BYTE),
  MODULENAME    VARCHAR2(300 BYTE),
  CERTTYPE      NUMBER,
  CREATIONDATE  DATE                            DEFAULT SYSDATE,
  USERID        NUMBER                          NOT NULL,
  MODULEID      NUMBER                          NOT NULL,
  TIME          NUMBER                          DEFAULT -1,
  NUM_CASES     NUMBER                          DEFAULT -1,
  ECTS          NUMBER                          DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_GROUP  (Table) 
--
CREATE TABLE CASUS.C_GROUP
(
  GROUP_ID                 NUMBER,
  CREATION_DATE            DATE                 DEFAULT sysdate,
  NAME                     VARCHAR2(255 BYTE),
  INSTITUTION              VARCHAR2(100 BYTE),
  DESCRIPTION              VARCHAR2(200 BYTE),
  DOMAIN                   VARCHAR2(2000 BYTE),
  MAX_AUTHORS              NUMBER               DEFAULT -1,
  MAX_USERS                NUMBER               DEFAULT -1,
  COMMERCIAL               NUMBER               DEFAULT 0,
  DELETE_FLAG              NUMBER               DEFAULT 0,
  LOCKED                   NUMBER               DEFAULT 0,
  PASSWORD                 VARCHAR2(20 BYTE),
  INHERIT_USERS            NUMBER               DEFAULT 0,
  PARENT_ID                NUMBER               NOT NULL,
  INTERFACE                NUMBER(2)            DEFAULT 0,
  PROJECT_ID               NUMBER               DEFAULT 1,
  USERS_GROUP              NUMBER               DEFAULT -1,
  LANGUAGE                 VARCHAR2(10 BYTE)    DEFAULT '',
  CONTEXT                  NUMBER               DEFAULT 0,
  EMAIL_REG                NUMBER(1)            DEFAULT 0,
  IMG_URL                  VARCHAR2(50 BYTE)    DEFAULT '',
  SUBCONTEXT               NUMBER               DEFAULT 0,
  LEGREQUIRED              NUMBER               DEFAULT 1,
  ALLOWPINS                NUMBER               DEFAULT 0,
  LANGSWITCH               NUMBER               DEFAULT 1,
  GUESTALLOWED             NUMBER               DEFAULT 0,
  GROUP_URL                VARCHAR2(200 BYTE),
  SHOW_DEMOCOURSE          NUMBER(1)            DEFAULT 0,
  USER_GROUP               NUMBER               DEFAULT -1,
  PRINT_MATRIX             NUMBER               DEFAULT 0,
  PINLOGINENABLED          NUMBER               DEFAULT 0,
  COUNTRY                  VARCHAR2(10 BYTE)    DEFAULT '',
  STATE                    VARCHAR2(10 BYTE)    DEFAULT '',
  COUNTRY2                 VARCHAR2(10 BYTE)    DEFAULT '',
  STARTPAGE_COMM           VARCHAR2(4000 BYTE),
  STARTPAGE_ACT            VARCHAR2(4000 BYTE),
  DEFAULT_EVAL             VARCHAR2(200 BYTE),
  CASESELPAGE_ACT          VARCHAR2(4000 BYTE),
  DEL_ACCOUNTS_YRS         NUMBER               DEFAULT 10,
  EXAM_STARTPAGE_COMM      VARCHAR2(4000 BYTE),
  EXAM_STARTPAGE_ACT       VARCHAR2(4000 BYTE),
  EXAM_CASESELPAGE_ACT     VARCHAR2(4000 BYTE),
  CREDENTIALLOGINDISABLED  NUMBER(1)            DEFAULT 0,
  LRS                      VARCHAR2(4000 BYTE),
  LRS_LOG_LEVEL            NUMBER               DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.C_GROUP.GROUP_URL IS 'url of the group, e.g. http://elsevier.de';

COMMENT ON COLUMN CASUS.C_GROUP.SHOW_DEMOCOURSE IS 'will show demo link on loginpage 0 or 1 boolean';

COMMENT ON COLUMN CASUS.C_GROUP.COUNTRY IS 'can be deleted later on when all apps are updated';

COMMENT ON COLUMN CASUS.C_GROUP.CREDENTIALLOGINDISABLED IS 'hides credentials on homepage (login and password) when true (=1)';

COMMENT ON COLUMN CASUS.C_GROUP.LRS IS 'LRS uri with usercrdentials coded in url';

COMMENT ON COLUMN CASUS.C_GROUP.LRS_LOG_LEVEL IS 'log level for xapi LRS statements';


--
-- C_GROUP_EMAILDOM  (Table) 
--
CREATE TABLE CASUS.C_GROUP_EMAILDOM
(
  GROUP_ID  NUMBER                              NOT NULL,
  DOMAIN    VARCHAR2(100 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_GROUP_SUBGROUPS  (Table) 
--
CREATE TABLE CASUS.C_GROUP_SUBGROUPS
(
  GROUP_ID   NUMBER                             NOT NULL,
  PARENT_ID  NUMBER                             NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_GROUP_USERS  (Table) 
--
CREATE TABLE CASUS.C_GROUP_USERS
(
  GROUP_ID  NUMBER,
  USER_ID   NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CG_TUTORS_MY_STUDENTS  (Table) 
--
CREATE TABLE CASUS.CG_TUTORS_MY_STUDENTS
(
  INTERNAL_ID        NUMBER,
  TUTOR_ID           NUMBER,
  COURSE_ID          NUMBER,
  COURSE_GROUP_ID    NUMBER,
  USER_ID            NUMBER,
  CREATION_DATE      DATE                       DEFAULT sysdate,
  MODIFICATION_DATE  DATE                       DEFAULT sysdate,
  PARENT_ID          NUMBER                     DEFAULT -1,
  USER_LOGIN         VARCHAR2(200 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CG_TUTORS_MY_STUDENTS_CHG  (Table) 
--
CREATE TABLE CASUS.CG_TUTORS_MY_STUDENTS_CHG
(
  INTERNAL_ID        NUMBER,
  TUTOR_ID           NUMBER,
  COURSE_ID          NUMBER,
  COURSE_GROUP_ID    NUMBER,
  USER_ID            NUMBER,
  CREATION_DATE      DATE,
  MODIFICATION_DATE  DATE,
  ACTION             NUMBER                     DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CG_TUTORS_NAMED_LISTS  (Table) 
--
CREATE TABLE CASUS.CG_TUTORS_NAMED_LISTS
(
  INTERNAL_ID        NUMBER,
  LIST_NAME          VARCHAR2(250 BYTE),
  START_DATE         DATE                       DEFAULT null,
  END_DATE           DATE                       DEFAULT null,
  ENABLED            NUMBER                     DEFAULT 1,
  AUTO_DELETE        NUMBER                     DEFAULT 0,
  TUTOR_ID           NUMBER                     DEFAULT -1,
  CREATION_DATE      DATE                       DEFAULT sysdate,
  MODIFICATION_DATE  DATE                       DEFAULT sysdate,
  PUBLIC_LIST        NUMBER                     DEFAULT 1,
  GROUP_ID           NUMBER                     DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CLINREASON_LIST  (Table) 
--
CREATE TABLE CASUS.CLINREASON_LIST
(
  ITEM_ID           NUMBER                      DEFAULT -1,
  LANGUAGE          VARCHAR2(5 BYTE),
  NAME              VARCHAR2(4000 BYTE),
  ITEM_NOTE         VARCHAR2(2000 BYTE),
  ITEM_TYPE         VARCHAR2(10 BYTE)           DEFAULT -1,
  ITEM_LEVEL        NUMBER                      DEFAULT -1,
  CODE              VARCHAR2(100 BYTE),
  MESH_UI           VARCHAR2(20 BYTE),
  SOURCE            VARCHAR2(20 BYTE),
  ITEM_DESCRIPTION  VARCHAR2(2000 BYTE),
  MESH_EC           VARCHAR2(500 BYTE),
  MESH_CATEGORY     VARCHAR2(500 BYTE),
  IGNORE            NUMBER                      DEFAULT 0,
  CREATION_DATE     DATE                        DEFAULT SYSDATE,
  SYNDROME          NUMBER                      DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CLINREASON_LIST_SYN  (Table) 
--
CREATE TABLE CASUS.CLINREASON_LIST_SYN
(
  ITEM_ID        NUMBER,
  NAME           VARCHAR2(1000 BYTE),
  ID             NUMBER                         DEFAULT -1,
  LANG           VARCHAR2(2 BYTE)               DEFAULT 'EN',
  RATING_WEIGHT  FLOAT(126)                     DEFAULT 1,
  SOURCE         VARCHAR2(10 BYTE)              DEFAULT 'MESH',
  IGNORE         NUMBER                         DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CLINREASON_RATE  (Table) 
--
CREATE TABLE CASUS.CLINREASON_RATE
(
  NAME       VARCHAR2(4000 BYTE),
  RATING     NUMBER                             DEFAULT -1,
  RATE_DATE  DATE                               DEFAULT SYSDATE,
  RATER_ID   NUMBER                             DEFAULT -1,
  TYPE       NUMBER                             DEFAULT -1,
  CASE_ID    NUMBER                             DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CME_CASE_REF  (Table) 
--
CREATE TABLE CASUS.CME_CASE_REF
(
  CASE_ID             NUMBER                    NOT NULL,
  USER_ID             NUMBER                    NOT NULL,
  COURSE_ID           NUMBER                    DEFAULT 0,
  BOOKED              NUMBER                    DEFAULT 0,
  ENDCASE             NUMBER                    DEFAULT 0,
  CME_POINTS          NUMBER                    DEFAULT 0,
  CORRECT             NUMBER                    DEFAULT 0,
  TOTAL_QUESTIONS     NUMBER                    DEFAULT 0,
  SOLUTIONS_SHOWN     NUMBER                    DEFAULT 0,
  SESSION_COUNTER     NUMBER                    DEFAULT 0,
  END_DATE            DATE,
  CERTIFICATE         NUMBER                    DEFAULT 0,
  NAME                VARCHAR2(255 BYTE),
  FIRSTNAME           VARCHAR2(255 BYTE),
  TITLE               VARCHAR2(255 BYTE),
  ARZTNUMMER          NUMBER                    DEFAULT 0,
  EFN                 NUMBER                    DEFAULT 0,
  STREET              VARCHAR2(255 BYTE)        DEFAULT '',
  CITY                VARCHAR2(255 BYTE)        DEFAULT '',
  STREETNUMBER        VARCHAR2(50 BYTE)         DEFAULT '',
  ZIPCODE             NUMBER                    DEFAULT 0,
  LAEK_NUMMER         NUMBER                    DEFAULT 0,
  SIGNATURE1          VARCHAR2(255 BYTE)        DEFAULT '',
  SIGNATURE2          VARCHAR2(255 BYTE)        DEFAULT '',
  NUM_OVERFLOW_DUMMY  NUMBER                    DEFAULT 0,
  TRANSMITTED         NUMBER                    DEFAULT 0,
  CREDITS100          NUMBER                    DEFAULT -1,
  CREDITSX            NUMBER                    DEFAULT -1,
  THRESHOLD           NUMBER                    DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CODES  (Table) 
--
CREATE TABLE CASUS.CODES
(
  ITEM_ID    NUMBER                             NOT NULL,
  DATA_SIZE  NUMBER,
  DATA       LONG
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE  (Table) 
--
CREATE TABLE CASUS.COURSE
(
  ID                    NUMBER                  NOT NULL,
  TUTOR                 NUMBER                  NOT NULL,
  NAME                  VARCHAR2(500 BYTE),
  HOURS                 NUMBER,
  DELETE_FLAG           NUMBER(1)               DEFAULT 0,
  START_DATE            DATE                    DEFAULT sysdate,
  END_DATE              DATE                    DEFAULT sysdate-1,
  DEFAULT_CRITERIA      NUMBER(2)               DEFAULT 1,
  MIN_CASES             NUMBER                  DEFAULT 0,
  EVALFILE              VARCHAR2(100 BYTE),
  DO_EVALUATION         CHAR(1 BYTE)            DEFAULT 1,
  AUTHOR_VIEW           CHAR(1 BYTE)            DEFAULT 0,
  COURSECOMMENT         VARCHAR2(500 BYTE),
  EMAIL                 VARCHAR2(255 BYTE),
  TYPE                  NUMBER                  DEFAULT 0                     NOT NULL,
  SUPPORTED             NUMBER(2)               DEFAULT 0,
  GROUP_ID              NUMBER                  DEFAULT 0,
  PROTEST_ENABLED       NUMBER(2)               DEFAULT 0,
  COMMENT_EXTERNAL      VARCHAR2(1000 BYTE),
  HAS_FORUM             NUMBER(1)               DEFAULT 0,
  ENGINE                VARCHAR2(50 BYTE)       DEFAULT NULL,
  SUPPRESSFEEDBACK      NUMBER(1)               DEFAULT 0,
  ANSWERALWAYSEDITABLE  NUMBER(1)               DEFAULT 0,
  SELF_REGISTER         NUMBER(1)               DEFAULT 0,
  EXAM_USER_FILE        VARCHAR2(255 BYTE),
  RESS_SESS             NUMBER(1)               DEFAULT 0,
  EVALMODE              NUMBER                  DEFAULT 0,
  EXTERNAL_ID           VARCHAR2(4000 BYTE)     DEFAULT NULL,
  SHOWFEEDBACK_WHEN     NUMBER                  DEFAULT -1,
  VERSION               NUMBER                  DEFAULT 4,
  SHOW_SUCC             NUMBER                  DEFAULT 0,
  CERT_MODE             NUMBER                  DEFAULT -1,
  ENABLEDYNAMIC         NUMBER                  DEFAULT 0,
  COMMENT_ENABLED       NUMBER                  DEFAULT 0,
  RELATED_ID            NUMBER                  DEFAULT -1,
  PERMUTATION           NUMBER                  DEFAULT -1,
  RULESFORCOURSE        NUMBER                  DEFAULT -1,
  TIMEZONE              VARCHAR2(250 BYTE),
  SHOW_SUCC_IN_REPORTS  NUMBER                  DEFAULT 0,
  SOCIAL_NETWORK        NUMBER                  DEFAULT -1,
  LO_MODE               NUMBER                  DEFAULT -1,
  RATE_ALLOWED          NUMBER                  DEFAULT 0,
  TREE_NAV              NUMBER                  DEFAULT 0,
  APPLY_RULES           INTEGER                 DEFAULT 0,
  RELATION              NUMBER                  DEFAULT -1,
  ENABLE_DISC           NUMBER                  DEFAULT 0,
  ENABLE_ENGAGEMENT     NUMBER                  DEFAULT 0,
  ENABLE_REVIEWER_DISC  NUMBER(2)               DEFAULT 0,
  EXAM_REPORT_SCORING   NUMBER(1)               DEFAULT 0,
  COURSE_ICON           NUMBER                  DEFAULT -1,
  IS_ARCHIVE            NUMBER(2)               DEFAULT 0,
  SUCCESS_FOR_NCAD      NUMBER                  DEFAULT -1,
  TOOLBAR_WARN          NUMBER                  DEFAULT -1,
  CR_MODE               NUMBER                  DEFAULT -1,
  SEARCHABLE            NUMBER                  DEFAULT -1,
  SEARCH_FIELDS         VARCHAR2(2000 BYTE),
  ECTS                  NUMBER                  DEFAULT -1,
  UNBOOK_MODE           NUMBER                  DEFAULT 0,
  LANGUAGE              VARCHAR2(10 BYTE),
  LRS                   VARCHAR2(4000 BYTE),
  LRS_LOG_LEVEL         NUMBER                  DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.COURSE.EXTERNAL_ID IS 'external identifier for courses (e.g. Elsevier module id)...';

COMMENT ON COLUMN CASUS.COURSE.ENABLE_REVIEWER_DISC IS 'reviewer discussion, based on feedback allow to see feedback of other reviewers';

COMMENT ON COLUMN CASUS.COURSE.EXAM_REPORT_SCORING IS 'special medu case level scoring 0=normal, 1= medu Val Lang scoring, 2=?';

COMMENT ON COLUMN CASUS.COURSE.IS_ARCHIVE IS 'archive courses are not included in reports precalculation';

COMMENT ON COLUMN CASUS.COURSE.LRS IS 'LRS uri with usercrdentials coded in url';

COMMENT ON COLUMN CASUS.COURSE.LRS_LOG_LEVEL IS 'log level for xapi LRS statements';


--
-- COURSE_ACC  (Table) 
--
CREATE TABLE CASUS.COURSE_ACC
(
  COURSE_ID  NUMBER,
  USER_ID    NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_CASE_REF  (Table) 
--
CREATE TABLE CASUS.COURSE_CASE_REF
(
  COURSE_ID             NUMBER                  NOT NULL,
  CASE_ID               NUMBER                  NOT NULL,
  ORDER_NR              NUMBER(6),
  NUM_OF_CARDS          VARCHAR2(40 BYTE),
  CRITERIA_TYPE         NUMBER                  DEFAULT 0,
  TIME_THRESHOLD        NUMBER                  DEFAULT 0,
  CARD_THRESHOLD        NUMBER                  DEFAULT 0,
  SUCCESS_THRESHOLD     NUMBER                  DEFAULT 0,
  STARTDATE             DATE                    DEFAULT to_date('01.01.1990','DD.MM.YYYY'),
  SUPPRESSFEEDBACK      NUMBER(1)               DEFAULT 0,
  ENDDATE               DATE                    DEFAULT null,
  ANSWERALWAYSEDITABLE  NUMBER(1)               DEFAULT 0,
  PRICE                 NUMBER                  DEFAULT 0,
  PARENT_ID             NUMBER                  DEFAULT -1,
  RULESFORCOURSE        NUMBER                  DEFAULT -1,
  SHOW_SUCCESS          NUMBER                  DEFAULT -1,
  SHOW_IN_REPORTS       NUMBER                  DEFAULT -1,
  RESET_SESSION         NUMBER                  DEFAULT -1,
  MODIFICATION_DATE     DATE                    DEFAULT SYSDATE,
  CREATION_DATE         DATE                    DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.COURSE_CASE_REF.SUPPRESSFEEDBACK IS 'Boolean value: 0 = false, 1 = true';


--
-- COURSE_CASE_REF_CHG  (Table) 
--
CREATE TABLE CASUS.COURSE_CASE_REF_CHG
(
  COURSE_ID    NUMBER,
  CASE_ID      NUMBER,
  CASE_ID_NEW  NUMBER                           DEFAULT 0,
  DELETED      NUMBER                           DEFAULT 0,
  MODIFIED     DATE                             DEFAULT SYSDATE,
  USER_ID      NUMBER                           DEFAULT UID
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_CASES_RULES  (Table) 
--
CREATE TABLE CASUS.COURSE_CASES_RULES
(
  COURSE_ID  NUMBER                             NOT NULL,
  TYPE       NUMBER                             NOT NULL,
  VALUE      NUMBER                             DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_CHG  (Table) 
--
CREATE TABLE CASUS.COURSE_CHG
(
  ITEM_ID   NUMBER,
  CREATED   DATE                                DEFAULT SYSDATE,
  MODIFIED  DATE                                DEFAULT SYSDATE,
  BACKUPED  DATE                                DEFAULT TO_DATE('01-01-1900','DD-MM-YYYY'),
  STREAMED  DATE                                DEFAULT TO_DATE('01-01-1900','DD-MM-YYYY')
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_CHGLOG  (Table) 
--
CREATE TABLE CASUS.COURSE_CHGLOG
(
  COURSE_ID       NUMBER,
  ACTION          VARCHAR2(10 BYTE),
  MODIFIED        DATE                          DEFAULT SYSDATE,
  NAME            VARCHAR2(1000 BYTE)           DEFAULT NULL,
  EXTERN_COMMENT  VARCHAR2(2000 BYTE)           DEFAULT NULL,
  INTERN_COMMENT  VARCHAR2(2000 BYTE)           DEFAULT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_CONFERENCING  (Table) 
--
CREATE TABLE CASUS.COURSE_CONFERENCING
(
  COURSE_ID      NUMBER                         DEFAULT -1,
  USER_ID        NUMBER                         DEFAULT -1,
  VC_ROOM        VARCHAR2(200 BYTE),
  VC_STATUS      NUMBER                         DEFAULT -1,
  VIDEO          NUMBER                         DEFAULT -1,
  AUDIO          NUMBER                         DEFAULT -1,
  CHAT           NUMBER                         DEFAULT -1,
  SCREENSHARING  NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.COURSE_CONFERENCING.VC_STATUS IS 'more scripting or other meta data for vc';


--
-- COURSE_CR_SETTINGS  (Table) 
--
CREATE TABLE CASUS.COURSE_CR_SETTINGS
(
  COURSE_ID       NUMBER,
  EXP_FB_MODE     NUMBER,
  PEER_FB_MODE    NUMBER,
  NO_DIAGNOSIS    NUMBER                        DEFAULT 0,
  HIDE_DASHBOARD  NUMBER                        DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.COURSE_CR_SETTINGS.EXP_FB_MODE IS '0=process-oriented, 1=outcome-oriented (end fb)';


--
-- COURSE_GROUP_DOMAINS_CHG  (Table) 
--
CREATE TABLE CASUS.COURSE_GROUP_DOMAINS_CHG
(
  COURSE_ID  NUMBER                             DEFAULT -1,
  GROUP_NR   NUMBER                             DEFAULT NULL,
  DOMAIN     VARCHAR2(100 BYTE),
  CHANGE     VARCHAR2(10 BYTE),
  WHEN       DATE                               DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_GROUP_MAPPING_TMP  (Table) 
--
CREATE TABLE CASUS.COURSE_GROUP_MAPPING_TMP
(
  COURSE_ID   NUMBER                            DEFAULT -1,
  GROUP_NR    NUMBER                            DEFAULT 0,
  C_GROUP_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_GROUPS  (Table) 
--
CREATE TABLE CASUS.COURSE_GROUPS
(
  COURSE_ID     NUMBER                          DEFAULT -1,
  GROUP_NR      NUMBER                          DEFAULT 0,
  NAME          VARCHAR2(200 BYTE),
  DESCRIPTION   VARCHAR2(2000 BYTE),
  PRINT_MATRIX  NUMBER(1)                       DEFAULT 1,
  ENABLED       NUMBER(1)                       DEFAULT 1,
  ID            NUMBER                          DEFAULT 0,
  RELATION      NUMBER                          DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.COURSE_GROUPS.GROUP_NR IS 'groupNr muss >= 0 sein!!! (default ist jetzt 0, nicht -1)';


--
-- COURSE_GROUPS_CHG  (Table) 
--
CREATE TABLE CASUS.COURSE_GROUPS_CHG
(
  COURSE_ID     NUMBER                          DEFAULT -1,
  GROUP_NR      NUMBER                          DEFAULT NULL,
  NAME          VARCHAR2(200 BYTE),
  DESCRIPTION   VARCHAR2(2000 BYTE),
  PRINT_MATRIX  NUMBER(1)                       DEFAULT 1,
  CHANGE        VARCHAR2(10 BYTE),
  WHEN          DATE                            DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_GROUP_TUTORS  (Table) 
--
CREATE TABLE CASUS.COURSE_GROUP_TUTORS
(
  COURSE_ID      NUMBER                         DEFAULT -1,
  GROUP_NR       NUMBER                         DEFAULT -1,
  TUTOR_ID       NUMBER,
  COURSEGROUPID  NUMBER,
  ORDER_NR       NUMBER                         DEFAULT -1,
  ROLE           NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_GROUP_TUTORS_CHG  (Table) 
--
CREATE TABLE CASUS.COURSE_GROUP_TUTORS_CHG
(
  COURSE_ID  NUMBER                             DEFAULT -1,
  GROUP_NR   NUMBER                             DEFAULT NULL,
  TUTOR_ID   NUMBER,
  CHANGE     VARCHAR2(10 BYTE),
  WHEN       DATE                               DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_SHIBBOLETH_ACC  (Table) 
--
CREATE TABLE CASUS.COURSE_SHIBBOLETH_ACC
(
  COURSE_ID     NUMBER,
  ORDER_NR      NUMBER,
  EXPRGROUP_NR  NUMBER                          DEFAULT 0,
  EXPR_TYPE     NUMBER                          DEFAULT 0,
  KEY_NAME      VARCHAR2(50 BYTE),
  KEY_VALUE     VARCHAR2(50 BYTE),
  CONTROL       NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_SHIBBOLETH_ACC_EXPR  (Table) 
--
CREATE TABLE CASUS.COURSE_SHIBBOLETH_ACC_EXPR
(
  EXPR_TYPE  NUMBER,
  EXPR_DESC  VARCHAR2(10 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_SHIBBOLETH_PROFILE_REF  (Table) 
--
CREATE TABLE CASUS.COURSE_SHIBBOLETH_PROFILE_REF
(
  COURSE_ID   NUMBER                            DEFAULT -1,
  PROFILE_ID  NUMBER                            DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_STUDENT_REF  (Table) 
--
CREATE TABLE CASUS.COURSE_STUDENT_REF
(
  COURSE_ID        NUMBER                       DEFAULT 13139                 NOT NULL,
  STUDENT_ID       NUMBER                       NOT NULL,
  GROUP_NR         NUMBER(12)                   DEFAULT -1,
  COMPUTER_NR      NUMBER                       DEFAULT -1,
  IS_REVIEWER      NUMBER(1)                    DEFAULT 0,
  PRINT_MSG        NUMBER                       DEFAULT 0,
  INVITED          NUMBER                       DEFAULT 0,
  EXPIRATION_DATE  DATE,
  PIN              VARCHAR2(500 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.COURSE_STUDENT_REF.GROUP_NR IS '-> ref to c_group (group_id) now !!!';


--
-- COURSE_STUDENT_REF_CHG  (Table) 
--
CREATE TABLE CASUS.COURSE_STUDENT_REF_CHG
(
  COURSE_ID       NUMBER,
  STUDENT_ID      NUMBER,
  STUDENT_ID_NEW  NUMBER                        DEFAULT 0,
  DELETED         NUMBER                        DEFAULT 0,
  MODIFIED        DATE                          DEFAULT SYSDATE,
  USER_ID         NUMBER                        DEFAULT UID
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_STUDENT_REF_DIS  (Table) 
--
CREATE TABLE CASUS.COURSE_STUDENT_REF_DIS
(
  COURSE_ID    NUMBER                           DEFAULT 0                     NOT NULL,
  STUDENT_ID   NUMBER                           NOT NULL,
  GROUP_NR     NUMBER(12)                       DEFAULT -1,
  COMPUTER_NR  NUMBER(3)                        DEFAULT NULL,
  IS_REVIEWER  NUMBER(1)                        DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_UPDATES_LOG  (Table) 
--
CREATE TABLE CASUS.COURSE_UPDATES_LOG
(
  ID    NUMBER,
  TIME  DATE                                    DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_PERMISSION  (Table) 
--
CREATE TABLE CASUS.C_PERMISSION
(
  PERM_ID  NUMBER(10),
  MODUL    VARCHAR2(255 BYTE),
  PERM     VARCHAR2(255 BYTE),
  ACTION   VARCHAR2(255 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CREATE$JAVA$LOB$TABLE  (Table) 
--
CREATE TABLE CASUS.CREATE$JAVA$LOB$TABLE
(
  NAME      VARCHAR2(700 BYTE),
  LOB       BLOB,
  LOADTIME  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_ROLE  (Table) 
--
CREATE TABLE CASUS.C_ROLE
(
  ROLE_ID  NUMBER(10),
  NAME     VARCHAR2(255 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CS_ALL_MH_NAMES_VIEW_TABLE  (Table) 
--
CREATE TABLE CASUS.CS_ALL_MH_NAMES_VIEW_TABLE
(
  CASE_ID         NUMBER                        DEFAULT -1,
  CASE_NAME       VARCHAR2(4000 BYTE),
  CASE_USER_ID    NUMBER                        DEFAULT -1,
  CASE_GROUP_ID   NUMBER                        DEFAULT -1,
  CARD_ID         NUMBER                        DEFAULT -1,
  CARD_NAME       VARCHAR2(4000 BYTE),
  TYPE            NUMBER                        DEFAULT -1,
  MEDIAHEADER_ID  NUMBER                        DEFAULT -1,
  PARENT_ID       NUMBER                        DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_ACTION  (Table) 
--
CREATE TABLE CASUS.C_SESSION_ACTION
(
  SESSION_ID       NUMBER,
  ACTION           NUMBER,
  ACTION_MODIFIER  NUMBER,
  TIMESTAMP        DATE                         DEFAULT SYSDATE,
  COURSE_ID        NUMBER                       DEFAULT -1,
  AGENT            VARCHAR2(200 BYTE)           DEFAULT '-',
  INTERNAL_ID      NUMBER                       DEFAULT 0,
  HTTPSESSION      VARCHAR2(50 BYTE)            DEFAULT '',
  USER_ID          NUMBER                       DEFAULT 0,
  CLIENTIP         VARCHAR2(20 BYTE)            DEFAULT '',
  CASE_ID          NUMBER                       DEFAULT -1,
  GROUP_ID         NUMBER                       DEFAULT -1,
  SHOWME           NUMBER                       DEFAULT -1,
  PORTAL_ID        NUMBER                       DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_ACTION_DESC  (Table) 
--
CREATE TABLE CASUS.C_SESSION_ACTION_DESC
(
  ACTION           NUMBER,
  ACTION_MODIFIER  NUMBER,
  ACTION_DESC      VARCHAR2(20 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_ACTION_DETAILS  (Table) 
--
CREATE TABLE CASUS.C_SESSION_ACTION_DETAILS
(
  INTERNAL_ID      NUMBER                       DEFAULT -1,
  ACTION           NUMBER                       DEFAULT -1,
  ACTION_MODIFIER  NUMBER                       DEFAULT -1,
  TIMESTAMP        DATE                         DEFAULT SYSDATE,
  USER_ID          NUMBER                       DEFAULT -1,
  CASE_ID          NUMBER                       DEFAULT -1,
  COURSE_ID        NUMBER                       DEFAULT -1,
  GROUP_ID         NUMBER                       DEFAULT -1,
  SESSION_ID       NUMBER                       DEFAULT -1,
  REF_ID           NUMBER                       DEFAULT -1,
  REF2_ID          NUMBER                       DEFAULT -1,
  DATA_TYPE        NUMBER                       DEFAULT -1,
  DATA             VARCHAR2(4000 BYTE),
  NUMERIC_DATA     NUMBER                       DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          100M
            NEXT             25M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_ACTION_FAVOURITES  (Table) 
--
CREATE TABLE CASUS.C_SESSION_ACTION_FAVOURITES
(
  ACTION           NUMBER,
  TIMESTAMP        DATE                         DEFAULT SYSDATE,
  TARGET_ID        NUMBER                       DEFAULT -1,
  USER_ID          NUMBER                       DEFAULT 0,
  ACTION_MODIFIER  NUMBER                       DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_ACTIVE  (Table) 
--
CREATE TABLE CASUS.C_SESSION_ACTIVE
(
  SESSION_ID   NUMBER,
  TIMESTAMP    DATE                             DEFAULT SYSDATE,
  COURSE_ID    NUMBER                           DEFAULT -1,
  INTERNAL_ID  NUMBER                           DEFAULT 0,
  HTTPSESSION  VARCHAR2(50 BYTE)                DEFAULT '',
  USER_ID      NUMBER                           DEFAULT 0,
  CASE_ID      NUMBER                           DEFAULT -1,
  GROUP_ID     NUMBER                           DEFAULT -1,
  SHOWME       NUMBER                           DEFAULT -1,
  PORTAL_ID    NUMBER                           DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          10M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_AVG_SUCCESS  (Table) 
--
CREATE TABLE CASUS.C_SESSION_AVG_SUCCESS
(
  SESSION_ID                 NUMBER,
  AVG_SUCCESS                NUMBER             DEFAULT -1,
  LAST_CALCULATED            DATE               DEFAULT SYSDATE,
  SUM_TIME                   NUMBER             DEFAULT 0,
  NET_HYPO_COUNT             NUMBER             DEFAULT 0,
  START_DATE                 DATE               DEFAULT NULL,
  USER_CREATION_DATE         DATE               DEFAULT NULL,
  USER_ID                    NUMBER             DEFAULT -1,
  CASE_ID                    NUMBER             DEFAULT -1,
  COURSE_ID                  NUMBER             DEFAULT -1,
  COURSE_GROUP_ID            NUMBER             DEFAULT -1,
  END_OF_CASE                NUMBER(1)          DEFAULT -1,
  CARDS                      NUMBER             DEFAULT -1,
  SESSION_MODIFICATION_DATE  DATE,
  SESSION_END_DATE           DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_AVG_SUCCESS_CHG  (Table) 
--
CREATE TABLE CASUS.C_SESSION_AVG_SUCCESS_CHG
(
  SESSION_ID                 NUMBER,
  AVG_SUCCESS                NUMBER             DEFAULT -1,
  LAST_CALCULATED            DATE               DEFAULT SYSDATE,
  SUM_TIME                   NUMBER             DEFAULT 0,
  NET_HYPO_COUNT             NUMBER             DEFAULT 0,
  START_DATE                 DATE               DEFAULT NULL,
  USER_CREATION_DATE         DATE               DEFAULT NULL,
  USER_ID                    NUMBER             DEFAULT -1,
  CASE_ID                    NUMBER             DEFAULT -1,
  COURSE_ID                  NUMBER             DEFAULT -1,
  COURSE_GROUP_ID            NUMBER             DEFAULT -1,
  END_OF_CASE                NUMBER(1)          DEFAULT -1,
  CARDS                      NUMBER             DEFAULT -1,
  SESSION_MODIFICATION_DATE  DATE,
  SESSION_END_DATE           DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_AVG_SUCCESS_TEST  (Table) 
--
CREATE TABLE CASUS.C_SESSION_AVG_SUCCESS_TEST
(
  SESSION_ID          NUMBER,
  AVG_SUCCESS         NUMBER                    DEFAULT -1,
  LAST_CALCULATED     DATE                      DEFAULT SYSDATE,
  SUM_TIME            NUMBER                    DEFAULT 0,
  NET_HYPO_COUNT      NUMBER                    DEFAULT 0,
  START_DATE          DATE                      DEFAULT NULL,
  USER_CREATION_DATE  DATE                      DEFAULT NULL,
  USER_ID             NUMBER                    DEFAULT -1,
  CASE_ID             NUMBER                    DEFAULT -1,
  COURSE_ID           NUMBER                    DEFAULT -1,
  COURSE_GROUP_ID     NUMBER                    DEFAULT -1,
  END_OF_CASE         NUMBER(1)                 DEFAULT -1,
  CARDS               NUMBER                    DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_DELETE  (Table) 
--
CREATE TABLE CASUS.C_SESSION_DELETE
(
  SESSION_ID               NUMBER               NOT NULL,
  GROUP_ID                 INTEGER              DEFAULT -1,
  USER_ID                  NUMBER,
  START_DATE               DATE                 DEFAULT NULL,
  CASE_ID                  NUMBER,
  LAST_ANSWERED_CARD_ID    NUMBER,
  VARARRAY_COUNT           NUMBER,
  NETWORK_ID               NUMBER,
  END_OF_CASE              NUMBER(1)            DEFAULT 0,
  HOST                     VARCHAR2(100 BYTE),
  CLIENT                   VARCHAR2(100 BYTE),
  VERSION                  VARCHAR2(100 BYTE),
  NETINFO_ID               NUMBER               DEFAULT 0,
  FREETEXT_SUGGEST         VARCHAR2(255 BYTE),
  C_ID                     NUMBER(10)           DEFAULT 0,
  DB_ID                    NUMBER(10)           DEFAULT 0,
  PMWNET_ID                NUMBER               DEFAULT 0,
  COURSE_ID                NUMBER               DEFAULT -1,
  CREATION_DATE            DATE                 DEFAULT SYSDATE,
  MODIFICATION_DATE        DATE                 DEFAULT SYSDATE,
  ENDOFSESSION_DATE        DATE,
  OWN_COMMENT              NUMBER               DEFAULT 0,
  OWN_COMMENT_CARD_ID      NUMBER               DEFAULT -1,
  TUTOR_COMMENT            NUMBER               DEFAULT 0,
  TUTOR_COMMENT_CARD_ID    NUMBER               DEFAULT -1,
  TUTOR_QUESTION_ANSWERED  DATE,
  RULE                     NUMBER               DEFAULT -1,
  ENG_SCORE                NUMBER               DEFAULT -1,
  ENG_SCORE_DETAILS        VARCHAR2(250 BYTE),
  SCORE                    NUMBER               DEFAULT -1,
  TIME                     NUMBER               DEFAULT -1,
  ORG_SESSION_ID           NUMBER,
  ORG_SCORE                NUMBER,
  DEL_TIMESTAMP            DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.C_SESSION_DELETE.ENG_SCORE_DETAILS IS 'answerScore;timeScore;toolbarScore;summaryScore;new: hlclickSore';


--
-- C_SESSION_LOG  (Table) 
--
CREATE TABLE CASUS.C_SESSION_LOG
(
  SESSION_ID  NUMBER                            DEFAULT -1,
  TS          DATE                              DEFAULT SYSDATE,
  SUCCESS     NUMBER                            DEFAULT -1,
  STATUS      NUMBER                            DEFAULT -1,
  EXT_STATUS  NUMBER                            DEFAULT -1,
  EXT_RESULT  VARCHAR2(4000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_LOG_CHG  (Table) 
--
CREATE TABLE CASUS.C_SESSION_LOG_CHG
(
  CHG_TYPE    NUMBER                            DEFAULT -1,
  SESSION_ID  NUMBER                            DEFAULT -1,
  TS          DATE                              DEFAULT SYSDATE,
  SUCCESS     NUMBER                            DEFAULT -1,
  STATUS      NUMBER                            DEFAULT -1,
  EXT_STATUS  NUMBER                            DEFAULT -1,
  EXT_RESULT  VARCHAR2(4000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_PERMUTATION  (Table) 
--
CREATE TABLE CASUS.C_SESSION_PERMUTATION
(
  SESSION_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_PERMUTATION_ENTRY  (Table) 
--
CREATE TABLE CASUS.C_SESSION_PERMUTATION_ENTRY
(
  PARENT_ID     NUMBER                          DEFAULT -1,
  ITEM_ID       NUMBER                          DEFAULT -1,
  PERMUTE_POS   NUMBER                          DEFAULT 0,
  ORG_POS       NUMBER                          DEFAULT 0,
  ABS_ITEM_POS  NUMBER                          DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_STATS  (Table) 
--
CREATE TABLE CASUS.C_SESSION_STATS
(
  COURSE_ID          NUMBER,
  GROUP_NR           NUMBER,
  MOD_YEAR           NUMBER,
  MOD_MONTH          NUMBER,
  MOD_DAYOFMONTH     NUMBER,
  MOD_WEEK           NUMBER,
  NO_ENG             NUMBER,
  ENG_OK             NUMBER,
  ENG_MOD            NUMBER,
  ENG_BAD            NUMBER,
  SESSIONS           NUMBER,
  SESSION_EOC        NUMBER,
  USERS_90           NUMBER,
  SUM_TIME           NUMBER,
  USERS              NUMBER,
  MODIFICATION_DATE  DATE,
  STMT_SCORE         NUMBER,
  STMT_COUNT         NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_STATS_SETTINGS  (Table) 
--
CREATE TABLE CASUS.C_SESSION_STATS_SETTINGS
(
  COURSE_ID         NUMBER                      DEFAULT -1,
  GROUP_NR          NUMBER                      DEFAULT -1,
  DAYS              NUMBER                      DEFAULT 90,
  ENG_SCORE         NUMBER                      DEFAULT 0,
  TUTOR_FEEDBACK    NUMBER                      DEFAULT 0,
  CACHE_FROM_TABLE  NUMBER                      DEFAULT 1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_STATS2  (Table) 
--
CREATE TABLE CASUS.C_SESSION_STATS2
(
  COURSE_ID          NUMBER                     DEFAULT 0,
  GROUP_NR           NUMBER                     DEFAULT -1,
  TS                 DATE                       DEFAULT sysdate,
  USERS              NUMBER                     DEFAULT -1,
  SESSIONS           NUMBER                     DEFAULT 0,
  SESSIONS_EOC       NUMBER                     DEFAULT 0,
  SESSIONS_PER_USER  NUMBER                     DEFAULT 0,
  SUM_TIME           NUMBER                     DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_2  (Table) 
--
CREATE TABLE CASUS.C_SESSION_2
(
  SESSION_ID             NUMBER,
  GROUP_ID               NUMBER,
  USER_ID                NUMBER,
  START_DATE             DATE,
  CASE_ID                NUMBER,
  LAST_ANSWERED_CARD_ID  NUMBER,
  VARARRAY_COUNT         NUMBER,
  NETWORK_ID             NUMBER,
  END_OF_CASE            NUMBER(1),
  HOST                   VARCHAR2(100 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_SESSION_2_COURSE  (Table) 
--
CREATE TABLE CASUS.C_SESSION_2_COURSE
(
  SESSION_ID  NUMBER,
  COURSE_ID   NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CURSOR_TEST  (Table) 
--
CREATE TABLE CASUS.CURSOR_TEST
(
  ID      NUMBER                                NOT NULL,
  MYDATE  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_USER_ADMIN_GROUPS  (Table) 
--
CREATE TABLE CASUS.C_USER_ADMIN_GROUPS
(
  USER_ID   NUMBER                              NOT NULL,
  GROUP_ID  NUMBER                              NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_USER_ARCHIVE_HELPER  (Table) 
--
CREATE TABLE CASUS.C_USER_ARCHIVE_HELPER
(
  USER_ID           NUMBER,
  MAX_SESSION_DATE  DATE                        DEFAULT SYSDATE,
  CS_DEL            NUMBER                      DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_USER_CHG  (Table) 
--
CREATE TABLE CASUS.C_USER_CHG
(
  CHG_TYPE            NUMBER                    DEFAULT -1,
  CHG_TIMESTAMP       DATE                      DEFAULT SYSDATE,
  USER_ID             NUMBER,
  LOGIN               VARCHAR2(500 BYTE),
  PASSWORD            RAW(195),
  NAME                VARCHAR2(255 BYTE),
  FIRSTNAME           VARCHAR2(255 BYTE),
  TITLE               VARCHAR2(255 BYTE),
  DATE_OF_BIRTH       DATE,
  SEX                 CHAR(1 BYTE)              DEFAULT 'N',
  STATUS              NUMBER                    DEFAULT -1,
  EDUCATION           NUMBER,
  MATR_NUM            VARCHAR2(255 BYTE),
  LANG                VARCHAR2(5 BYTE)          DEFAULT NULL,
  EMAIL               VARCHAR2(255 BYTE),
  IS_AUTHOR           VARCHAR2(30 BYTE),
  IS_REVIEWER         NUMBER                    DEFAULT 0,
  PERSONAL_COURSE_ID  NUMBER                    DEFAULT -1,
  LOCKED              NUMBER                    DEFAULT 0,
  GROUP_ID            NUMBER                    DEFAULT 0,
  ADD_ROLE            NUMBER                    DEFAULT 0,
  EXTERNAL            NUMBER(1)                 DEFAULT 0,
  EFN                 NUMBER                    DEFAULT 0,
  ARZTNUMMER          NUMBER                    DEFAULT 0,
  DATATRANSFER_OK     NUMBER(1)                 DEFAULT 0,
  LEGITIMATION        NUMBER(1)                 DEFAULT 0,
  STREET              VARCHAR2(255 BYTE)        DEFAULT '',
  CITY                VARCHAR2(255 BYTE)        DEFAULT '',
  STREETNUMBER        VARCHAR2(50 BYTE)         DEFAULT '',
  LAEK_NUMMER         NUMBER                    DEFAULT 0,
  TYPE                NUMBER                    DEFAULT 0,
  GENDER              NUMBER(1)                 DEFAULT 0,
  SELFREGISTER        NUMBER(1)                 DEFAULT 0,
  IS_EXAM             NUMBER(1)                 DEFAULT 0,
  SUBGROUP_ID         NUMBER                    DEFAULT -1,
  AGB_ACCEPTED        NUMBER                    DEFAULT 1,
  COUNTRY             NUMBER                    DEFAULT -1,
  ZIPCODE             VARCHAR2(20 BYTE),
  EXT_LOGIN           VARCHAR2(498 BYTE)        DEFAULT '',
  EXT_PASSWORD        VARCHAR2(200 BYTE)        DEFAULT '',
  PROFILEEDITABLE     NUMBER                    DEFAULT 1,
  INVITED             NUMBER                    DEFAULT 0,
  PWD_ENCODING        VARCHAR2(50 BYTE),
  NICKNAME            VARCHAR2(200 BYTE),
  EMAIL_OPTION        NUMBER                    DEFAULT -1,
  PWD_CHANGE          NUMBER                    DEFAULT -1,
  SHOWME              NUMBER                    DEFAULT 0,
  COUNTRY2            VARCHAR2(2 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_USER_INSTRUCTOR_MAPPING  (Table) 
--
CREATE TABLE CASUS.C_USER_INSTRUCTOR_MAPPING
(
  USER_ID       NUMBER,
  LOGIN         VARCHAR2(200 BYTE),
  GROUP_ID      NUMBER,
  EMAIL_DOMAIN  VARCHAR2(200 BYTE),
  EMAIL         VARCHAR2(200 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_USER_ROLES  (Table) 
--
CREATE TABLE CASUS.C_USER_ROLES
(
  USER_ID    NUMBER                             NOT NULL,
  USER_ROLE  NUMBER                             NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_USER_SAVE  (Table) 
--
CREATE TABLE CASUS.C_USER_SAVE
(
  USER_ID   NUMBER                              NOT NULL,
  LOGIN     VARCHAR2(50 BYTE)                   NOT NULL,
  PASSWORD  RAW(20)                             NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_USER_SHIB20180111  (Table) 
--
CREATE TABLE CASUS.C_USER_SHIB20180111
(
  USER_ID      NUMBER,
  USER_LOGIN   VARCHAR2(4000 BYTE),
  OLD_USER_ID  NUMBER,
  TYPE         NUMBER                           DEFAULT 1,
  NAME         VARCHAR2(500 BYTE),
  FIRSTNAME    VARCHAR2(500 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_USER_TEST  (Table) 
--
CREATE TABLE CASUS.C_USER_TEST
(
  USER_ID             NUMBER                    NOT NULL,
  CREATION_DATE       DATE                      DEFAULT SYSDATE,
  LOGIN               VARCHAR2(20 BYTE)         NOT NULL,
  PASSWORD            RAW(20)                   NOT NULL,
  NAME                VARCHAR2(255 BYTE),
  FIRSTNAME           VARCHAR2(255 BYTE),
  TITLE               VARCHAR2(255 BYTE),
  DATE_OF_BIRTH       DATE,
  SEX                 CHAR(1 BYTE)              DEFAULT NULL,
  STATUS              NUMBER,
  EDUCATION           NUMBER,
  MATR_NUM            VARCHAR2(255 BYTE),
  LANG                VARCHAR2(5 BYTE),
  EMAIL               VARCHAR2(255 BYTE),
  INSTITUTION         VARCHAR2(100 BYTE),
  QUESTION            VARCHAR2(200 BYTE),
  ANSWER              VARCHAR2(200 BYTE),
  PASSWORD2           RAW(20),
  IS_AUTHOR           VARCHAR2(30 BYTE),
  PW_READABLE         VARCHAR2(20 BYTE),
  IS_REVIEWER         NUMBER                    DEFAULT 0,
  GROUP_ID            NUMBER                    DEFAULT 0,
  ADD_ROLE            NUMBER                    DEFAULT 0,
  PERSONAL_COURSE_ID  NUMBER,
  STYLE_VALUE         VARCHAR2(20 BYTE),
  LOCKED              NUMBER                    DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON TABLE CASUS.C_USER_TEST IS 'Only for debugging the CourseManager software';


--
-- DATA_ITEMS  (Table) 
--
CREATE TABLE CASUS.DATA_ITEMS
(
  ITEM_ID        NUMBER                         NOT NULL,
  TYPE           CHAR(4 BYTE),
  NAME           VARCHAR2(255 BYTE),
  VERSION        NUMBER(10),
  DELETE_FLAG    NUMBER                         DEFAULT 0,
  USER_ID        NUMBER                         DEFAULT 0,
  INDEXED        NUMBER(1)                      DEFAULT 0,
  GROUP_ID       NUMBER                         DEFAULT 0,
  ORG_DATA_ITEM  NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DATA_ITEMS_CHG  (Table) 
--
CREATE TABLE CASUS.DATA_ITEMS_CHG
(
  ITEM_ID       NUMBER,
  CREATED       DATE                            DEFAULT SYSDATE,
  MODIFIED      DATE                            DEFAULT SYSDATE,
  BACKUPED      DATE                            DEFAULT TO_DATE('01-01-1900','DD-MM-YYYY'),
  STREAMED      DATE                            DEFAULT TO_DATE('01-01-1900','DD-MM-YYYY'),
  DBID          NUMBER(10)                      DEFAULT 0,
  SYNCHRONIZED  DATE                            DEFAULT SYSDATE,
  DBUID         NUMBER(10)                      DEFAULT 2
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DATA_ITEMS_MAP  (Table) 
--
CREATE TABLE CASUS.DATA_ITEMS_MAP
(
  ITEM_ID   NUMBER,
  USER_ID   NUMBER,
  USERNAME  VARCHAR2(250 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DATA_ITEMS_MAP2  (Table) 
--
CREATE TABLE CASUS.DATA_ITEMS_MAP2
(
  ITEM_ID   NUMBER,
  USER_ID   NUMBER,
  USERNAME  VARCHAR2(250 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DATA_ITEMS_TEST  (Table) 
--
CREATE TABLE CASUS.DATA_ITEMS_TEST
(
  ITEM_ID      NUMBER                           NOT NULL,
  TYPE         CHAR(4 BYTE),
  NAME         VARCHAR2(255 BYTE),
  VERSION      NUMBER(10),
  DELETE_FLAG  NUMBER                           DEFAULT 0,
  USER_ID      NUMBER                           DEFAULT 0,
  INDEXED      NUMBER(1)                        DEFAULT 0,
  GROUP_ID     NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DATA_ITEMS_UPDATE  (Table) 
--
CREATE TABLE CASUS.DATA_ITEMS_UPDATE
(
  ITEM_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DEBUG_USER_TABLE  (Table) 
--
CREATE TABLE CASUS.DEBUG_USER_TABLE
(
  NAME       VARCHAR2(50 BYTE),
  FIRSTNAME  VARCHAR2(50 BYTE),
  EMAIL      VARCHAR2(100 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DR$MAILMSG_TEXT_INDEX$I  (Table) 
--
CREATE TABLE CASUS.DR$MAILMSG_TEXT_INDEX$I
(
  TOKEN_TEXT   VARCHAR2(64 BYTE)                NOT NULL,
  TOKEN_TYPE   NUMBER(10)                       NOT NULL,
  TOKEN_FIRST  NUMBER(10)                       NOT NULL,
  TOKEN_LAST   NUMBER(10)                       NOT NULL,
  TOKEN_COUNT  NUMBER(10)                       NOT NULL,
  TOKEN_INFO   BLOB
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DR$MAILMSG_TEXT_INDEX$K  (Table) 
--
CREATE TABLE CASUS.DR$MAILMSG_TEXT_INDEX$K
(
  DOCID    NUMBER(38),
  TEXTKEY  ROWID, 
  PRIMARY KEY
  (TEXTKEY)
  ENABLE VALIDATE
)
ORGANIZATION INDEX
PCTTHRESHOLD 50
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );


--
-- DR$MAILMSG_TEXT_INDEX$N  (Table) 
--
CREATE TABLE CASUS.DR$MAILMSG_TEXT_INDEX$N
(
  NLT_DOCID  NUMBER(38),
  NLT_MARK   CHAR(1 BYTE)                       NOT NULL, 
  PRIMARY KEY
  (NLT_DOCID)
  ENABLE VALIDATE
)
ORGANIZATION INDEX
PCTTHRESHOLD 50
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );


--
-- DR$MAILMSG_TEXT_INDEX$R  (Table) 
--
CREATE TABLE CASUS.DR$MAILMSG_TEXT_INDEX$R
(
  ROW_NO  NUMBER(3),
  DATA    BLOB
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DR$MAILMSG_TEXT_INDEX$S  (Table) 
--
CREATE TABLE CASUS.DR$MAILMSG_TEXT_INDEX$S
(
  SDATA_ID    NUMBER,
  SDATA_LAST  NUMBER,
  SDATA_DATA  RAW(2000), 
  PRIMARY KEY
  (SDATA_ID, SDATA_LAST)
  ENABLE VALIDATE
)
ORGANIZATION INDEX
PCTTHRESHOLD 50
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );


--
-- DR$USER_TEXT_INDEX$I  (Table) 
--
CREATE TABLE CASUS.DR$USER_TEXT_INDEX$I
(
  TOKEN_TEXT   VARCHAR2(64 BYTE)                NOT NULL,
  TOKEN_TYPE   NUMBER(10)                       NOT NULL,
  TOKEN_FIRST  NUMBER(10)                       NOT NULL,
  TOKEN_LAST   NUMBER(10)                       NOT NULL,
  TOKEN_COUNT  NUMBER(10)                       NOT NULL,
  TOKEN_INFO   BLOB
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DR$USER_TEXT_INDEX$K  (Table) 
--
CREATE TABLE CASUS.DR$USER_TEXT_INDEX$K
(
  DOCID    NUMBER(38),
  TEXTKEY  ROWID, 
  PRIMARY KEY
  (TEXTKEY)
  ENABLE VALIDATE
)
ORGANIZATION INDEX
PCTTHRESHOLD 50
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );


--
-- DR$USER_TEXT_INDEX$N  (Table) 
--
CREATE TABLE CASUS.DR$USER_TEXT_INDEX$N
(
  NLT_DOCID  NUMBER(38),
  NLT_MARK   CHAR(1 BYTE)                       NOT NULL, 
  PRIMARY KEY
  (NLT_DOCID)
  ENABLE VALIDATE
)
ORGANIZATION INDEX
PCTTHRESHOLD 50
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );


--
-- DR$USER_TEXT_INDEX$R  (Table) 
--
CREATE TABLE CASUS.DR$USER_TEXT_INDEX$R
(
  ROW_NO  NUMBER(3),
  DATA    BLOB
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DUS  (Table) 
--
CREATE TABLE CASUS.DUS
(
  ITEM_ID         NUMBER                        NOT NULL,
  VARARRAY_COUNT  NUMBER,
  DATA_SIZE       NUMBER,
  DUOBJECTIVE     LONG,
  NETWORK         NUMBER(1)                     DEFAULT 1,
  SUBTYPE         NUMBER                        DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DUS2  (Table) 
--
CREATE TABLE CASUS.DUS2
(
  ITEM_ID         NUMBER                        NOT NULL,
  VARARRAY_COUNT  NUMBER,
  DATA_SIZE       NUMBER,
  DUOBJECTIVE     CLOB,
  NETWORK         NUMBER(1)                     DEFAULT 1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- DYNAMIC_CARDS  (Table) 
--
CREATE TABLE CASUS.DYNAMIC_CARDS
(
  USER_ID    NUMBER                             NOT NULL,
  CASE_ID    NUMBER                             NOT NULL,
  CARD_ID    NUMBER                             NOT NULL,
  COURSE_ID  NUMBER                             NOT NULL,
  MODE2      NUMBER,
  CARD_IDX   NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- EDUCATION  (Table) 
--
CREATE TABLE CASUS.EDUCATION
(
  NR         NUMBER,
  STATUS_NR  NUMBER,
  NAME       VARCHAR2(50 BYTE),
  LANG       VARCHAR2(5 BYTE)                   DEFAULT 'de',
  PARENT_NR  NUMBER(3)                          DEFAULT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- EMAIL_REGISTRATION_DOMAINS  (Table) 
--
CREATE TABLE CASUS.EMAIL_REGISTRATION_DOMAINS
(
  ENGINE             VARCHAR2(25 BYTE),
  DOMAIN_SUFFIX      VARCHAR2(75 BYTE),
  RESPONSIBLE_CUSER  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- EMAIN_REGPROC_DEBUG  (Table) 
--
CREATE TABLE CASUS.EMAIN_REGPROC_DEBUG
(
  TEST  VARCHAR2(100 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- EXT_SESSION  (Table) 
--
CREATE TABLE CASUS.EXT_SESSION
(
  SESSION_ID             NUMBER,
  USER_ID                NUMBER,
  USER_ROLES             VARCHAR2(255 BYTE),
  TOOL_ID                NUMBER,
  TOOL_VERSION           VARCHAR2(20 BYTE),
  EXT_USER_ID            VARCHAR2(50 BYTE),
  EXT_CONTEXT_LABEL      VARCHAR2(150 BYTE),
  EXT_CONTEXT_ID         VARCHAR2(100 BYTE),
  PROTOCOL               VARCHAR2(20 BYTE),
  BACKLINK_ID            VARCHAR2(255 BYTE),
  BACKLINK_URL           VARCHAR2(255 BYTE),
  PROT_MESSAGE_TYPE      VARCHAR2(50 BYTE),
  PROT_VERSION           VARCHAR2(10 BYTE),
  COURSEID               NUMBER,
  CASEID                 NUMBER,
  INITOK                 NUMBER                 DEFAULT -1,
  ERRMSG                 VARCHAR2(255 BYTE)     DEFAULT null,
  OPENCOUNT              NUMBER                 DEFAULT 1,
  GRADETRANSFER          NUMBER(1)              DEFAULT 0,
  GRADEDATE              DATE,
  GRADE                  NUMBER                 DEFAULT -1,
  MODIFICATION_DATE      DATE                   DEFAULT SYSDATE,
  CREATION_DATE          DATE                   DEFAULT SYSDATE,
  GRADE_ERRMSG           VARCHAR2(4000 BYTE)    DEFAULT NULL,
  GRADETRANSFERERRCOUNT  NUMBER                 DEFAULT 0,
  GRADEHTTPCODE          NUMBER                 DEFAULT 0,
  CASUSPARM              VARCHAR2(500 BYTE),
  DECRVALUE              VARCHAR2(255 BYTE),
  TOOL_INSTANCEGUID      VARCHAR2(255 BYTE),
  ERRMAIL                NUMBER(1)              DEFAULT 0,
  TOOLFAMILYNAME         VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- EXT_TOOL  (Table) 
--
CREATE TABLE CASUS.EXT_TOOL
(
  TOOL_ID            NUMBER,
  NAME               VARCHAR2(100 BYTE),
  DESCR              VARCHAR2(1000 BYTE),
  ENCODING           VARCHAR2(20 BYTE)          DEFAULT 'UTF-8',
  ALWAYSINITSESSION  NUMBER                     DEFAULT 0,
  SYSTEM             VARCHAR2(50 BYTE),
  DEACTIVATED        NUMBER                     DEFAULT 0,
  VERSION            VARCHAR2(20 BYTE)          DEFAULT '',
  EXT_ACCESS         NUMBER                     DEFAULT 1,
  LOGIN_PREFIX       VARCHAR2(100 BYTE),
  GROUP_ID           NUMBER                     DEFAULT 0,
  ADMINEMAIL         VARCHAR2(255 BYTE),
  ADMINREPORT        NUMBER,
  REPORTTODATE       DATE,
  REPORTFROMDATE     DATE,
  MODIFICATION_DATE  DATE                       DEFAULT SYSDATE,
  CREATION_DATE      DATE                       DEFAULT SYSDATE,
  SECRET             VARCHAR2(100 BYTE),
  ADMINMRMS          NUMBER                     DEFAULT -1,
  ADMINFIRSTNAME     VARCHAR2(20 BYTE)          DEFAULT NULL,
  ADMINLASTNAME      VARCHAR2(20 BYTE)          DEFAULT NULL,
  ADMINDATE          DATE                       DEFAULT NULL,
  TOOL_INSTANCEGUID  VARCHAR2(255 BYTE),
  GUIDCHECK          NUMBER(1)                  DEFAULT 0,
  BACKLINK_URL       VARCHAR2(255 BYTE),
  TOOL_VERSION       VARCHAR2(255 BYTE),
  CASUSURL           VARCHAR2(200 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- FAEHIGKEITEN  (Table) 
--
CREATE TABLE CASUS.FAEHIGKEITEN
(
  ID              INTEGER,
  NAME            VARCHAR2(255 BYTE),
  ANGELEGT        DATE,
  BEARBEITET      DATE,
  BEARBEITET_VON  VARCHAR2(25 BYTE),
  STATUS          VARCHAR2(25 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- FIELD  (Table) 
--
CREATE TABLE CASUS.FIELD
(
  NR    NUMBER                                  NOT NULL,
  NAME  VARCHAR2(50 BYTE),
  LANG  VARCHAR2(5 BYTE)                        DEFAULT 'de'
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- FIELDMAP_CASUS_CP  (Table) 
--
CREATE TABLE CASUS.FIELDMAP_CASUS_CP
(
  FIELD     NUMBER,
  SUBFIELD  NUMBER,
  CPFIELD   NUMBER                              DEFAULT -1,
  DESCR     VARCHAR2(30 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- FINDINGS  (Table) 
--
CREATE TABLE CASUS.FINDINGS
(
  ITEM_ID         NUMBER                        NOT NULL,
  NETWORKAFTER    NUMBER,
  NETWORKID       NUMBER,
  CHAPTER         NUMBER,
  COMMENTID       NUMBER,
  MESHID          NUMBER,
  SNOMEDID        NUMBER,
  INTERNALFLAG    NUMBER,
  GROUPNUMBER     NUMBER,
  VARARRAY_COUNT  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- FTANSWER  (Table) 
--
CREATE TABLE CASUS.FTANSWER
(
  ITEM_ID           NUMBER                      NOT NULL,
  JUMP              NUMBER,
  FT_DATA_ID        NUMBER,
  COMMENT_ID        NUMBER,
  ADDINFO_ID        NUMBER,
  LONGMENU_ID       NUMBER                      DEFAULT 1,
  NGTHRE            NUMBER                      DEFAULT 50,
  NGLEN             NUMBER                      DEFAULT 0,
  LEVEN             NUMBER                      DEFAULT 1,
  PRESELECTEDENTRY  VARCHAR2(100 BYTE),
  ORDERED           NUMBER                      DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.FTANSWER.LONGMENU_ID IS 'id of longmenu list used for this long menu answer';

COMMENT ON COLUMN CASUS.FTANSWER.NGTHRE IS 'freetext comparison ngram threshold ??? Matthias ???';

COMMENT ON COLUMN CASUS.FTANSWER.NGLEN IS 'freetext comparison ngram length ??? Matthias ???';

COMMENT ON COLUMN CASUS.FTANSWER.LEVEN IS 'freetext comparison levenstein distance';


--
-- FTANSWER_DATA  (Table) 
--
CREATE TABLE CASUS.FTANSWER_DATA
(
  ITEM_ID    NUMBER                             NOT NULL,
  DATA_SIZE  NUMBER,
  DATA       LONG
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- FTANSWER_ITEM  (Table) 
--
CREATE TABLE CASUS.FTANSWER_ITEM
(
  ITEM_ID       NUMBER,
  ITEM_TYPE     NUMBER                          DEFAULT 0,
  ITEM_VARIANT  NUMBER                          DEFAULT 0,
  ITEM_CODE     VARCHAR2(50 BYTE)               DEFAULT '',
  ITEM          VARCHAR2(500 BYTE)              DEFAULT ''
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- FTDATAITEM2  (Table) 
--
CREATE TABLE CASUS.FTDATAITEM2
(
  ITEM_ID       NUMBER,
  ITEM_TYPE     NUMBER                          DEFAULT 0,
  ITEM_VARIANT  NUMBER                          DEFAULT 0,
  ITEM_CODE     VARCHAR2(50 BYTE)               DEFAULT '',
  ITEM          VARCHAR2(500 BYTE)              DEFAULT ''
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- GIFF  (Table) 
--
CREATE TABLE CASUS.GIFF
(
  ITEM_ID    NUMBER,
  DATA_SIZE  NUMBER,
  DATA       LONG RAW
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- GROUP_ACC  (Table) 
--
CREATE TABLE CASUS.GROUP_ACC
(
  GROUP_ID            NUMBER                    NOT NULL,
  GROUP_INTERFACE_ID  NUMBER                    NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- GROUP_ACC2  (Table) 
--
CREATE TABLE CASUS.GROUP_ACC2
(
  GROUP_ID              NUMBER,
  SHARECASE_WITH_GROUP  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- GROUP_LMHEADER  (Table) 
--
CREATE TABLE CASUS.GROUP_LMHEADER
(
  GROUP_ID     NUMBER                           NOT NULL,
  LMHEADER_ID  NUMBER                           NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- GROUP_SUBSCR  (Table) 
--
CREATE TABLE CASUS.GROUP_SUBSCR
(
  GROUPID         NUMBER                        NOT NULL,
  SUBSCRIPTIONID  NUMBER                        NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- HTMD  (Table) 
--
CREATE TABLE CASUS.HTMD
(
  ITEM_ID         NUMBER,
  DATA_SIZE       NUMBER,
  DATA            BLOB,
  VARARRAY_COUNT  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- HTMD_VS  (Table) 
--
CREATE TABLE CASUS.HTMD_VS
(
  ITEM_ID         NUMBER                        NOT NULL,
  DATA_SIZE       NUMBER,
  DATA            BLOB,
  VARARRAY_COUNT  NUMBER,
  MY_VERSION      NUMBER                        DEFAULT 1,
  VERSION_DATE    DATE                          DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ID_TABLE  (Table) 
--
CREATE TABLE CASUS.ID_TABLE
(
  ID_TABLE_ID  INTEGER                          NOT NULL,
  TABLE_NAME   VARCHAR2(255 BYTE)               NOT NULL,
  NEXT_ID      INTEGER,
  QUANTITY     INTEGER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- I_INTIME_STUDY1  (Table) 
--
CREATE TABLE CASUS.I_INTIME_STUDY1
(
  USER_ID  NUMBER                               DEFAULT -1,
  MD5      VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- I_INTIME_STUDY2  (Table) 
--
CREATE TABLE CASUS.I_INTIME_STUDY2
(
  USER_ID  NUMBER                               DEFAULT -1,
  MD5      VARCHAR2(50 BYTE),
  CASE_ID  NUMBER                               DEFAULT -1,
  Q1       NUMBER                               DEFAULT -1,
  Q2       NUMBER                               DEFAULT -1,
  Q_DATE   VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- IMPPADITION  (Table) 
--
CREATE TABLE CASUS.IMPPADITION
(
  QUESTIONNR           NUMBER,
  GKNR                 NUMBER,
  CHAPTERNR            NUMBER,
  LOCATION             VARCHAR2(256 BYTE),
  DAT                  VARCHAR2(128 BYTE),
  DEFINITION           NUMBER,
  STUDENTSNUMBER       NUMBER,
  DIFFICULTY           NUMBER,
  FLAG_DEFINITION      NUMBER,
  FLAG_STUDENTSNUMBER  NUMBER,
  FLAG_DIFFICULTY      NUMBER,
  CHANGEFREQUENCY      NUMBER,
  CONTACT              VARCHAR2(512 BYTE),
  FLAG_CHANGE          NUMBER,
  CONTEXT              VARCHAR2(128 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- IMPPQUESTIONS  (Table) 
--
CREATE TABLE CASUS.IMPPQUESTIONS
(
  QUESTIONNR   NUMBER                           NOT NULL,
  GKNR         NUMBER                           NOT NULL,
  CHAPTERNR    NUMBER                           NOT NULL,
  IMPORTANCE   NUMBER,
  SOLUTION     NUMBER,
  CHAPTER      VARCHAR2(256 BYTE),
  SUBCHAPTER   VARCHAR2(256 BYTE),
  QUESTION     VARCHAR2(2048 BYTE),
  ANSWER       VARCHAR2(1024 BYTE),
  IMAGE        NUMBER,
  DAT          VARCHAR2(36 BYTE),
  GROUPNR      VARCHAR2(16 BYTE),
  NEW_FLAG     INTEGER                          DEFAULT 0,
  EDITED_FLAG  NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- INDEX_META  (Table) 
--
CREATE TABLE CASUS.INDEX_META
(
  TYPE            CHAR(4 BYTE)                  NOT NULL,
  TABLE_NAME      VARCHAR2(30 BYTE)             NOT NULL,
  COLUMN_NAME     VARCHAR2(30 BYTE)             NOT NULL,
  COLUMN_TYPE     CHAR(1 BYTE),
  INTERPRETATION  CHAR(4 BYTE),
  ID_COLUMN_NAME  CHAR(30 BYTE),
  DESCRIPTOR_GE   CHAR(30 BYTE),
  DESCRIPTOR_EN   CHAR(30 BYTE),
  PROTECTED       NUMBER(1)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- INDEX_REF  (Table) 
--
CREATE TABLE CASUS.INDEX_REF
(
  WORD_ID  NUMBER                               NOT NULL,
  ITEM_ID  NUMBER                               NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- INDEX_WORDS  (Table) 
--
CREATE TABLE CASUS.INDEX_WORDS
(
  ID    NUMBER                                  NOT NULL,
  WORD  VARCHAR2(255 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- INTLRESOURCE  (Table) 
--
CREATE TABLE CASUS.INTLRESOURCE
(
  KEY       VARCHAR2(20 BYTE),
  LANG      VARCHAR2(5 BYTE),
  NR        NUMBER,
  NAME      VARCHAR2(255 BYTE),
  ORDER_NR  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- JPEG  (Table) 
--
CREATE TABLE CASUS.JPEG
(
  ITEM_ID    NUMBER                             NOT NULL,
  DATA_SIZE  NUMBER                             DEFAULT 1,
  DATA       LONG RAW                           DEFAULT '00',
  ORDER_NR   NUMBER                             DEFAULT 0                     NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LAB_SUBLISTS  (Table) 
--
CREATE TABLE CASUS.LAB_SUBLISTS
(
  ID             NUMBER,
  VALUE          VARCHAR2(500 BYTE)             NOT NULL,
  NORMAL_VALUES  VARCHAR2(1000 BYTE),
  SUBLIST_ID     NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LANG  (Table) 
--
CREATE TABLE CASUS.LANG
(
  IDENTIFIKATION  VARCHAR2(5 BYTE),
  LANGUAGE        VARCHAR2(50 BYTE),
  KEY             VARCHAR2(10 BYTE)             DEFAULT 'lang'
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LETTERS  (Table) 
--
CREATE TABLE CASUS.LETTERS
(
  ADMISSION_ID  NUMBER,
  WARD_ID       NUMBER,
  LETTER_ID     NUMBER,
  CREATED       DATE,
  CREATOR       NUMBER,
  MODIFIED      DATE,
  MODIFIER      NUMBER,
  TIME_SPENT    NUMBER                          DEFAULT 0,
  FILE_TYPE     NUMBER                          DEFAULT 1413830740,
  TEXT          LONG RAW
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LISTS  (Table) 
--
CREATE TABLE CASUS.LISTS
(
  ITEM_ID     NUMBER,
  PARENT_ID   NUMBER                            NOT NULL,
  ORDER_NR    NUMBER                            NOT NULL,
  INDEX_NR    NUMBER                            NOT NULL,
  INTERN_ID   NUMBER,
  INTERN_IDX  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LISTS_CHG  (Table) 
--
CREATE TABLE CASUS.LISTS_CHG
(
  ITEM_ID    NUMBER,
  PARENT_ID  NUMBER,
  ORDER_NR   NUMBER,
  INDEX_NR   NUMBER,
  CHG_TYPE   VARCHAR2(5 BYTE),
  CHG_DATE   DATE                               DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LMUDLE_SESSION_MAPPING_TABLE  (Table) 
--
CREATE TABLE CASUS.LMUDLE_SESSION_MAPPING_TABLE
(
  OLD_SESSION_ID  NUMBER,
  FROM_USER_ID    NUMBER,
  TO_USER_ID      NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LMUDLE_SESSION_MAPPING_TABLE2  (Table) 
--
CREATE TABLE CASUS.LMUDLE_SESSION_MAPPING_TABLE2
(
  OLD_SESSION_ID   NUMBER,
  CASE_ID          NUMBER,
  FROM_USER_ID     NUMBER,
  TO_USER_ID       NUMBER,
  DUPLICATES       NUMBER,
  FROM_USER_LOGIN  VARCHAR2(500 BYTE),
  TO_USER_LOGIN    VARCHAR2(500 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LMUDLE_USER  (Table) 
--
CREATE TABLE CASUS.LMUDLE_USER
(
  USERNAME  VARCHAR2(100 BYTE)                  DEFAULT '',
  EMAIL     VARCHAR2(100 BYTE)                  DEFAULT ''
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LMUDLE_USER_MAPPING_TABLE  (Table) 
--
CREATE TABLE CASUS.LMUDLE_USER_MAPPING_TABLE
(
  TO_USER_ID       NUMBER,
  TO_USER_LOGIN    VARCHAR2(500 BYTE),
  FROM_USER_ID     NUMBER,
  FROM_USER_LOGIN  VARCHAR2(500 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_CATALOG  (Table) 
--
CREATE TABLE CASUS.LO_CATALOG
(
  ID             NUMBER,
  CHAPTER        NUMBER,
  LO_NAME        VARCHAR2(4000 BYTE),
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  SOURCE         VARCHAR2(50 BYTE),
  CATALOG_ID     NUMBER,
  DELETE_FLAG    NUMBER                         DEFAULT 0,
  NR             NUMBER                         DEFAULT 0,
  SUBCHAPTER     NUMBER                         DEFAULT 0,
  DISCR          NUMBER,
  DESCR          VARCHAR2(2000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_CATALOGDESCR  (Table) 
--
CREATE TABLE CASUS.LO_CATALOGDESCR
(
  LANG        VARCHAR2(2 BYTE),
  NAME        VARCHAR2(50 BYTE),
  SHORTNAME   VARCHAR2(50 BYTE),
  ENTRYCLASS  VARCHAR2(50 BYTE),
  CATALOG_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_CATALOG_HAMB  (Table) 
--
CREATE TABLE CASUS.LO_CATALOG_HAMB
(
  ID           NUMBER,
  MODIFIER1    NUMBER                           DEFAULT 0,
  MODIFIER2    NUMBER                           DEFAULT 0,
  MODIFIER3    NUMBER                           DEFAULT 0,
  MODIFIER4    NUMBER                           DEFAULT 0,
  MODIFIER6    NUMBER                           DEFAULT 0,
  MODIFIER7    NUMBER                           DEFAULT 0,
  MODIFIER8    NUMBER                           DEFAULT 0,
  LO_LEVEL     NUMBER                           DEFAULT 0,
  SUBCHAPTER2  NUMBER                           DEFAULT 0,
  MOD          NUMBER                           DEFAULT 0,
  MODIFIER5    NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_CATALOGS  (Table) 
--
CREATE TABLE CASUS.LO_CATALOGS
(
  ID             NUMBER,
  CHAPTER        NUMBER,
  LO_NAME        VARCHAR2(500 BYTE),
  CREATION_DATE  DATE,
  SOURCE         VARCHAR2(50 BYTE),
  MODIFIER1      NUMBER                         DEFAULT 0,
  MODIFIER2      NUMBER                         DEFAULT 0,
  MODIFIER3      NUMBER                         DEFAULT 0,
  MODIFIER4      NUMBER                         DEFAULT 0,
  MODIFIER6      NUMBER                         DEFAULT 0,
  MODIFIER7      NUMBER                         DEFAULT 0,
  MODIFIER8      NUMBER                         DEFAULT 0,
  CATALOG_ID     NUMBER,
  DELETE_FLAG    NUMBER                         DEFAULT 0,
  LO_LEVEL       NUMBER                         DEFAULT 0,
  SUBCHAPTER1    NUMBER                         DEFAULT 0,
  SUBCHAPTER2    NUMBER                         DEFAULT 0,
  NR             NUMBER                         DEFAULT 0,
  MOD            NUMBER                         DEFAULT 0,
  MODIFIER5      NUMBER                         DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LOCKS  (Table) 
--
CREATE TABLE CASUS.LOCKS
(
  SESSION_ID  NUMBER,
  ENGINE      VARCHAR2(200 BYTE),
  TYPE        VARCHAR2(25 BYTE),
  LOGIN       VARCHAR2(500 BYTE),
  ID          NUMBER,
  MYDATE      DATE                              DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_ENDTERMS  (Table) 
--
CREATE TABLE CASUS.LO_ENDTERMS
(
  LOMODID  NUMBER,
  LOEND    NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_EVENT  (Table) 
--
CREATE TABLE CASUS.LO_EVENT
(
  ITEM_ID        NUMBER,
  TITLE          VARCHAR2(500 BYTE),
  DESCR          VARCHAR2(4000 BYTE),
  CREATION_DATE  DATE                           DEFAULT sysdate,
  DELETE_FLAG    NUMBER,
  SUBJECT        VARCHAR2(50 BYTE),
  TUTOR          VARCHAR2(250 BYTE),
  MODULE         VARCHAR2(50 BYTE),
  NR             VARCHAR2(50 BYTE),
  EVENTDATE      VARCHAR2(100 BYTE),
  USER_ID        NUMBER,
  QUANT          NUMBER                         DEFAULT 0,
  TERM           NUMBER,
  GROUP_ID       NUMBER                         DEFAULT -1,
  FORMAT         NUMBER,
  STATUS         NUMBER                         DEFAULT 0,
  PARENT_ID      NUMBER                         DEFAULT 0,
  INSTITUTE      VARCHAR2(100 BYTE),
  EMAIL          VARCHAR2(50 BYTE),
  SUBTYPE        NUMBER                         DEFAULT -1,
  EXT_ID         NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.LO_EVENT.STATUS IS '0=public, 1=private';


--
-- LO_EVENT_ACC  (Table) 
--
CREATE TABLE CASUS.LO_EVENT_ACC
(
  USER_ID   NUMBER                              NOT NULL,
  EVENT_ID  NUMBER                              NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_EVENTLO_CONNPARAM  (Table) 
--
CREATE TABLE CASUS.LO_EVENTLO_CONNPARAM
(
  ID            NUMBER,
  TYPE          NUMBER,
  MODIFIER_ID   NUMBER,
  COMP_ID       NUMBER                          DEFAULT -1,
  EDGEPARAM_ID  NUMBER                          DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_EVENT_OBJ  (Table) 
--
CREATE TABLE CASUS.LO_EVENT_OBJ
(
  EVENT_ID        NUMBER,
  LO_ID           NUMBER,
  QUANTIFICATION  NUMBER                        DEFAULT -1,
  CONTEXT         NUMBER,
  MODIFIER        NUMBER                        DEFAULT -1,
  ITEM_ID         NUMBER,
  POINTOFTIME     NUMBER                        DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_EVENT_ORDER  (Table) 
--
CREATE TABLE CASUS.LO_EVENT_ORDER
(
  PARENT_ID  NUMBER,
  EVENT_ID   NUMBER,
  ORDER_NR   NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_GROUP  (Table) 
--
CREATE TABLE CASUS.LO_GROUP
(
  ITEM_ID      NUMBER,
  SUBJECT      NUMBER,
  TITLE        VARCHAR2(200 BYTE),
  DELETE_FLAG  NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_GROUP_CATALOG  (Table) 
--
CREATE TABLE CASUS.LO_GROUP_CATALOG
(
  GROUP_ID    NUMBER,
  CATALOG_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_MAPPING  (Table) 
--
CREATE TABLE CASUS.LO_MAPPING
(
  LO_TABLE    VARCHAR2(30 BYTE),
  LO_COLUMN   VARCHAR2(20 BYTE),
  KEY         NUMBER,
  TYPE        VARCHAR2(10 BYTE),
  GROUP_ID    NUMBER,
  CATALOG_ID  NUMBER                            DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_MAT_ACC  (Table) 
--
CREATE TABLE CASUS.LO_MAT_ACC
(
  MATID     NUMBER,
  PARENTID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LONGMENU_HEADER  (Table) 
--
CREATE TABLE CASUS.LONGMENU_HEADER
(
  ITEM_ID  NUMBER,
  LANG     VARCHAR2(5 BYTE)                     DEFAULT '-',
  NAME     VARCHAR2(100 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LONGMENU_ITEMS  (Table) 
--
CREATE TABLE CASUS.LONGMENU_ITEMS
(
  PARENT_ID          NUMBER                     DEFAULT 1,
  LANG               VARCHAR2(5 BYTE)           DEFAULT '-',
  NAME               VARCHAR2(100 BYTE),
  SPELLCHECKSTATUS   NUMBER                     DEFAULT -1,
  SPELLCHECKDETAILS  VARCHAR2(4000 BYTE),
  ITEM_ID            NUMBER                     DEFAULT -1,
  SYNONYM_ID         NUMBER                     DEFAULT -1,
  RELATED_ID         NUMBER                     DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.LONGMENU_ITEMS.SPELLCHECKSTATUS IS 'flag for information whether entry was spell checked / result of spellchecking';

COMMENT ON COLUMN CASUS.LONGMENU_ITEMS.SPELLCHECKDETAILS IS 'detailed result of spellchecking, free format';


--
-- LO_OBJ_CATALOGENTRY  (Table) 
--
CREATE TABLE CASUS.LO_OBJ_CATALOGENTRY
(
  LO_ID          NUMBER,
  LO_CATALOG_ID  NUMBER,
  CATALOG_ID     NUMBER,
  MODIFIER1      NUMBER                         DEFAULT 0,
  MODIFIER2      NUMBER                         DEFAULT 0,
  MODIFIER3      NUMBER                         DEFAULT 0,
  MODIFIER4      NUMBER                         DEFAULT 0,
  MODIFIER5      NUMBER                         DEFAULT 0,
  MODIFIER6      NUMBER                         DEFAULT 0,
  MODIFIER7      NUMBER                         DEFAULT 0,
  MODIFIER8      NUMBER                         DEFAULT 0,
  MOD            NUMBER                         DEFAULT 0,
  ITEM_ID        NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_OBJECTIVE  (Table) 
--
CREATE TABLE CASUS.LO_OBJECTIVE
(
  ITEM_ID        NUMBER,
  TITLE          VARCHAR2(4000 BYTE),
  DESCR          VARCHAR2(4000 BYTE),
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  DELETE_FLAG    NUMBER                         DEFAULT 0,
  SUBJECT        VARCHAR2(500 BYTE),
  VERB_ID        NUMBER(3)                      DEFAULT -1,
  CATALOG_ID     NUMBER                         DEFAULT 4,
  GROUP_ID       NUMBER(4),
  USER_ID        NUMBER,
  LANG           VARCHAR2(2 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_RESOURCES  (Table) 
--
CREATE TABLE CASUS.LO_RESOURCES
(
  KEY         NUMBER,
  LANG        VARCHAR2(2 BYTE),
  IDENTIFIER  NUMBER,
  NAME        VARCHAR2(100 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_STARTTERMS  (Table) 
--
CREATE TABLE CASUS.LO_STARTTERMS
(
  LOMODID  NUMBER,
  LOSTART  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_USER  (Table) 
--
CREATE TABLE CASUS.LO_USER
(
  ID         NUMBER,
  LOGIN      VARCHAR2(50 BYTE),
  PASSWORD   VARCHAR2(100 BYTE),
  NAME       VARCHAR2(50 BYTE),
  FIRSTNAME  VARCHAR2(50 BYTE),
  GROUP_ID   NUMBER,
  EMAIL      VARCHAR2(50 BYTE),
  ISLOCKED   NUMBER                             DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.LO_USER.ISLOCKED IS '1=islocked';


--
-- LO_USER_ROLE  (Table) 
--
CREATE TABLE CASUS.LO_USER_ROLE
(
  LOGIN      VARCHAR2(50 BYTE),
  USER_ROLE  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LO_VERBS  (Table) 
--
CREATE TABLE CASUS.LO_VERBS
(
  ID    NUMBER                                  NOT NULL,
  VERB  VARCHAR2(50 BYTE)                       NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LPCT  (Table) 
--
CREATE TABLE CASUS.LPCT
(
  ITEM_ID         NUMBER                        NOT NULL,
  VARARRAY_COUNT  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LRS  (Table) 
--
CREATE TABLE CASUS.LRS
(
  ID             NUMBER,
  TARGET_ID      NUMBER                         DEFAULT -1,
  TARGET_TYPE    VARCHAR2(10 BYTE),
  LRS_URI        VARCHAR2(500 BYTE),
  LRS_LOGIN      VARCHAR2(250 BYTE),
  LRS_PASSWORD   VARCHAR2(250 BYTE),
  LRS_LOG_LEVEL  NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MAIL_MESSAGE  (Table) 
--
CREATE TABLE CASUS.MAIL_MESSAGE
(
  INTERNAL_ID      NUMBER                       DEFAULT -1,
  M_FROM           VARCHAR2(200 BYTE),
  M_TO             VARCHAR2(200 BYTE),
  M_REPLYTO        VARCHAR2(200 BYTE),
  M_CREATION_DATE  DATE                         DEFAULT sysdate,
  M_SUBJECT        VARCHAR2(500 BYTE),
  M_CONTENT        VARCHAR2(4000 BYTE),
  M_MIME_TYPE      VARCHAR2(100 BYTE),
  M_MESSAGE_ID     VARCHAR2(500 BYTE),
  M_SENT           NUMBER                       DEFAULT -1,
  M_TO_USER_ID     NUMBER                       DEFAULT -1,
  M_FROM_USER_ID   NUMBER                       DEFAULT -1,
  M_X              VARCHAR2(4000 BYTE),
  M_ENGINE         VARCHAR2(500 BYTE),
  M_MTA_STATUS     VARCHAR2(4000 BYTE),
  M_CLASS          VARCHAR2(500 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MAPPINGANSWER  (Table) 
--
CREATE TABLE CASUS.MAPPINGANSWER
(
  ITEM_ID     NUMBER,
  COMMENT_ID  NUMBER,
  RATING      NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MAPPINGANSWER_CNX  (Table) 
--
CREATE TABLE CASUS.MAPPINGANSWER_CNX
(
  DRAGITEM_ID  NUMBER,
  DROPITEM_ID  NUMBER,
  VALUE        NUMBER,
  PARENT_ID    NUMBER,
  ITEM_ID      NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MAPPINGANSWER_ITEMS  (Table) 
--
CREATE TABLE CASUS.MAPPINGANSWER_ITEMS
(
  PARENT_ID    NUMBER,
  ORDER_NR     NUMBER,
  ANSWER_TEXT  VARCHAR2(2000 BYTE),
  TYPE         NUMBER,
  ITEM_ID      NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MATRIX_ANSWER  (Table) 
--
CREATE TABLE CASUS.MATRIX_ANSWER
(
  ITEM_ID             NUMBER                    NOT NULL,
  JUMP                NUMBER                    DEFAULT -1,
  VARARRAY_COUNT      NUMBER                    DEFAULT -1,
  COMMENT_ID          NUMBER                    DEFAULT -1,
  ADDINFO_ID          NUMBER                    DEFAULT -1,
  MAXIMUM             NUMBER                    DEFAULT -1,
  MINIMUM             NUMBER                    DEFAULT -1,
  SCALE_VISIBLE       NUMBER                    DEFAULT -1,
  SCALE_LEFT          VARCHAR2(100 BYTE),
  SCALE_RIGHT         VARCHAR2(100 BYTE),
  FEEDBACK_TYPE       NUMBER                    DEFAULT -1,
  IN_HEADER           NUMBER                    DEFAULT -1,
  MULTIPLE_SELECTION  NUMBER                    DEFAULT -1,
  FORCE_INPUT         NUMBER(2)                 DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MATRIX_ANSWER_COLS  (Table) 
--
CREATE TABLE CASUS.MATRIX_ANSWER_COLS
(
  PARENT_ID    NUMBER                           NOT NULL,
  ORDER_NR     NUMBER                           NOT NULL,
  ANSWER_TEXT  VARCHAR2(2000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MATRIX_ANSWER_VALUES  (Table) 
--
CREATE TABLE CASUS.MATRIX_ANSWER_VALUES
(
  PARENT_ID     NUMBER                          NOT NULL,
  ORDER_NR      NUMBER                          NOT NULL,
  ANSWER_VALUE  VARCHAR2(500 BYTE),
  ANSWER_TEXT   VARCHAR2(2000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MCANSWER  (Table) 
--
CREATE TABLE CASUS.MCANSWER
(
  ITEM_ID         NUMBER                        NOT NULL,
  JUMP            NUMBER,
  VARARRAY_COUNT  NUMBER,
  COMMENT_ID      NUMBER,
  ADDINFO_ID      NUMBER,
  RATING          NUMBER                        DEFAULT NULL,
  BASE_ID         NUMBER                        DEFAULT -1,
  FEEDBACK_TYPE   NUMBER                        DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MCANSWER_ISSUE_CHK  (Table) 
--
CREATE TABLE CASUS.MCANSWER_ISSUE_CHK
(
  ITEM_ID     NUMBER,
  CHK         NUMBER,
  MY_COMMENT  VARCHAR2(4000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MCANSWER_VA  (Table) 
--
CREATE TABLE CASUS.MCANSWER_VA
(
  PARENT_ID      NUMBER                         NOT NULL,
  ORDER_NR       NUMBER                         NOT NULL,
  ANSWER_TEXT    VARCHAR2(2000 BYTE),
  CORRECT        NUMBER,
  CHOICE         NUMBER(2),
  CHOICE_NEW     NUMBER                         DEFAULT -1,
  POISON         NUMBER                         DEFAULT -1,
  BLOCKS         VARCHAR2(20 BYTE),
  UNIQUE_ID      NUMBER                         DEFAULT -1,
  STR_UNIQUE_ID  VARCHAR2(100 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MCANSWER_VA_CHG  (Table) 
--
CREATE TABLE CASUS.MCANSWER_VA_CHG
(
  PARENT_ID    NUMBER,
  ORDER_NR     NUMBER,
  ANSWER_TEXT  VARCHAR2(2000 BYTE),
  CORRECT      NUMBER,
  CHOICE       NUMBER(2),
  CHOICE_NEW   NUMBER                           DEFAULT -1,
  POISON       NUMBER                           DEFAULT -1,
  BLOCKS       VARCHAR2(20 BYTE),
  MOD_DATE     DATE                             DEFAULT SYSDATE,
  ACTION       NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MEDIAHEADER  (Table) 
--
CREATE TABLE CASUS.MEDIAHEADER
(
  ITEM_ID                     NUMBER,
  COMMENT1                    VARCHAR2(4000 BYTE),
  COMMENT2                    VARCHAR2(4000 BYTE),
  COMMENT3                    VARCHAR2(4000 BYTE),
  EXTERNALIZED                NUMBER,
  MEDIA_ID                    NUMBER            DEFAULT -1,
  MESH_ID                     NUMBER,
  HYPERLINK_ID                NUMBER,
  ADD1_EXT                    NUMBER,
  ADD1_FORMAT                 CHAR(4 BYTE),
  ADD1_ID                     NUMBER,
  ADD2_EXT                    NUMBER,
  ADD2_FORMAT                 CHAR(4 BYTE),
  ADD2_ID                     NUMBER,
  OPTIONS                     NUMBER(10)        DEFAULT 0,
  LAST_CHANGE                 DATE              DEFAULT TO_DATE('01-01-1999', 'MM-DD-YYYY'),
  HEIGHT                      NUMBER,
  WIDTH                       NUMBER,
  FORMAT                      CHAR(4 BYTE)      DEFAULT '????',
  MIME_TYPE                   VARCHAR2(50 BYTE),
  MEDIA_SIZE                  NUMBER            DEFAULT -1,
  AGENTCALC_IN_MODULES        VARCHAR2(4000 BYTE),
  AGENTCALC_IN_MODULES_COUNT  NUMBER            DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.MEDIAHEADER.AGENTCALC_IN_MODULES IS 'should be queried dynamically, but prepopolated with agent update better performance';


--
-- MEDIAHEADER_CONVERT_RESULTS  (Table) 
--
CREATE TABLE CASUS.MEDIAHEADER_CONVERT_RESULTS
(
  ITEM_ID               NUMBER,
  PATH                  VARCHAR2(500 BYTE),
  LAST_RESULT_LINE      VARCHAR2(500 BYTE),
  LAST_RESULT_COMPLETE  VARCHAR2(4000 BYTE),
  RESULT                NUMBER                  DEFAULT -1,
  TIMESTAMP             DATE                    DEFAULT sysdate
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MEDIA_METADATA  (Table) 
--
CREATE TABLE CASUS.MEDIA_METADATA
(
  CREATOR                 VARCHAR2(2000 BYTE),
  PERSONSAGREED           NUMBER                DEFAULT 0,
  CREATORAGREED           NUMBER                DEFAULT 0,
  CONSENTPERSONSCOMMENT   VARCHAR2(4000 BYTE),
  CONSENTCREATORCOMMENT   VARCHAR2(4000 BYTE),
  MEDIAID                 NUMBER                DEFAULT -1                    NOT NULL,
  LICENCECOMMENT          VARCHAR2(4000 BYTE),
  LICENCE                 NUMBER                DEFAULT -1,
  SOURCE                  VARCHAR2(2000 BYTE),
  CREATIONDATE            DATE,
  DESCRIPTION             VARCHAR2(4000 BYTE),
  ORG_ID                  NUMBER                DEFAULT -1,
  NONRELATIONAL_KEYWORDS  VARCHAR2(4000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.MEDIA_METADATA.NONRELATIONAL_KEYWORDS IS 'relational in media_metadata_keywords for more accurate search';


--
-- MEDIA_METADATA_LICENCE  (Table) 
--
CREATE TABLE CASUS.MEDIA_METADATA_LICENCE
(
  LICENCE_ID           NUMBER,
  NAME                 VARCHAR2(500 BYTE),
  DESCRIPTION          VARCHAR2(4000 BYTE),
  IMG_URL              VARCHAR2(500 BYTE),
  IMG_ALT              VARCHAR2(500 BYTE),
  IMG_URL_SMALL        VARCHAR2(500 BYTE),
  I18_NAME_KEY         VARCHAR2(100 BYTE),
  I18_DESCRIPTION_KEY  VARCHAR2(100 BYTE),
  I18_IMG_ALT_KEY      VARCHAR2(100 BYTE),
  DESCRIPTION_URL      VARCHAR2(500 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MEDICAL_FIELD  (Table) 
--
CREATE TABLE CASUS.MEDICAL_FIELD
(
  NAME  VARCHAR2(255 BYTE)                      NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MEDICAL_SUBFIELD  (Table) 
--
CREATE TABLE CASUS.MEDICAL_SUBFIELD
(
  NAME   VARCHAR2(255 BYTE)                     NOT NULL,
  FIELD  VARCHAR2(255 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- META_INHERIT  (Table) 
--
CREATE TABLE CASUS.META_INHERIT
(
  IH_TYPE   CHAR(4 BYTE),
  IH_TABLE  VARCHAR2(50 BYTE),
  IH_KEY    VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- META_REF  (Table) 
--
CREATE TABLE CASUS.META_REF
(
  REF_TYPE                CHAR(4 BYTE),
  REF_TABLE               VARCHAR2(50 BYTE),
  REF_ORDER               NUMBER,
  REF_TARGET_TABLE        VARCHAR2(50 BYTE),
  REF_TARGET_TABLE_FIELD  VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MINESWEEPER  (Table) 
--
CREATE TABLE CASUS.MINESWEEPER
(
  USERNAME  VARCHAR2(32 BYTE),
  DATA      LONG RAW,
  TIME      INTEGER                             DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MLOG$_TEST  (Table) 
--
CREATE TABLE CASUS.MLOG$_TEST
(
  M_ROW$$          VARCHAR2(255 BYTE),
  SNAPTIME$$       DATE,
  DMLTYPE$$        VARCHAR2(1 BYTE),
  OLD_NEW$$        VARCHAR2(1 BYTE),
  CHANGE_VECTOR$$  RAW(255)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON TABLE CASUS.MLOG$_TEST IS 'snapshot log for master table CASUS.TEST';


--
-- MM_TABLE  (Table) 
--
CREATE TABLE CASUS.MM_TABLE
(
  ITEM_ID    NUMBER                             NOT NULL,
  DATA_SIZE  NUMBER                             DEFAULT 1,
  DATA       LONG RAW                           DEFAULT '00'
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MONITOR  (Table) 
--
CREATE TABLE CASUS.MONITOR
(
  MONITOR  VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MOOV  (Table) 
--
CREATE TABLE CASUS.MOOV
(
  ITEM_ID    NUMBER                             NOT NULL,
  ORDER_NR   NUMBER                             DEFAULT 0                     NOT NULL,
  DATA_SIZE  NUMBER                             DEFAULT 1,
  DATA       LONG RAW                           DEFAULT '00'
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- MOOV2  (Table) 
--
CREATE TABLE CASUS.MOOV2
(
  ITEM_ID    NUMBER,
  ORDER_NR   NUMBER,
  DATA_SIZE  NUMBER,
  DATA       LONG RAW
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NCANSWER  (Table) 
--
CREATE TABLE CASUS.NCANSWER
(
  ITEM_ID     NUMBER                            NOT NULL,
  JUMP        NUMBER,
  NCTEXT_ID   NUMBER,
  COMMENT_ID  NUMBER,
  ADDINFO_ID  NUMBER,
  STRUCTURED  NUMBER                            DEFAULT 0,
  INPUT_SIZE  NUMBER                            DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.NCANSWER.INPUT_SIZE IS 'input text field size (-1|0=small,1=medium,2=large)';


--
-- NCANSWER_TEXT  (Table) 
--
CREATE TABLE CASUS.NCANSWER_TEXT
(
  ITEM_ID    NUMBER                             NOT NULL,
  DATA_SIZE  NUMBER,
  DATA       LONG
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NET_ELEMS_CNX  (Table) 
--
CREATE TABLE CASUS.NET_ELEMS_CNX
(
  ITEM_ID       NUMBER,
  ELEM_ID       NUMBER,
  VALUE         NUMBER,
  SRC_ELEM      NUMBER,
  DEST_ELEM     NUMBER,
  ELEM_COMMENT  VARCHAR2(4000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NET_ELEMS_CNX_MAPPING  (Table) 
--
CREATE TABLE CASUS.NET_ELEMS_CNX_MAPPING
(
  NUM_CONN      NUMBER                          DEFAULT 0,
  SRC_VALUE     NUMBER,
  DST_VALUE     NUMBER,
  DST_NUM_CONN  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NET_ELEMS2  (Table) 
--
CREATE TABLE CASUS.NET_ELEMS2
(
  ITEM_ID       NUMBER,
  ELEM_ID       NUMBER,
  ELEM_TYPE     NUMBER,
  ELEM_NAME     VARCHAR2(2000 BYTE),
  ELEM_SUBTYPE  NUMBER,
  ELEM_COMMENT  VARCHAR2(4000 BYTE),
  ELEM_FLAG     NUMBER,
  ORDER_NR      NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NETELMS_LIST  (Table) 
--
CREATE TABLE CASUS.NETELMS_LIST
(
  PARENT_ID       NUMBER                        NOT NULL,
  ORDER_NR        NUMBER                        NOT NULL,
  NETELM_TYPE     NUMBER(2),
  NETELM_COMMENT  VARCHAR2(2000 BYTE),
  NETELM_UID      NUMBER,
  CREATION        NUMBER(5)                     DEFAULT -1,
  INTERNAL_ID     NUMBER                        DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NETELMS_THPS  (Table) 
--
CREATE TABLE CASUS.NETELMS_THPS
(
  PARENT_ID    NUMBER                           NOT NULL,
  ORDER_NR     NUMBER                           NOT NULL,
  NAME         VARCHAR2(255 BYTE),
  CODE_ID      NUMBER,
  INTERNAL_ID  NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NET_LISTS  (Table) 
--
CREATE TABLE CASUS.NET_LISTS
(
  ITEM_ID    NUMBER,
  PARENT_ID  NUMBER                             NOT NULL,
  ORDER_NR   NUMBER                             NOT NULL,
  INDEX_NR   NUMBER                             NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NETS  (Table) 
--
CREATE TABLE CASUS.NETS
(
  ITEM_ID         NUMBER                        NOT NULL,
  DATA_SIZE       NUMBER,
  DATA            LONG,
  VARARRAY_COUNT  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NETS2  (Table) 
--
CREATE TABLE CASUS.NETS2
(
  ITEM_ID       NUMBER,
  COMMENT_ID    NUMBER                          DEFAULT 0,
  ADDINFO_ID    NUMBER                          DEFAULT 0,
  JUMP          NUMBER                          DEFAULT 0,
  NWMODE        NUMBER(4)                       DEFAULT 0,
  NUM_CONN      NUMBER(2)                       DEFAULT 3,
  DISPLAY_MODE  NUMBER                          DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- OBJECT_MAPPING  (Table) 
--
CREATE TABLE CASUS.OBJECT_MAPPING
(
  TYPE           VARCHAR2(10 BYTE),
  OLD_ID         NUMBER,
  NEW_ID         NUMBER,
  CHG_TIMESTAMP  DATE                           DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- OBJECT_VERSIONS  (Table) 
--
CREATE TABLE CASUS.OBJECT_VERSIONS
(
  NEW_ID                     NUMBER             DEFAULT -1,
  OLD_ID                     NUMBER             DEFAULT -1,
  DEPTH                      NUMBER             DEFAULT -1,
  MAPPING_STATUS             NUMBER             DEFAULT -1,
  MAPPING_STATUS_LAST_CHECK  DATE,
  LAST_CHECKED               DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PATIENTS  (Table) 
--
CREATE TABLE CASUS.PATIENTS
(
  ITEM_ID       NUMBER                          NOT NULL,
  REALNAME      VARCHAR2(255 BYTE),
  REALPRENAME   VARCHAR2(255 BYTE),
  TEACHNAME     VARCHAR2(255 BYTE),
  TEACHPRENAME  VARCHAR2(255 BYTE),
  BIRTHDATE     DATE,
  SEX           NUMBER,
  STATUS        NUMBER,
  AGE           NUMBER,
  CONSENT       NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PEERGROUP_LOG  (Table) 
--
CREATE TABLE CASUS.PEERGROUP_LOG
(
  PROCESS_DATE  DATE,
  LOG_DATE      DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PEERGROUP_PRECALC  (Table) 
--
CREATE TABLE CASUS.PEERGROUP_PRECALC
(
  PARENT_ID     NUMBER                          DEFAULT -1,
  CARD_ID       NUMBER                          DEFAULT -1,
  COURSE_ID     NUMBER                          DEFAULT -1,
  ITEM_DATE     DATE,
  ITEM_INDEX    NUMBER                          DEFAULT -1,
  ANSWER_COUNT  NUMBER                          DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PEERGROUP_PRECALC_STATUS  (Table) 
--
CREATE TABLE CASUS.PEERGROUP_PRECALC_STATUS
(
  CARD_ID    NUMBER                             DEFAULT -1,
  ITEM_DATE  DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PEERGROUP_PREP_CRON_OBJ  (Table) 
--
CREATE TABLE CASUS.PEERGROUP_PREP_CRON_OBJ
(
  OBJ_ID    NUMBER                              DEFAULT -1,
  OBJ_TYPE  VARCHAR2(5 BYTE)                    DEFAULT 'CARD',
  MANUAL    NUMBER                              DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PICT  (Table) 
--
CREATE TABLE CASUS.PICT
(
  ITEM_ID    NUMBER                             NOT NULL,
  DATA_SIZE  NUMBER                             DEFAULT 1,
  DATA       LONG RAW                           DEFAULT '00',
  ORDER_NR   NUMBER                             DEFAULT 0                     NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PICTUREHLBASE  (Table) 
--
CREATE TABLE CASUS.PICTUREHLBASE
(
  ITEM_ID         NUMBER                        NOT NULL,
  POSTEXT#        NUMBER,
  HL#             NUMBER,
  VARARRAY_COUNT  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PICTUREHLLIST  (Table) 
--
CREATE TABLE CASUS.PICTUREHLLIST
(
  PARENT_ID        NUMBER,
  ORDER_NR         NUMBER,
  HL_TYPE          NUMBER,
  TARGET_TYPE      CHAR(4 BYTE),
  TARGET_ID        NUMBER,
  COLOR            NUMBER,
  DISPLAY_TYPE     NUMBER(10),
  TARGET_MIMETYPE  VARCHAR2(50 BYTE),
  INTERNAL_ID      NUMBER                       DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PICTUREHL_POLYGON  (Table) 
--
CREATE TABLE CASUS.PICTUREHL_POLYGON
(
  PARENT_ID    NUMBER,
  ORDER_NR     NUMBER,
  PT_NR        NUMBER,
  POS_X        NUMBER,
  POS_Y        NUMBER,
  INTERNAL_ID  NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PICTUREHL_POSTEXT  (Table) 
--
CREATE TABLE CASUS.PICTUREHL_POSTEXT
(
  PARENT_ID    NUMBER,
  ORDER_NR     NUMBER,
  POS_X        NUMBER,
  POS_Y        NUMBER,
  POSTEXT      VARCHAR2(255 BYTE),
  INTERNAL_ID  NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PINS  (Table) 
--
CREATE TABLE CASUS.PINS
(
  PIN       VARCHAR2(100 BYTE)                  NOT NULL,
  COURSEID  NUMBER                              NOT NULL,
  USERID    NUMBER                              DEFAULT -1,
  END_DATE  DATE,
  GROUPID   NUMBER                              DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PINS_EXAM  (Table) 
--
CREATE TABLE CASUS.PINS_EXAM
(
  PIN           VARCHAR2(500 BYTE)              NOT NULL,
  EXAM_ID       NUMBER                          DEFAULT -1                    NOT NULL,
  USER_ID       NUMBER                          DEFAULT -1,
  GROUP_ID      NUMBER                          DEFAULT -1,
  EMAIL_ADRESS  VARCHAR2(200 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PLAN_TABLE  (Table) 
--
CREATE TABLE CASUS.PLAN_TABLE
(
  STATEMENT_ID     VARCHAR2(30 BYTE),
  TIMESTAMP        DATE,
  REMARKS          VARCHAR2(80 BYTE),
  OPERATION        VARCHAR2(30 BYTE),
  OPTIONS          VARCHAR2(30 BYTE),
  OBJECT_NODE      VARCHAR2(128 BYTE),
  OBJECT_OWNER     VARCHAR2(30 BYTE),
  OBJECT_NAME      VARCHAR2(30 BYTE),
  OBJECT_INSTANCE  INTEGER,
  OBJECT_TYPE      VARCHAR2(30 BYTE),
  OPTIMIZER        VARCHAR2(255 BYTE),
  SEARCH_COLUMNS   INTEGER,
  ID               INTEGER,
  PARENT_ID        INTEGER,
  POSITION         INTEGER,
  COST             INTEGER,
  CARDINALITY      INTEGER,
  BYTES            INTEGER,
  OTHER_TAG        VARCHAR2(255 BYTE),
  PARTITION_START  VARCHAR2(255 BYTE),
  PARTITION_STOP   VARCHAR2(255 BYTE),
  PARTITION_ID     INTEGER,
  OTHER            LONG,
  DISTRIBUTION     VARCHAR2(30 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PROGBER  (Table) 
--
CREATE TABLE CASUS.PROGBER
(
  NR        NUMBER,
  NAME      VARCHAR2(50 BYTE),
  ORDER_NR  NUMBER,
  LANG      VARCHAR2(5 BYTE),
  KEY       VARCHAR2(20 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PROPERTIES  (Table) 
--
CREATE TABLE CASUS.PROPERTIES
(
  P_KEY        VARCHAR2(100 BYTE),
  P_VALUE      VARCHAR2(2000 BYTE),
  P_LANG       VARCHAR2(10 BYTE)                DEFAULT '-',
  P_FROM_FILE  VARCHAR2(50 BYTE),
  P_MACHINE    VARCHAR2(50 BYTE)                DEFAULT '*',
  P_ENGINE     VARCHAR2(25 BYTE)                DEFAULT '*',
  P_COMMENT    VARCHAR2(1000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- QUESTION  (Table) 
--
CREATE TABLE CASUS.QUESTION
(
  DATUM       VARCHAR2(10 BYTE),
  GK          VARCHAR2(10 BYTE),
  NR          NUMBER,
  QUESTION    VARCHAR2(50 BYTE),
  ANSWER      VARCHAR2(50 BYTE),
  SOLUTION    CHAR(1 BYTE),
  IMPORTANCE  INTEGER,
  CHAPTER     VARCHAR2(50 BYTE),
  SUBCHAPTER  VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- RDF  (Table) 
--
CREATE TABLE CASUS.RDF
(
  RDF_ID  INTEGER                               NOT NULL,
  TITLE   VARCHAR2(255 BYTE),
  BODY    VARCHAR2(255 BYTE),
  URL     VARCHAR2(255 BYTE),
  AUTHOR  VARCHAR2(255 BYTE),
  DEPT    VARCHAR2(255 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- RECALC_SCORE  (Table) 
--
CREATE TABLE CASUS.RECALC_SCORE
(
  CASE_ID     NUMBER,
  AFTER_DATE  DATE,
  GROUP_ID    NUMBER                            DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- REFERENCE_TABLE  (Table) 
--
CREATE TABLE CASUS.REFERENCE_TABLE
(
  ITEM_ID     NUMBER                            NOT NULL,
  DUMMY_NR    NUMBER,
  REFERENCE1  NUMBER,
  DUMMY_STR   VARCHAR2(256 BYTE),
  REFERENCE2  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- REPORTS_TMP  (Table) 
--
CREATE TABLE CASUS.REPORTS_TMP
(
  KEY            NUMBER                         DEFAULT -1,
  ID             NUMBER                         DEFAULT -1,
  CREATION_DATE  DATE                           DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ROI_ANSWER  (Table) 
--
CREATE TABLE CASUS.ROI_ANSWER
(
  ITEM_ID     NUMBER                            NOT NULL,
  COMMENT_ID  NUMBER                            DEFAULT -1,
  ADDINFO_ID  NUMBER                            DEFAULT -1,
  MEDIA_ID    NUMBER                            DEFAULT -1,
  VARIANT     NUMBER                            DEFAULT -1,
  THRESHOLD   NUMBER                            DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ROLEPERMISSION_REF  (Table) 
--
CREATE TABLE CASUS.ROLEPERMISSION_REF
(
  RP_ID          NUMBER(10),
  ROLE_ID        NUMBER(10),
  PERMISSION_ID  NUMBER(10)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SEQ_AND_SITE  (Table) 
--
CREATE TABLE CASUS.SEQ_AND_SITE
(
  SITE_ID                NUMBER,
  MIN_VERSION_OF_CLIENT  NUMBER(10),
  SUPPORT_EMAIL          VARCHAR2(60 BYTE),
  DOWNLOAD_FTP           VARCHAR2(200 BYTE),
  TS                     DATE                   DEFAULT SYSDATE,
  REP_DATE               DATE                   DEFAULT null
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SHIBBOLETH_ACCESS_PROFILE  (Table) 
--
CREATE TABLE CASUS.SHIBBOLETH_ACCESS_PROFILE
(
  ITEM_ID      NUMBER,
  NAME         VARCHAR2(100 BYTE),
  DESCRIPTION  VARCHAR2(4000 BYTE),
  GROUP_ID     NUMBER                           DEFAULT -1,
  USER_ID      NUMBER                           DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SHIBBOLETH_ACCESS_PROFILE_ACC  (Table) 
--
CREATE TABLE CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC
(
  ITEM_ID       NUMBER                          DEFAULT -1,
  ORDER_NR      NUMBER                          DEFAULT 0,
  EXPRGROUP_NR  NUMBER                          DEFAULT 0,
  EXPR_TYPE     NUMBER                          DEFAULT 0,
  KEY_NAME      VARCHAR2(50 BYTE),
  KEY_VALUE     VARCHAR2(50 BYTE),
  CONTROL       NUMBER                          DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SHIBBOLETH_FEDERATION  (Table) 
--
CREATE TABLE CASUS.SHIBBOLETH_FEDERATION
(
  FEDERATION_ID  NUMBER,
  NAME           VARCHAR2(100 BYTE),
  GROUP_ID       NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SHIBBOLETH_FED_GROUP_REF  (Table) 
--
CREATE TABLE CASUS.SHIBBOLETH_FED_GROUP_REF
(
  FEDERATION_ID  NUMBER,
  GROUP_ID       NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SIMPLE_TABLE  (Table) 
--
CREATE TABLE CASUS.SIMPLE_TABLE
(
  ITEM_ID   NUMBER                              NOT NULL,
  DUMMY_NR  NUMBER,
  AFDADADA  VARCHAR2(20 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SITE_INFORMATION  (Table) 
--
CREATE TABLE CASUS.SITE_INFORMATION
(
  SITE_ID     NUMBER,
  LOCATION    VARCHAR2(200 BYTE),
  STREET      VARCHAR2(50 BYTE),
  STR_NUM     NUMBER,
  PLZ         NUMBER,
  CITY        VARCHAR2(50 BYTE),
  SERVER_DN   VARCHAR2(100 BYTE),
  SERVER_IP   VARCHAR2(20 BYTE),
  ORACLE_SID  VARCHAR2(40 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SLIDER_ANSWER  (Table) 
--
CREATE TABLE CASUS.SLIDER_ANSWER
(
  ITEM_ID         NUMBER                        NOT NULL,
  JUMP            NUMBER                        DEFAULT -1,
  VARARRAY_COUNT  NUMBER                        DEFAULT -1,
  COMMENT_ID      NUMBER                        DEFAULT -1,
  ADDINFO_ID      NUMBER                        DEFAULT -1,
  MAXIMUM         NUMBER                        DEFAULT -1,
  MINIMUM         NUMBER                        DEFAULT -1,
  STEP            NUMBER                        DEFAULT -1,
  SCALE_VISIBLE   NUMBER                        DEFAULT -1,
  SCALE_LEFT      VARCHAR2(100 BYTE),
  SCALE_RIGHT     VARCHAR2(100 BYTE),
  FEEDBACK_TYPE   NUMBER                        DEFAULT -1,
  RANGE           NUMBER                        DEFAULT -1,
  BASE_ID         NUMBER                        DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SNOENDUNG  (Table) 
--
CREATE TABLE CASUS.SNOENDUNG
(
  TEXT  VARCHAR2(255 BYTE)                      NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SNOMED  (Table) 
--
CREATE TABLE CASUS.SNOMED
(
  NUMMER    NUMBER                              NOT NULL,
  ACHSE     CHAR(1 BYTE),
  KEY       CHAR(6 BYTE),
  TYP       CHAR(1 BYTE),
  TEXT      VARCHAR2(255 BYTE),
  ANZWORTE  NUMBER,
  VERBLOCK  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SNOVERWEIS  (Table) 
--
CREATE TABLE CASUS.SNOVERWEIS
(
  BLOCK      NUMBER                             NOT NULL,
  VERWEISNR  NUMBER                             NOT NULL,
  ANZAHL     NUMBER,
  VERWEISE   VARCHAR2(25 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SNOWORT  (Table) 
--
CREATE TABLE CASUS.SNOWORT
(
  NUMMER  NUMBER,
  TEXT    VARCHAR2(255 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SNOWORTREL  (Table) 
--
CREATE TABLE CASUS.SNOWORTREL
(
  NUMMER    NUMBER                              NOT NULL,
  POS       NUMBER                              NOT NULL,
  WORTNR    NUMBER                              NOT NULL,
  ANZWORTE  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SOCIALNET_CLICKS  (Table) 
--
CREATE TABLE CASUS.SOCIALNET_CLICKS
(
  COURSE_ID  NUMBER                             DEFAULT -1,
  USER_ID    NUMBER                             DEFAULT -1,
  CLICKTIME  DATE                               DEFAULT SYSDATE,
  CASE_ID    NUMBER                             DEFAULT -1,
  SN_TYPE    NUMBER                             DEFAULT -1,
  SN_NAME    VARCHAR2(100 BYTE),
  ID         NUMBER                             DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- STATUS  (Table) 
--
CREATE TABLE CASUS.STATUS
(
  NR        NUMBER                              NOT NULL,
  NAME      VARCHAR2(50 BYTE),
  ORDER_NR  NUMBER,
  LANG      VARCHAR2(5 BYTE)                    DEFAULT 'de'
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ST_FK_ZUORDNUNG  (Table) 
--
CREATE TABLE CASUS.ST_FK_ZUORDNUNG
(
  ST_ID  VARCHAR2(25 BYTE),
  FK_ID  VARCHAR2(25 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ST_KB_ZUORDNUNG  (Table) 
--
CREATE TABLE CASUS.ST_KB_ZUORDNUNG
(
  ST_ID  VARCHAR2(25 BYTE),
  KB_ID  VARCHAR2(25 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- STREAMING_MM_ACTIONS  (Table) 
--
CREATE TABLE CASUS.STREAMING_MM_ACTIONS
(
  HOST         VARCHAR2(25 BYTE),
  ITEM_ID      NUMBER,
  ACTION_DATE  DATE                             DEFAULT SYSDATE,
  WIDTH        NUMBER,
  HEIGHT       NUMBER,
  PATH         VARCHAR2(255 BYTE),
  STATUS       VARCHAR2(255 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- STUD  (Table) 
--
CREATE TABLE CASUS.STUD
(
  MATNR        VARCHAR2(20 BYTE),
  NAME         VARCHAR2(40 BYTE),
  T1           VARCHAR2(1 BYTE),
  T2           VARCHAR2(1 BYTE),
  T3           VARCHAR2(1 BYTE),
  T4           VARCHAR2(1 BYTE),
  T5           VARCHAR2(1 BYTE),
  T6           VARCHAR2(1 BYTE),
  F1           VARCHAR2(1 BYTE),
  F2           VARCHAR2(1 BYTE),
  F3           VARCHAR2(1 BYTE),
  F4           VARCHAR2(1 BYTE),
  F5           VARCHAR2(1 BYTE),
  F6           VARCHAR2(1 BYTE),
  STGROUP      VARCHAR2(1 BYTE),
  F7           VARCHAR2(1 BYTE),
  TERM         VARCHAR2(40 BYTE),
  GROUP_NR     NUMBER,
  COMPUTER_NR  NUMBER,
  FNAME        VARCHAR2(40 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- STUDY_LMU_SLIDER_ADD  (Table) 
--
CREATE TABLE CASUS.STUDY_LMU_SLIDER_ADD
(
  SESSION_ID  NUMBER,
  CARD_ID     NUMBER,
  ANSWER      VARCHAR2(4000 BYTE),
  CASE_ID     NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SUBFIELD  (Table) 
--
CREATE TABLE CASUS.SUBFIELD
(
  NR         NUMBER                             NOT NULL,
  FIELD_NR   NUMBER                             NOT NULL,
  NAME       VARCHAR2(50 BYTE),
  LANG       VARCHAR2(5 BYTE)                   DEFAULT 'de',
  PARENT_NR  NUMBER(5)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SUBSCRIPTION  (Table) 
--
CREATE TABLE CASUS.SUBSCRIPTION
(
  ID               NUMBER                       NOT NULL,
  GROUPID          NUMBER                       DEFAULT -1,
  PROJECTID        NUMBER,
  ENDDATE          DATE,
  STARTDATE        DATE,
  CONTACTNAME      VARCHAR2(500 BYTE),
  COMMENT2         VARCHAR2(4000 BYTE),
  CONTACTEMAIL     VARCHAR2(500 BYTE),
  INST_TEXT        VARCHAR2(500 BYTE),
  BILL_NAME        VARCHAR2(500 BYTE),
  BILL_EMAIL       VARCHAR2(500 BYTE),
  BILL_PHONE       VARCHAR2(500 BYTE),
  STATUS           NUMBER                       DEFAULT 0,
  SUBMISS_DATE     DATE                         DEFAULT SYSDATE,
  STREET           VARCHAR2(2000 BYTE),
  CITY             VARCHAR2(1000 BYTE),
  STREETNUMBER     VARCHAR2(100 BYTE),
  ZIPCODE          VARCHAR2(500 BYTE),
  COUNTRY          VARCHAR2(10 BYTE),
  STATE            VARCHAR2(10 BYTE),
  SUPPORT_NAME     VARCHAR2(500 BYTE),
  SUPPORT_EMAIL    VARCHAR2(500 BYTE),
  FEQ_NAME         VARCHAR2(500 BYTE),
  FEQ_EMAIL        VARCHAR2(500 BYTE),
  PHONE            VARCHAR2(100 BYTE),
  FAX              VARCHAR2(100 BYTE),
  BELONGSTO        NUMBER                       DEFAULT -1,
  DUMMYID          NUMBER                       DEFAULT -1,
  EMAIL_DOMAIN     VARCHAR2(4000 BYTE),
  AGB_ACCEPTED     NUMBER                       DEFAULT 0,
  USER_ID          NUMBER                       DEFAULT -1,
  BILLING_SAME     NUMBER(1)                    DEFAULT 0,
  BILLING_USER_ID  NUMBER                       DEFAULT -1,
  SUPPORT_SAME     NUMBER(1)                    DEFAULT 0,
  SUPPORT_USER_ID  NUMBER                       DEFAULT -1,
  PRICE            NUMBER                       DEFAULT -1,
  BILL_FIRSTNAME   VARCHAR2(500 BYTE),
  AGB              CLOB                         DEFAULT NULL,
  FEQ_FIRSTNAME    VARCHAR2(500 BYTE),
  CREATE_STATUS    NUMBER                       DEFAULT -1,
  SUB_PERIOD       NUMBER                       DEFAULT -1,
  ONE_INVOICE      NUMBER                       DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SUBSCRIPTION_ERROCODE  (Table) 
--
CREATE TABLE CASUS.SUBSCRIPTION_ERROCODE
(
  PROJECT  NUMBER                               DEFAULT -1,
  NAME     VARCHAR2(1000 BYTE),
  EMAIL    VARCHAR2(1000 BYTE),
  CODE     NUMBER                               DEFAULT -1,
  TRYDATE  DATE                                 DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SUBSCR_PROJ  (Table) 
--
CREATE TABLE CASUS.SUBSCR_PROJ
(
  ID    NUMBER                                  NOT NULL,
  NAME  VARCHAR2(20 BYTE)                       NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SUBSCR_TUTORS  (Table) 
--
CREATE TABLE CASUS.SUBSCR_TUTORS
(
  SUBSCRIPTION_ID  NUMBER                       NOT NULL,
  NAME             VARCHAR2(100 BYTE),
  EMAIL            VARCHAR2(100 BYTE),
  ACCOUNT_CREATED  NUMBER                       DEFAULT 0,
  ID               NUMBER,
  FIRSTNAME        VARCHAR2(50 BYTE),
  USER_ID          NUMBER                       DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SUPPORTREQUEST  (Table) 
--
CREATE TABLE CASUS.SUPPORTREQUEST
(
  INTERNAL_ID   NUMBER                          DEFAULT -1,
  SENDEREMAIL   VARCHAR2(200 BYTE),
  CREATIONDATE  DATE                            DEFAULT SYSDATE,
  MAILCONTENT   VARCHAR2(4000 BYTE),
  TOADRESS      VARCHAR2(400 BYTE),
  SENT          NUMBER                          DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SWITCH_NEWACCOUNTS_MAP  (Table) 
--
CREATE TABLE CASUS.SWITCH_NEWACCOUNTS_MAP
(
  ACCOUNT     VARCHAR2(50 BYTE),
  ORACLE_UID  NUMBER,
  C_USER_ID   NUMBER,
  C_GROUP_ID  NUMBER,
  ACTIVE      VARCHAR2(5 BYTE),
  ROLES_STR   VARCHAR2(20 BYTE),
  CHG         NUMBER                            DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SWITCH_NEWNAMES_MAP  (Table) 
--
CREATE TABLE CASUS.SWITCH_NEWNAMES_MAP
(
  C_USER_ID  NUMBER,
  NAME       VARCHAR2(50 BYTE),
  FIRSTNAME  VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SWITCH_TEST  (Table) 
--
CREATE TABLE CASUS.SWITCH_TEST
(
  USER_ID   NUMBER,
  USER_STR  VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- TEST  (Table) 
--
CREATE TABLE CASUS.TEST
(
  ID     NUMBER,
  DSIZE  NUMBER,
  DATA   LONG RAW
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- TEST_CHILD  (Table) 
--
CREATE TABLE CASUS.TEST_CHILD
(
  PARENT_ID  NUMBER,
  ITEM_ID    NUMBER,
  ATTR1      NUMBER,
  ATTR2      NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- TESTITEM  (Table) 
--
CREATE TABLE CASUS.TESTITEM
(
  NOITEM_ID  NUMBER                             NOT NULL,
  DATA       VARCHAR2(1000 BYTE),
  ANYREF     NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- TEST_MATVIEW  (Table) 
--
CREATE TABLE CASUS.TEST_MATVIEW
(
  PARENT_ID  NUMBER,
  ITEM_ID    NUMBER,
  ID         NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON TABLE CASUS.TEST_MATVIEW IS 'snapshot table for snapshot CASUS.TEST_MATVIEW';


--
-- TEST_PARENT  (Table) 
--
CREATE TABLE CASUS.TEST_PARENT
(
  ITEM_ID  NUMBER,
  ATTR1    NUMBER                               DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- TEXT  (Table) 
--
CREATE TABLE CASUS.TEXT
(
  ITEM_ID    NUMBER                             NOT NULL,
  DATA_SIZE  NUMBER,
  DATA       LONG
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- TMP_CAMPUS_LISTS  (Table) 
--
CREATE TABLE CASUS.TMP_CAMPUS_LISTS
(
  ITEM_ID  NUMBER,
  NAME     VARCHAR2(4000 BYTE),
  TYPE     NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- TMP_CRT_LIST_ENTRIES  (Table) 
--
CREATE TABLE CASUS.TMP_CRT_LIST_ENTRIES
(
  ITEM_ID   NUMBER,
  NAME      VARCHAR2(4000 BYTE),
  TYPE      NUMBER,
  LANGUAGE  VARCHAR2(10 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- TOAD_PLAN_TABLE  (Table) 
--
CREATE TABLE CASUS.TOAD_PLAN_TABLE
(
  STATEMENT_ID     VARCHAR2(30 BYTE),
  TIMESTAMP        DATE,
  REMARKS          VARCHAR2(80 BYTE),
  OPERATION        VARCHAR2(30 BYTE),
  OPTIONS          VARCHAR2(30 BYTE),
  OBJECT_NODE      VARCHAR2(128 BYTE),
  OBJECT_OWNER     VARCHAR2(30 BYTE),
  OBJECT_NAME      VARCHAR2(30 BYTE),
  OBJECT_INSTANCE  INTEGER,
  OBJECT_TYPE      VARCHAR2(30 BYTE),
  OPTIMIZER        VARCHAR2(255 BYTE),
  SEARCH_COLUMNS   NUMBER,
  ID               INTEGER,
  PARENT_ID        INTEGER,
  POSITION         INTEGER,
  CARDINALITY      INTEGER,
  BYTES            INTEGER,
  OTHER_TAG        VARCHAR2(255 BYTE),
  COST             INTEGER,
  PARTITION_START  VARCHAR2(255 BYTE),
  PARTITION_STOP   VARCHAR2(255 BYTE),
  PARTITION_ID     INTEGER,
  OTHER            LONG,
  DISTRIBUTION     VARCHAR2(30 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- TXTD  (Table) 
--
CREATE TABLE CASUS.TXTD
(
  ITEM_ID    NUMBER                             NOT NULL,
  DATA_SIZE  NUMBER,
  DATA       LONG
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- UA_PEER_GROUP_PEER_HEADER  (Table) 
--
CREATE TABLE CASUS.UA_PEER_GROUP_PEER_HEADER
(
  CARD_ID          NUMBER                       DEFAULT 0,
  PREPROCESS_DATE  DATE                         DEFAULT SYSDATE,
  ANSWER_COUNT     NUMBER                       DEFAULT 0,
  ITEM_ID          NUMBER                       DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- UA_PEER_GROUP_PREPROCESSED  (Table) 
--
CREATE TABLE CASUS.UA_PEER_GROUP_PREPROCESSED
(
  ITEM_INDEX  INTEGER                           DEFAULT 0,
  ITEM_NAME   VARCHAR2(1000 BYTE)               DEFAULT NULL,
  ITEM_COUNT  NUMBER                            DEFAULT 0,
  PARENT_ID   NUMBER                            DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- UID_GROUPS  (Table) 
--
CREATE TABLE CASUS.UID_GROUPS
(
  PARENT_UID  NUMBER,
  CHILD_UID   NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ULANSWER  (Table) 
--
CREATE TABLE CASUS.ULANSWER
(
  ITEM_ID     NUMBER                            NOT NULL,
  JUMP        NUMBER,
  HLTEXT_ID   NUMBER,
  COMMENT_ID  NUMBER,
  ADDINFO_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ULANSWER_TEXT  (Table) 
--
CREATE TABLE CASUS.ULANSWER_TEXT
(
  ITEM_ID         NUMBER                        NOT NULL,
  DATA_SIZE       NUMBER,
  DATA            LONG,
  VARARRAY_COUNT  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ULANSWER_VA  (Table) 
--
CREATE TABLE CASUS.ULANSWER_VA
(
  PARENT_ID  NUMBER                             NOT NULL,
  ORDER_NR   NUMBER                             NOT NULL,
  BEGIN_UL   NUMBER,
  END_UL     NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- UPDATE_USER_RULE  (Table) 
--
CREATE TABLE CASUS.UPDATE_USER_RULE
(
  GROUP_ID  NUMBER,
  FIELD     NUMBER,
  NEWRULE   VARCHAR2(200 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- URL_TOKEN  (Table) 
--
CREATE TABLE CASUS.URL_TOKEN
(
  INTERNAL_ID      NUMBER                       DEFAULT -1,
  TOKEN            VARCHAR2(255 BYTE),
  EXPIRATION_DATE  DATE,
  TARGET_ID        NUMBER,
  TARGET_TYPE      VARCHAR2(25 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- URL_TOKEN_PROPERTIES  (Table) 
--
CREATE TABLE CASUS.URL_TOKEN_PROPERTIES
(
  INTERNAL_ID  NUMBER,
  KEY          VARCHAR2(100 BYTE),
  VALUE        VARCHAR2(100 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USERANSWERS_SUMMARY  (Table) 
--
CREATE TABLE CASUS.USERANSWERS_SUMMARY
(
  SESSION_ID     NUMBER                         NOT NULL,
  CARD_ID        NUMBER                         NOT NULL,
  USER_ID        NUMBER,
  CREATION_DATE  DATE,
  SUCCESS        FLOAT(126)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USERANSWER_VA_RELATIONAL  (Table) 
--
CREATE TABLE CASUS.USERANSWER_VA_RELATIONAL
(
  PARENT_ID          NUMBER                     NOT NULL,
  CARD_ID            NUMBER                     NOT NULL,
  ANSWER             VARCHAR2(2000 BYTE),
  MODIFICATION_DATE  DATE                       DEFAULT SYSDATE,
  ANSWERTYPE         VARCHAR2(4 BYTE),
  INDEX_NR           NUMBER,
  ANSWER_INT         NUMBER                     DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USERANSWER_VA_RESET  (Table) 
--
CREATE TABLE CASUS.USERANSWER_VA_RESET
(
  PARENT_ID            NUMBER                   NOT NULL,
  ORDER_NR             NUMBER,
  CARD_ID              NUMBER                   NOT NULL,
  ANSWER               VARCHAR2(2000 BYTE),
  SUCCESS              NUMBER,
  HANDLING_TIME        NUMBER,
  COMMENTREAD_COUNT    NUMBER,
  COMMENTREAD_TIME     NUMBER,
  FT_DETAILS           VARCHAR2(2000 BYTE),
  CREATION_DATE        DATE                     DEFAULT SYSDATE,
  MODIFICATION_DATE    DATE                     DEFAULT SYSDATE,
  ANSWERTYPE           VARCHAR2(4 BYTE),
  HASBEENRATED         NUMBER                   DEFAULT 1,
  CREATION_DATE_EXT    DATE                     DEFAULT NULL,
  HL_CLICKED_NUM       NUMBER                   DEFAULT 0,
  EXPERT_CLICKED_NUM   NUMBER                   DEFAULT 0,
  MAGNIFY_CLICKED_NUM  NUMBER                   DEFAULT 0,
  HL_NUMS              VARCHAR2(100 BYTE),
  ORG_CARD_ID          NUMBER,
  CONFIDENCE           NUMBER,
  PLUGIN_STORE         CLOB
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.USERANSWER_VA_RESET.COMMENTREAD_COUNT IS '??? wird das noch gebraucht ???';

COMMENT ON COLUMN CASUS.USERANSWER_VA_RESET.COMMENTREAD_TIME IS '??? wird das noch gebraucht ??';


--
-- USERANSWER_VA_STAT  (Table) 
--
CREATE TABLE CASUS.USERANSWER_VA_STAT
(
  SESSION_ID         NUMBER                     DEFAULT -1,
  CARD_ID            NUMBER                     DEFAULT -1,
  CARD_SUB_ID        VARCHAR2(5 BYTE),
  USER_ID            NUMBER                     DEFAULT -1,
  CASE_ID            NUMBER                     DEFAULT -1,
  COURSE_ID          NUMBER                     DEFAULT -1,
  CREATION_DATE      DATE                       DEFAULT SYSDATE,
  MODIFICATION_DATE  DATE                       DEFAULT SYSDATE,
  SUCCESS            NUMBER                     DEFAULT -1,
  WEIGHT             NUMBER                     DEFAULT -1,
  POISONHITORMISS    NUMBER(1)                  DEFAULT 0,
  LIMITREACHED       NUMBER(1)                  DEFAULT 0,
  CORRECT            NUMBER                     DEFAULT -1,
  INCORRECT          NUMBER                     DEFAULT -1,
  CORRECTTRUE        NUMBER                     DEFAULT -1,
  WRONGTRUE          NUMBER                     DEFAULT -1,
  USERTRUE           NUMBER                     DEFAULT -1,
  EXPERTTRUE         NUMBER                     DEFAULT -1,
  TOTALSIZE          NUMBER                     DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USER_EMAILOPT  (Table) 
--
CREATE TABLE CASUS.USER_EMAILOPT
(
  USERID       NUMBER                           NOT NULL,
  MAIL_OPTION  NUMBER                           NOT NULL,
  TYPE         NUMBER                           DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USERMAPPING  (Table) 
--
CREATE TABLE CASUS.USERMAPPING
(
  NEWID  NUMBER,
  OLDID  NUMBER,
  TMPID  NUMBER,
  NAME   VARCHAR2(200 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USER_NET  (Table) 
--
CREATE TABLE CASUS.USER_NET
(
  ITEM_ID         NUMBER                        NOT NULL,
  DATA_SIZE       NUMBER                        DEFAULT 1,
  DATA            LONG                          DEFAULT '-',
  VARARRAY_COUNT  NUMBER                        DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USER_NET_HYPOS  (Table) 
--
CREATE TABLE CASUS.USER_NET_HYPOS
(
  ITEM_ID    NUMBER                             NOT NULL,
  NAME       VARCHAR2(255 BYTE),
  PARENT_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USER_NET_LINKS  (Table) 
--
CREATE TABLE CASUS.USER_NET_LINKS
(
  ITEM_ID    NUMBER                             NOT NULL,
  HYPO_ID    NUMBER,
  DST_ID     NUMBER,
  VALUE      NUMBER,
  PARENT_ID  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USER_NET_LIST  (Table) 
--
CREATE TABLE CASUS.USER_NET_LIST
(
  ITEM_ID         NUMBER                        NOT NULL,
  VARARRAY_COUNT  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USER_NET_LISTS  (Table) 
--
CREATE TABLE CASUS.USER_NET_LISTS
(
  ITEM_ID    NUMBER,
  PARENT_ID  NUMBER,
  ORDER_NR   NUMBER,
  INDEX_NR   NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USERPERMISSION_REF  (Table) 
--
CREATE TABLE CASUS.USERPERMISSION_REF
(
  UP_ID          NUMBER(10),
  USER_ID        NUMBER(10),
  PERMISSION_ID  NUMBER(10)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USER_SUMMARY_STATEMENTS  (Table) 
--
CREATE TABLE CASUS.USER_SUMMARY_STATEMENTS
(
  ID               NUMBER,
  TEXT             VARCHAR2(4000 BYTE),
  CREATION_DATE    DATE                         DEFAULT SYSDATE,
  CASUS_USER_ID    NUMBER                       DEFAULT -1,
  CASUS_CASE_ID    NUMBER                       DEFAULT -1,
  CASUS_REF_ID     NUMBER                       DEFAULT -1,
  PATILLSCRIPT_ID  NUMBER                       DEFAULT -1,
  STAGE            NUMBER                       DEFAULT -1,
  ANALYZED         NUMBER                       DEFAULT 0,
  TYPE             NUMBER                       DEFAULT 1,
  LANG             VARCHAR2(2 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USRANS_CHGLOG  (Table) 
--
CREATE TABLE CASUS.USRANS_CHGLOG
(
  SESSION_ID   NUMBER,
  CARD_ID      NUMBER,
  OLD_VAL      FLOAT(126),
  NEW_VAL      FLOAT(126),
  CHG_DATE     DATE                             DEFAULT SYSDATE,
  USER_ID      NUMBER,
  TYPE         NUMBER                           DEFAULT -1,
  INTERNAL_ID  NUMBER                           DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- VARARRAY_TABLE  (Table) 
--
CREATE TABLE CASUS.VARARRAY_TABLE
(
  ITEM_ID         NUMBER                        NOT NULL,
  DUMMY_NR        NUMBER,
  VARARRAY_COUNT  NUMBER,
  F1              NUMBER,
  F2              NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- VARARRAY_TABLE_VA  (Table) 
--
CREATE TABLE CASUS.VARARRAY_TABLE_VA
(
  PARENT_ID  NUMBER                             NOT NULL,
  ORDER_NR   NUMBER                             NOT NULL,
  FIELD1_NR  NUMBER,
  FIELD2_NR  NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ADDCARD_CARD_ID_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_CARD_ID_IDX ON CASUS.ADDCARD_CLINREASON
(CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_CASE_ID_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_CASE_ID_IDX ON CASUS.ADDCARD_CLINREASON
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_CLINREASON_DELCARD_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_CLINREASON_DELCARD_IDX ON CASUS.ADDCARD_CLINREASON
(DELETE_CARD)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_CLINREASON_NAME_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_CLINREASON_NAME_IDX ON CASUS.ADDCARD_CLINREASON
(NAME)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   167
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_CLINREASON_SUBTYPE_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_CLINREASON_SUBTYPE_IDX ON CASUS.ADDCARD_CLINREASON
(SUBTYPE)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_ID_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_ID_IDX ON CASUS.ADDCARD_CLINREASON
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_INT_ID_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_INT_ID_IDX ON CASUS.ADDCARD_CLINREASON
(INTERNAL_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_MOV_CNT_CARD_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_MOV_CNT_CARD_IDX ON CASUS.ADDCARD_MOV_CNT
(CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_MOV_CNT_CASEID_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_MOV_CNT_CASEID_IDX ON CASUS.ADDCARD_MOV_CNT
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_MOV_CNT_SESS_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_MOV_CNT_SESS_IDX ON CASUS.ADDCARD_MOV_CNT
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_SESSION_ID_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_SESSION_ID_IDX ON CASUS.ADDCARD_CLINREASON
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_USER_ID_IDX  (Index) 
--
CREATE INDEX CASUS.ADDCARD_USER_ID_IDX ON CASUS.ADDCARD_CLINREASON
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- AICC_SESS_PLUGINS_URLS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.AICC_SESS_PLUGINS_URLS_PK ON CASUS.AICC_SESS_PLUGINS_URLS
(PLUGIN_ID, URL)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ANNO_CASEID_IDX  (Index) 
--
CREATE INDEX CASUS.ANNO_CASEID_IDX ON CASUS.ANNOTATIONS
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ANNO_PLAYERSTATUS_IDX  (Index) 
--
CREATE INDEX CASUS.ANNO_PLAYERSTATUS_IDX ON CASUS.ANNOTATIONS
(PLAYER_STATUS)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ANNO_STATUS_IDX  (Index) 
--
CREATE INDEX CASUS.ANNO_STATUS_IDX ON CASUS.ANNOTATIONS
(A_STATUS)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ANNO_SUMMARYFEEDBACKSTATEME_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.ANNO_SUMMARYFEEDBACKSTATEME_PK ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT
(ANNOTATION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ANNO_TARGETID_IDX  (Index) 
--
CREATE INDEX CASUS.ANNO_TARGETID_IDX ON CASUS.ANNOTATIONS
(TARGET_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ANNO_TOUSERID_IDX  (Index) 
--
CREATE INDEX CASUS.ANNO_TOUSERID_IDX ON CASUS.ANNOTATIONS
(TO_USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ANNO_TYPE_IDX  (Index) 
--
CREATE INDEX CASUS.ANNO_TYPE_IDX ON CASUS.ANNOTATIONS
(TYPE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ANNO_USERID_IDX  (Index) 
--
CREATE INDEX CASUS.ANNO_USERID_IDX ON CASUS.ANNOTATIONS
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- AUTHORING_MENUS_KEY_INDEX  (Index) 
--
CREATE INDEX CASUS.AUTHORING_MENUS_KEY_INDEX ON CASUS.AUTHORING_MENUS
(KEY)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- AUTHORING_MENUS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.AUTHORING_MENUS_PK ON CASUS.AUTHORING_MENUS
(NR, KEY, LANG)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- BIGMEDIA_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.BIGMEDIA_TABLE_PK ON CASUS.BIGMEDIA
(ITEM_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CARDADD_BOX_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CARDADD_BOX_PK ON CASUS.CARDADD_BOX
(ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CARD_NAV_CARDID_IDX  (Index) 
--
CREATE INDEX CASUS.CARD_NAV_CARDID_IDX ON CASUS.CARD_NAV
(CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CARD_NAV_CASEID_IDX  (Index) 
--
CREATE INDEX CASUS.CARD_NAV_CASEID_IDX ON CASUS.CARD_NAV
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CARD_NAV_ID_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CARD_NAV_ID_PK ON CASUS.CARD_NAV
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASE_ENG_SETTING_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CASE_ENG_SETTING_PK ON CASUS.CASE_ENG_SETTING
(CASE_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASE_ID_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CASE_ID_PK ON CASUS.CASE_METADATA
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASE_RATING_CASE_ID_IDX  (Index) 
--
CREATE INDEX CASUS.CASE_RATING_CASE_ID_IDX ON CASUS.CASE_RATING
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASE_RATING_PK_IDX  (Index) 
--
CREATE INDEX CASUS.CASE_RATING_PK_IDX ON CASUS.CASE_RATING
(ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASE_RATING_SUM_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CASE_RATING_SUM_PK ON CASUS.CASE_RATING_SUM
(CASE_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASE_RATING_USER_ID_IDX  (Index) 
--
CREATE INDEX CASUS.CASE_RATING_USER_ID_IDX ON CASUS.CASE_RATING
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASE_REVIEW_REF_IDX  (Index) 
--
CREATE INDEX CASUS.CASE_REVIEW_REF_IDX ON CASUS.CASE_REVIEW_REF
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASE_REVIEW_REF_PK_IDX  (Index) 
--
CREATE INDEX CASUS.CASE_REVIEW_REF_PK_IDX ON CASUS.CASE_REVIEW_REF
(INTERNAL_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASES_ADD_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CASES_ADD_PK ON CASUS.CASES_ADD
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASES_INTERNET_CASEID_IDX  (Index) 
--
CREATE INDEX CASUS.CASES_INTERNET_CASEID_IDX ON CASUS.CASE_INTERNET
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASES_INTERNET_LANG_IDX  (Index) 
--
CREATE INDEX CASUS.CASES_INTERNET_LANG_IDX ON CASUS.CASE_INTERNET
(LANGUAGE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASES_STRUCT_CARDNUM_IDX  (Index) 
--
CREATE INDEX CASUS.CASES_STRUCT_CARDNUM_IDX ON CASUS.CASES_STRUCTURE_CARDNUM_TEST
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASES_VIEW_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CASES_VIEW_TABLE_PK ON CASUS.CASES_VIEW_TABLE
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASUS_CASE_ACC_CASEID_IDX  (Index) 
--
CREATE INDEX CASUS.CASUS_CASE_ACC_CASEID_IDX ON CASUS.CASE_ACC
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASUS_CASE_ACC_USERID_IDX  (Index) 
--
CREATE INDEX CASUS.CASUS_CASE_ACC_USERID_IDX ON CASUS.CASE_ACC
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASUS_LM_LIST_PK_IDX  (Index) 
--
CREATE INDEX CASUS.CASUS_LM_LIST_PK_IDX ON CASUS.CASE_LM_LISTS
(ITEM_ID, TYPE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CAVGSUCC_TEST_CASEID_IDX  (Index) 
--
CREATE INDEX CASUS.CAVGSUCC_TEST_CASEID_IDX ON CASUS.C_SESSION_AVG_SUCCESS_TEST
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CAVGSUCC_TEST_COURSEGROUID_IDX  (Index) 
--
CREATE INDEX CASUS.CAVGSUCC_TEST_COURSEGROUID_IDX ON CASUS.C_SESSION_AVG_SUCCESS_TEST
(COURSE_GROUP_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CAVGSUCC_TEST_COURSEID_IDX  (Index) 
--
CREATE INDEX CASUS.CAVGSUCC_TEST_COURSEID_IDX ON CASUS.C_SESSION_AVG_SUCCESS_TEST
(COURSE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CAVGSUCC_TEST_EOC_IDX  (Index) 
--
CREATE INDEX CASUS.CAVGSUCC_TEST_EOC_IDX ON CASUS.C_SESSION_AVG_SUCCESS_TEST
(END_OF_CASE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CAVGSUCC_TEST_IDX  (Index) 
--
CREATE INDEX CASUS.CAVGSUCC_TEST_IDX ON CASUS.C_SESSION_AVG_SUCCESS_TEST
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CAVGSUCC_TEST_USERID_IDX  (Index) 
--
CREATE INDEX CASUS.CAVGSUCC_TEST_USERID_IDX ON CASUS.C_SESSION_AVG_SUCCESS_TEST
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CCR_CHG_MOD_IDX  (Index) 
--
CREATE INDEX CASUS.CCR_CHG_MOD_IDX ON CASUS.COURSE_CASE_REF_CHG
(MODIFIED)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CG_ID_IDX  (Index) 
--
CREATE INDEX CASUS.CG_ID_IDX ON CASUS.COURSE_GROUPS
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CG_NAMEDLIST_GROUP_IDX  (Index) 
--
CREATE INDEX CASUS.CG_NAMEDLIST_GROUP_IDX ON CASUS.CG_TUTORS_NAMED_LISTS
(GROUP_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CG_NAMELIST_TUTOR_IDX  (Index) 
--
CREATE INDEX CASUS.CG_NAMELIST_TUTOR_IDX ON CASUS.CG_TUTORS_NAMED_LISTS
(TUTOR_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CG_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CG_PK ON CASUS.COURSE_GROUPS
(COURSE_ID, GROUP_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CGT_ID_IDX  (Index) 
--
CREATE INDEX CASUS.CGT_ID_IDX ON CASUS.COURSE_GROUP_TUTORS
(COURSEGROUPID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CGTMS_COURSE_GROUP_IDX  (Index) 
--
CREATE INDEX CASUS.CGTMS_COURSE_GROUP_IDX ON CASUS.CG_TUTORS_MY_STUDENTS
(COURSE_GROUP_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CGTMS_COURSE_IDX  (Index) 
--
CREATE INDEX CASUS.CGTMS_COURSE_IDX ON CASUS.CG_TUTORS_MY_STUDENTS
(COURSE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CGTMS_TUTOR_IDX  (Index) 
--
CREATE INDEX CASUS.CGTMS_TUTOR_IDX ON CASUS.CG_TUTORS_MY_STUDENTS
(TUTOR_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CGT_OLD_PK_IDX  (Index) 
--
CREATE INDEX CASUS.CGT_OLD_PK_IDX ON CASUS.COURSE_GROUP_TUTORS
(COURSE_ID, GROUP_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CG_TUTORS_NAMED_LISTS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CG_TUTORS_NAMED_LISTS_PK ON CASUS.CG_TUTORS_NAMED_LISTS
(INTERNAL_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CLIN_REASON_RATE_CASEID_IDX  (Index) 
--
CREATE INDEX CASUS.CLIN_REASON_RATE_CASEID_IDX ON CASUS.CLINREASON_RATE
(CASE_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSECASEREF_CASEID_IDX  (Index) 
--
CREATE INDEX CASUS.COURSECASEREF_CASEID_IDX ON CASUS.COURSE_CASE_REF
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSECASEREF_COURSEID  (Index) 
--
CREATE INDEX CASUS.COURSECASEREF_COURSEID ON CASUS.COURSE_CASE_REF
(COURSE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSE_CONFERENCING_IDX  (Index) 
--
CREATE INDEX CASUS.COURSE_CONFERENCING_IDX ON CASUS.COURSE_CONFERENCING
(COURSE_ID, USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSE_DELETE_IDX  (Index) 
--
CREATE INDEX CASUS.COURSE_DELETE_IDX ON CASUS.COURSE
(DELETE_FLAG)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSE_END_DATE_IDX  (Index) 
--
CREATE INDEX CASUS.COURSE_END_DATE_IDX ON CASUS.COURSE
(END_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSE_GROUP_ID_IDX  (Index) 
--
CREATE INDEX CASUS.COURSE_GROUP_ID_IDX ON CASUS.COURSE
(GROUP_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSE_GROUP_TUTORS_MY_STUD_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.COURSE_GROUP_TUTORS_MY_STUD_PK ON CASUS.CG_TUTORS_MY_STUDENTS
(INTERNAL_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.COURSE_PK ON CASUS.COURSE
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSE_START_DATE_IDX  (Index) 
--
CREATE INDEX CASUS.COURSE_START_DATE_IDX ON CASUS.COURSE
(START_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSESTUDREF_COURSEID_IDX  (Index) 
--
CREATE INDEX CASUS.COURSESTUDREF_COURSEID_IDX ON CASUS.COURSE_STUDENT_REF
(COURSE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSESTUDREF_STUDID_IDX  (Index) 
--
CREATE INDEX CASUS.COURSESTUDREF_STUDID_IDX ON CASUS.COURSE_STUDENT_REF
(STUDENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- COURSE_TUTOR_IDX  (Index) 
--
CREATE INDEX CASUS.COURSE_TUTOR_IDX ON CASUS.COURSE
(TUTOR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_PERMISSION_ACTION_IDX  (Index) 
--
CREATE INDEX CASUS.C_PERMISSION_ACTION_IDX ON CASUS.C_PERMISSION
(ACTION)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_PERMISSION_MODUL_IDX  (Index) 
--
CREATE INDEX CASUS.C_PERMISSION_MODUL_IDX ON CASUS.C_PERMISSION
(MODUL)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_PERMISSION_PERM_IDX  (Index) 
--
CREATE INDEX CASUS.C_PERMISSION_PERM_IDX ON CASUS.C_PERMISSION
(PERM)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_PERMISSION_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.C_PERMISSION_PK ON CASUS.C_PERMISSION
(PERM_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_ROLE_NAME_IDX  (Index) 
--
CREATE INDEX CASUS.C_ROLE_NAME_IDX ON CASUS.C_ROLE
(NAME)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_ROLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.C_ROLE_PK ON CASUS.C_ROLE
(ROLE_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_ACTION_IDX  (Index) 
--
CREATE INDEX CASUS.CSA_ACTION_IDX ON CASUS.C_SESSION_ACTION
(ACTION)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_ACTION_USER_TS_IDX  (Index) 
--
CREATE INDEX CASUS.CSA_ACTION_USER_TS_IDX ON CASUS.C_SESSION_ACTION
(ACTION, USER_ID, TIMESTAMP)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_AGENT_IDX  (Index) 
--
CREATE INDEX CASUS.CSA_AGENT_IDX ON CASUS.C_SESSION_ACTION
(AGENT)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_COURSEID_IDX  (Index) 
--
CREATE INDEX CASUS.CSA_COURSEID_IDX ON CASUS.C_SESSION_ACTION
(COURSE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CS_ACTION_INTERNAL_ID_IDX  (Index) 
--
CREATE INDEX CASUS.CS_ACTION_INTERNAL_ID_IDX ON CASUS.C_SESSION_ACTION
(INTERNAL_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_DETAILS_ACTION_IDX  (Index) 
--
CREATE INDEX CASUS.CSA_DETAILS_ACTION_IDX ON CASUS.C_SESSION_ACTION_DETAILS
(ACTION, ACTION_MODIFIER)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_DETAILS_COURSE_IDX  (Index) 
--
CREATE INDEX CASUS.CSA_DETAILS_COURSE_IDX ON CASUS.C_SESSION_ACTION_DETAILS
(COURSE_ID, CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_DETAILS_ID_IDX  (Index) 
--
CREATE INDEX CASUS.CSA_DETAILS_ID_IDX ON CASUS.C_SESSION_ACTION_DETAILS
(INTERNAL_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          100M
            NEXT             25M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_DETAILS_TS_IDX  (Index) 
--
CREATE INDEX CASUS.CSA_DETAILS_TS_IDX ON CASUS.C_SESSION_ACTION_DETAILS
(TIMESTAMP)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_FAV_INDX  (Index) 
--
CREATE INDEX CASUS.CSA_FAV_INDX ON CASUS.C_SESSION_ACTION_FAVOURITES
(USER_ID, ACTION, ACTION_MODIFIER, TIMESTAMP)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSALLMH_TAB_IDX  (Index) 
--
CREATE INDEX CASUS.CSALLMH_TAB_IDX ON CASUS.CS_ALL_MH_NAMES_VIEW_TABLE
(MEDIAHEADER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_SESSIONID_IDX  (Index) 
--
CREATE INDEX CASUS.CSA_SESSIONID_IDX ON CASUS.C_SESSION_ACTION
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSA_TIMESTAMP_IDX  (Index) 
--
CREATE INDEX CASUS.CSA_TIMESTAMP_IDX ON CASUS.C_SESSION_ACTION
(TIMESTAMP)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_AVGSUCC_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_AVGSUCC_IDX ON CASUS.C_SESSION_AVG_SUCCESS
(AVG_SUCCESS)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_CASEID_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_CASEID_IDX ON CASUS.C_SESSION_AVG_SUCCESS
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_COURSEGROUID_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_COURSEGROUID_IDX ON CASUS.C_SESSION_AVG_SUCCESS
(COURSE_GROUP_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_COURSEID_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_COURSEID_IDX ON CASUS.C_SESSION_AVG_SUCCESS
(COURSE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_EOC_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_EOC_IDX ON CASUS.C_SESSION_AVG_SUCCESS
(END_OF_CASE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_IDX ON CASUS.C_SESSION_AVG_SUCCESS
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_LASTUPDATED_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_LASTUPDATED_IDX ON CASUS.C_SESSION_AVG_SUCCESS
(LAST_CALCULATED)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_MODDATE_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_MODDATE_IDX ON CASUS.C_SESSION_AVG_SUCCESS
(SESSION_MODIFICATION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_TEST_LASTUPDATED_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_TEST_LASTUPDATED_IDX ON CASUS.C_SESSION_AVG_SUCCESS_TEST
(LAST_CALCULATED)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_TEST_UCD_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_TEST_UCD_IDX ON CASUS.C_SESSION_AVG_SUCCESS_TEST
(USER_CREATION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_UCD_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_UCD_IDX ON CASUS.C_SESSION_AVG_SUCCESS
(USER_CREATION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSAVGSUCC_USERID_IDX  (Index) 
--
CREATE INDEX CASUS.CSAVGSUCC_USERID_IDX ON CASUS.C_SESSION_AVG_SUCCESS
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_ACTIVE_HTTP_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_ACTIVE_HTTP_IDX ON CASUS.C_SESSION_ACTIVE
(HTTPSESSION)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_ACTIVE_SESS_ID_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_ACTIVE_SESS_ID_IDX ON CASUS.C_SESSION_ACTIVE
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_DELETE_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_DELETE_IDX ON CASUS.C_SESSION_DELETE
(SESSION_ID, USER_ID, CASE_ID, END_OF_CASE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_DELETE_IDX2  (Index) 
--
CREATE INDEX CASUS.C_SESSION_DELETE_IDX2 ON CASUS.C_SESSION_DELETE
(MODIFICATION_DATE, CREATION_DATE, ENDOFSESSION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_LOG_ID_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_LOG_ID_IDX ON CASUS.C_SESSION_LOG
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSPR_PK_SEQ  (Index) 
--
CREATE UNIQUE INDEX CASUS.CSPR_PK_SEQ ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF
(COURSE_ID, PROFILE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSR_CHG_MOD_IDX  (Index) 
--
CREATE INDEX CASUS.CSR_CHG_MOD_IDX ON CASUS.COURSE_STUDENT_REF_CHG
(MODIFIED)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSR_EXPDATE_IDX  (Index) 
--
CREATE INDEX CASUS.CSR_EXPDATE_IDX ON CASUS.COURSE_STUDENT_REF
(EXPIRATION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CSR_GROUPNR_IDX  (Index) 
--
CREATE INDEX CASUS.CSR_GROUPNR_IDX ON CASUS.COURSE_STUDENT_REF
(GROUP_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CS_STATS_IDX  (Index) 
--
CREATE INDEX CASUS.CS_STATS_IDX ON CASUS.C_SESSION_STATS
(COURSE_ID, GROUP_NR, MODIFICATION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CS_STATS2_MAIN_IDX  (Index) 
--
CREATE INDEX CASUS.CS_STATS2_MAIN_IDX ON CASUS.C_SESSION_STATS2
(COURSE_ID, GROUP_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CST_CASEID  (Index) 
--
CREATE INDEX CASUS.CST_CASEID ON CASUS.CASES_STRUCTURE_TABLE
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CS2C_COURSEID_IDX  (Index) 
--
CREATE INDEX CASUS.CS2C_COURSEID_IDX ON CASUS.C_SESSION_2_COURSE
(COURSE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CS2C_SESSIONID_IDX  (Index) 
--
CREATE INDEX CASUS.CS2C_SESSIONID_IDX ON CASUS.C_SESSION_2_COURSE
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_USER_CHG_USER_IDX  (Index) 
--
CREATE INDEX CASUS.C_USER_CHG_USER_IDX ON CASUS.C_USER_CHG
(USER_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_USER_SAVE_IDX  (Index) 
--
CREATE INDEX CASUS.C_USER_SAVE_IDX ON CASUS.C_USER_SAVE
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_USER_TEST_LOGIN_UN  (Index) 
--
CREATE UNIQUE INDEX CASUS.C_USER_TEST_LOGIN_UN ON CASUS.C_USER_TEST
(LOGIN)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- DATA_ITEMS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.DATA_ITEMS_PK ON CASUS.DATA_ITEMS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- DEL_IDX  (Index) 
--
CREATE INDEX CASUS.DEL_IDX ON CASUS.DATA_ITEMS
(DELETE_FLAG)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- DIC_CREATED  (Index) 
--
CREATE INDEX CASUS.DIC_CREATED ON CASUS.DATA_ITEMS_CHG
(CREATED)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- DIC_INDX  (Index) 
--
CREATE INDEX CASUS.DIC_INDX ON CASUS.DATA_ITEMS_CHG
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- DIC_MODIFIED_IDX  (Index) 
--
CREATE INDEX CASUS.DIC_MODIFIED_IDX ON CASUS.DATA_ITEMS_CHG
(MODIFIED)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- DIC_STREAMED_IDX  (Index) 
--
CREATE INDEX CASUS.DIC_STREAMED_IDX ON CASUS.DATA_ITEMS_CHG
(STREAMED)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- DRC$USER_TEXT_INDEX$R  (Index) 
--
CREATE UNIQUE INDEX CASUS.DRC$USER_TEXT_INDEX$R ON CASUS.DR$USER_TEXT_INDEX$R
(ROW_NO)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- DR$MAILMSG_TEXT_INDEX$X  (Index) 
--
CREATE INDEX CASUS.DR$MAILMSG_TEXT_INDEX$X ON CASUS.DR$MAILMSG_TEXT_INDEX$I
(TOKEN_TEXT, TOKEN_TYPE, TOKEN_FIRST, TOKEN_LAST, TOKEN_COUNT)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      KEEP
           )
COMPRESS 2;

--
-- DR$USER_TEXT_INDEX$X  (Index) 
--
CREATE INDEX CASUS.DR$USER_TEXT_INDEX$X ON CASUS.DR$USER_TEXT_INDEX$I
(TOKEN_TEXT, TOKEN_TYPE, TOKEN_FIRST, TOKEN_LAST, TOKEN_COUNT)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
COMPRESS 2;

--
-- DU_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.DU_TABLE_PK ON CASUS.DUS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- DU2_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.DU2_TABLE_PK ON CASUS.DUS2
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- EDUCATION_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.EDUCATION_PK ON CASUS.EDUCATION
(NR, STATUS_NR, LANG)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- EXTSESSION_ERRMSG_IDX  (Index) 
--
CREATE INDEX CASUS.EXTSESSION_ERRMSG_IDX ON CASUS.EXT_SESSION
(ERRMSG)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- EXTSESSION_INITOK_IDX  (Index) 
--
CREATE INDEX CASUS.EXTSESSION_INITOK_IDX ON CASUS.EXT_SESSION
(INITOK)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- EXTSESSION_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.EXTSESSION_PK ON CASUS.EXT_SESSION
(SESSION_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- EXTSESSION_TID_IDX  (Index) 
--
CREATE INDEX CASUS.EXTSESSION_TID_IDX ON CASUS.EXT_SESSION
(TOOL_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- EXTSESSION_UID_IDX  (Index) 
--
CREATE INDEX CASUS.EXTSESSION_UID_IDX ON CASUS.EXT_SESSION
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- EXTTOOL_NAME_IDX  (Index) 
--
CREATE INDEX CASUS.EXTTOOL_NAME_IDX ON CASUS.EXT_TOOL
(NAME)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- EXTTOOL_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.EXTTOOL_PK ON CASUS.EXT_TOOL
(TOOL_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- FIELD_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.FIELD_PK ON CASUS.FIELD
(NR, LANG)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- FINDING_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.FINDING_TABLE_PK ON CASUS.FINDINGS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- FTANSWER_ITEM_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.FTANSWER_ITEM_TABLE_PK ON CASUS.FTANSWER_ITEM
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- FTANSWER_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.FTANSWER_TABLE_PK ON CASUS.FTANSWER
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- FTANSWER_TEXT_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.FTANSWER_TEXT_TABLE_PK ON CASUS.FTANSWER_DATA
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- GROUP_ID_IDX  (Index) 
--
CREATE INDEX CASUS.GROUP_ID_IDX ON CASUS.DATA_ITEMS
(GROUP_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- HTML_VS_ID_IDX  (Index) 
--
CREATE INDEX CASUS.HTML_VS_ID_IDX ON CASUS.HTMD_VS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- HTML_VS_MAX_IDX  (Index) 
--
CREATE INDEX CASUS.HTML_VS_MAX_IDX ON CASUS.HTMD_VS
(MY_VERSION)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ID_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.ID_TABLE_PK ON CASUS.ID_TABLE
(ID_TABLE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- IDX_CASUS_LISTS_ITEMID  (Index) 
--
CREATE INDEX CASUS.IDX_CASUS_LISTS_ITEMID ON CASUS.LISTS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- IDX_CASUS_NET_LISTS_ITEMID  (Index) 
--
CREATE INDEX CASUS.IDX_CASUS_NET_LISTS_ITEMID ON CASUS.NET_LISTS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- IDX_USER_NET_LISTS_ITEMID  (Index) 
--
CREATE INDEX CASUS.IDX_USER_NET_LISTS_ITEMID ON CASUS.USER_NET_LISTS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- INDEX_META_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.INDEX_META_PK ON CASUS.INDEX_META
(TYPE, TABLE_NAME, COLUMN_NAME)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- INDEX_REF_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.INDEX_REF_PK ON CASUS.INDEX_REF
(WORD_ID, ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- INDEX_WORDS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.INDEX_WORDS_PK ON CASUS.INDEX_WORDS
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- JPEG_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.JPEG_TABLE_PK ON CASUS.JPEG
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- LISTS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.LISTS_PK ON CASUS.LISTS
(PARENT_ID, ORDER_NR, INDEX_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- LO_CNX_ID_IDX  (Index) 
--
CREATE INDEX CASUS.LO_CNX_ID_IDX ON CASUS.LO_OBJ_CATALOGENTRY
(LO_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- LONGMENU_ITEMS_PID_IDX  (Index) 
--
CREATE INDEX CASUS.LONGMENU_ITEMS_PID_IDX ON CASUS.LONGMENU_ITEMS
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- LPCT_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.LPCT_TABLE_PK ON CASUS.LPCT
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- LRS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.LRS_PK ON CASUS.LRS
(ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MAIL_MESSAGE_PK_IDX  (Index) 
--
CREATE INDEX CASUS.MAIL_MESSAGE_PK_IDX ON CASUS.MAIL_MESSAGE
(INTERNAL_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MAILMSG_TEXT_INDEX  (Index) 
--
CREATE INDEX CASUS.MAILMSG_TEXT_INDEX ON CASUS.MAIL_MESSAGE
(M_CONTENT, M_CREATION_DATE)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS('DATASTORE mailmsg_text_prefs LEXER mylex sync (every "sysdate+(1/24/10)")');

--
-- MAPPINGANSWER_CNX_PID_IDX  (Index) 
--
CREATE INDEX CASUS.MAPPINGANSWER_CNX_PID_IDX ON CASUS.MAPPINGANSWER_CNX
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MAPPINGANSWER_ID_IDX  (Index) 
--
CREATE INDEX CASUS.MAPPINGANSWER_ID_IDX ON CASUS.MAPPINGANSWER
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MAPPINGANSWER_ITEMS_PID_IDX  (Index) 
--
CREATE INDEX CASUS.MAPPINGANSWER_ITEMS_PID_IDX ON CASUS.MAPPINGANSWER_ITEMS
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MATRIX_ANSWER_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.MATRIX_ANSWER_TABLE_PK ON CASUS.MATRIX_ANSWER
(ITEM_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MCANS_IDX_CHG_MOD_IDX  (Index) 
--
CREATE INDEX CASUS.MCANS_IDX_CHG_MOD_IDX ON CASUS.MCANSWER_VA_CHG
(MOD_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MCANS_VA_CHG_PIDX  (Index) 
--
CREATE INDEX CASUS.MCANS_VA_CHG_PIDX ON CASUS.MCANSWER_VA_CHG
(PARENT_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MCANSWER_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.MCANSWER_TABLE_PK ON CASUS.MCANSWER
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MCANSWER_TABLE_VA_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.MCANSWER_TABLE_VA_PK ON CASUS.MCANSWER_VA
(PARENT_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MEDIAHEADER_MEDIA_ID_IDX  (Index) 
--
CREATE INDEX CASUS.MEDIAHEADER_MEDIA_ID_IDX ON CASUS.MEDIAHEADER
(MEDIA_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MEDIAHEADER_MIMETYPE_IDX  (Index) 
--
CREATE INDEX CASUS.MEDIAHEADER_MIMETYPE_IDX ON CASUS.MEDIAHEADER
(MIME_TYPE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MEDIA_METADATA_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.MEDIA_METADATA_PK ON CASUS.MEDIA_METADATA
(MEDIAID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MEDICAL_FIELD_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.MEDICAL_FIELD_PK ON CASUS.MEDICAL_FIELD
(NAME)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MEDICAL_SUBFIELD_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.MEDICAL_SUBFIELD_PK ON CASUS.MEDICAL_SUBFIELD
(NAME)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MIME_MESSAGE_MSGID_IDX  (Index) 
--
CREATE INDEX CASUS.MIME_MESSAGE_MSGID_IDX ON CASUS.MAIL_MESSAGE
(M_MESSAGE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MM_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.MM_TABLE_PK ON CASUS.MM_TABLE
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MOOV2_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.MOOV2_TABLE_PK ON CASUS.MOOV2
(ITEM_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MXANSWER_COLS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.MXANSWER_COLS_PK ON CASUS.MATRIX_ANSWER_COLS
(PARENT_ID, ORDER_NR)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- MXANSWER_VALS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.MXANSWER_VALS_PK ON CASUS.MATRIX_ANSWER_VALUES
(PARENT_ID, ORDER_NR)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NAME_IDX  (Index) 
--
CREATE INDEX CASUS.NAME_IDX ON CASUS.DATA_ITEMS
(NAME)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NCANSWER_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.NCANSWER_TABLE_PK ON CASUS.NCANSWER
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NCANSWER_TEXT_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.NCANSWER_TEXT_TABLE_PK ON CASUS.NCANSWER_TEXT
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NETELMS_LIST_PARENTID_IDX  (Index) 
--
CREATE INDEX CASUS.NETELMS_LIST_PARENTID_IDX ON CASUS.NETELMS_LIST
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NETELMS_LIST_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.NETELMS_LIST_PK ON CASUS.NETELMS_LIST
(PARENT_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NETELMS_THPS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.NETELMS_THPS_PK ON CASUS.NETELMS_THPS
(PARENT_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NET_LISTS_LISTS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.NET_LISTS_LISTS_PK ON CASUS.NET_LISTS
(PARENT_ID, ORDER_NR, INDEX_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NET_LISTS_PARENT_IDX  (Index) 
--
CREATE INDEX CASUS.NET_LISTS_PARENT_IDX ON CASUS.NET_LISTS
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- OBJVERS_MAIN_IND  (Index) 
--
CREATE INDEX CASUS.OBJVERS_MAIN_IND ON CASUS.OBJECT_VERSIONS
(OLD_ID, DEPTH)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- OBJVERS_NEWID_IDX  (Index) 
--
CREATE INDEX CASUS.OBJVERS_NEWID_IDX ON CASUS.OBJECT_VERSIONS
(NEW_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- OM_OLD_ID_IDX  (Index) 
--
CREATE INDEX CASUS.OM_OLD_ID_IDX ON CASUS.OBJECT_MAPPING
(OLD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PARENT_IDX  (Index) 
--
CREATE INDEX CASUS.PARENT_IDX ON CASUS.LISTS
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PATIENTS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.PATIENTS_PK ON CASUS.PATIENTS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PEERGROUP_PRECALC_CARDID_IDX  (Index) 
--
CREATE INDEX CASUS.PEERGROUP_PRECALC_CARDID_IDX ON CASUS.PEERGROUP_PRECALC
(CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PEERGROUP_PRECALC_COURSEID_IDX  (Index) 
--
CREATE INDEX CASUS.PEERGROUP_PRECALC_COURSEID_IDX ON CASUS.PEERGROUP_PRECALC
(COURSE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PEERGROUP_PRECALC_DATE_IDX  (Index) 
--
CREATE INDEX CASUS.PEERGROUP_PRECALC_DATE_IDX ON CASUS.PEERGROUP_PRECALC
(ITEM_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PEERGROUP_PRECALC_INDEX_IDX  (Index) 
--
CREATE INDEX CASUS.PEERGROUP_PRECALC_INDEX_IDX ON CASUS.PEERGROUP_PRECALC
(ITEM_INDEX)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PEERGROUP_PRECALC_STATUS_IDX1  (Index) 
--
CREATE INDEX CASUS.PEERGROUP_PRECALC_STATUS_IDX1 ON CASUS.PEERGROUP_PRECALC_STATUS
(CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PEERGROUP_PRECALC_STATUS_IDX2  (Index) 
--
CREATE INDEX CASUS.PEERGROUP_PRECALC_STATUS_IDX2 ON CASUS.PEERGROUP_PRECALC_STATUS
(ITEM_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PEERGRP_CARD_IDX  (Index) 
--
CREATE INDEX CASUS.PEERGRP_CARD_IDX ON CASUS.UA_PEER_GROUP_PEER_HEADER
(CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PEERGRP_DATE_IDX  (Index) 
--
CREATE INDEX CASUS.PEERGRP_DATE_IDX ON CASUS.UA_PEER_GROUP_PEER_HEADER
(PREPROCESS_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PEERGRP_DAT_IDX_IDX  (Index) 
--
CREATE INDEX CASUS.PEERGRP_DAT_IDX_IDX ON CASUS.UA_PEER_GROUP_PREPROCESSED
(PARENT_ID, ITEM_INDEX)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PEERGRP_HD_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.PEERGRP_HD_PK ON CASUS.UA_PEER_GROUP_PEER_HEADER
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- P_ENGINE_IDX  (Index) 
--
CREATE INDEX CASUS.P_ENGINE_IDX ON CASUS.PROPERTIES
(P_ENGINE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- P_FROM_FILE_IDX  (Index) 
--
CREATE INDEX CASUS.P_FROM_FILE_IDX ON CASUS.PROPERTIES
(P_FROM_FILE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PICTUREHLBASE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.PICTUREHLBASE_PK ON CASUS.PICTUREHLBASE
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PINS_PIN_IDX  (Index) 
--
CREATE INDEX CASUS.PINS_PIN_IDX ON CASUS.PINS
(PIN)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_ACCESS_URL  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_ACCESS_URL ON CASUS.ACCESS_URL
(PIN)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_ANNOTATIONS  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_ANNOTATIONS ON CASUS.ANNOTATIONS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_ANNOTATIONS_CASE_REF  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_ANNOTATIONS_CASE_REF ON CASUS.ANNOTATIONS_CASE_REF
(ANNOTATION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_ANS_DETAILS  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_ANS_DETAILS ON CASUS.ANS_DETAILS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_C_COURSE_LASTUPDATE  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_C_COURSE_LASTUPDATE ON CASUS.C_COURSE_LASTUPDATE
(COURSE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_C_GROUP  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_C_GROUP ON CASUS.C_GROUP
(GROUP_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_C_USER_ARCHIVE_HELPER  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_C_USER_ARCHIVE_HELPER ON CASUS.C_USER_ARCHIVE_HELPER
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_C_USER_TEST  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_C_USER_TEST ON CASUS.C_USER_TEST
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_DATA_ITEMS_TEST  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_DATA_ITEMS_TEST ON CASUS.DATA_ITEMS_TEST
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- P_KEY_IDX  (Index) 
--
CREATE INDEX CASUS.P_KEY_IDX ON CASUS.PROPERTIES
(P_KEY)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_IMPPQUESTIONS  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_IMPPQUESTIONS ON CASUS.IMPPQUESTIONS
(QUESTIONNR, GKNR, CHAPTERNR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LANG  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LANG ON CASUS.LANG
(IDENTIFIKATION)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LO_CATALOG  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LO_CATALOG ON CASUS.LO_CATALOG
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LOCATALOGDESCR  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LOCATALOGDESCR ON CASUS.LO_CATALOGDESCR
(CATALOG_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LO_CATALOG_HAMB  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LO_CATALOG_HAMB ON CASUS.LO_CATALOG_HAMB
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LO_CATALOGS  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LO_CATALOGS ON CASUS.LO_CATALOGS
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LO_EVENT  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LO_EVENT ON CASUS.LO_EVENT
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LO_GROUP  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LO_GROUP ON CASUS.LO_GROUP
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LONGMENU_HEADER  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LONGMENU_HEADER ON CASUS.LONGMENU_HEADER
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LO_OBJECTIVE  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LO_OBJECTIVE ON CASUS.LO_OBJECTIVE
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LO_USER  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LO_USER ON CASUS.LO_USER
(LOGIN)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_LO_USER_ROLE  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_LO_USER_ROLE ON CASUS.LO_USER_ROLE
(LOGIN)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_META_INHERIT  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_META_INHERIT ON CASUS.META_INHERIT
(IH_TYPE, IH_TABLE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_META_REF  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_META_REF ON CASUS.META_REF
(REF_TYPE, REF_ORDER)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_MINESWEEPER  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_MINESWEEPER ON CASUS.MINESWEEPER
(USERNAME)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_NET_ELEMS_CNX  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_NET_ELEMS_CNX ON CASUS.NET_ELEMS_CNX
(ELEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_NET_ELEMS2  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_NET_ELEMS2 ON CASUS.NET_ELEMS2
(ELEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_NETS2  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_NETS2 ON CASUS.NETS2
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_QUESTION  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_QUESTION ON CASUS.QUESTION
(GK, NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PK_UID_GROUPS  (Index) 
--
CREATE UNIQUE INDEX CASUS.PK_UID_GROUPS ON CASUS.UID_GROUPS
(PARENT_UID, CHILD_UID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- P_LANG_IDX  (Index) 
--
CREATE INDEX CASUS.P_LANG_IDX ON CASUS.PROPERTIES
(P_LANG)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- P_MACHINE_IDX  (Index) 
--
CREATE INDEX CASUS.P_MACHINE_IDX ON CASUS.PROPERTIES
(P_MACHINE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- RDF_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.RDF_PK ON CASUS.RDF
(RDF_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- REFERENCE_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.REFERENCE_TABLE_PK ON CASUS.REFERENCE_TABLE
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- REPORTS_TMP_CREATION_IDX  (Index) 
--
CREATE INDEX CASUS.REPORTS_TMP_CREATION_IDX ON CASUS.REPORTS_TMP
(CREATION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- REPORTS_TMP_MAIN_IDX  (Index) 
--
CREATE INDEX CASUS.REPORTS_TMP_MAIN_IDX ON CASUS.REPORTS_TMP
(KEY, ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ROI_ANSWER_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.ROI_ANSWER_TABLE_PK ON CASUS.ROI_ANSWER
(ITEM_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ROLEPERM_REF_PERMID_IDX  (Index) 
--
CREATE INDEX CASUS.ROLEPERM_REF_PERMID_IDX ON CASUS.ROLEPERMISSION_REF
(PERMISSION_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ROLEPERM_REF_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.ROLEPERM_REF_PK ON CASUS.ROLEPERMISSION_REF
(RP_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ROLEPERM_REF_ROLEID_IDX  (Index) 
--
CREATE INDEX CASUS.ROLEPERM_REF_ROLEID_IDX ON CASUS.ROLEPERMISSION_REF
(ROLE_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SHIB_ACC_PRF_GRP_ID_IDX  (Index) 
--
CREATE INDEX CASUS.SHIB_ACC_PRF_GRP_ID_IDX ON CASUS.SHIBBOLETH_ACCESS_PROFILE
(GROUP_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SHIBBOLETH_ACCESS_PROFILE_A_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.SHIBBOLETH_ACCESS_PROFILE_A_PK ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC
(ITEM_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SHIBBOLETH_ACCESS_PROFILE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.SHIBBOLETH_ACCESS_PROFILE_PK ON CASUS.SHIBBOLETH_ACCESS_PROFILE
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SHIB_FED_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.SHIB_FED_PK ON CASUS.SHIBBOLETH_FEDERATION
(FEDERATION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SHIB_REF_GRP_REF_IDX  (Index) 
--
CREATE INDEX CASUS.SHIB_REF_GRP_REF_IDX ON CASUS.SHIBBOLETH_FED_GROUP_REF
(GROUP_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SIMPLE_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.SIMPLE_TABLE_PK ON CASUS.SIMPLE_TABLE
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SLIDER_ANSWER_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.SLIDER_ANSWER_TABLE_PK ON CASUS.SLIDER_ANSWER
(ITEM_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SNOKEYIDX  (Index) 
--
CREATE INDEX CASUS.SNOKEYIDX ON CASUS.SNOMED
(ACHSE, KEY)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SNOWORTNRIDX  (Index) 
--
CREATE INDEX CASUS.SNOWORTNRIDX ON CASUS.SNOWORT
(NUMMER)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SNOWORTRELWORTNRIDX  (Index) 
--
CREATE INDEX CASUS.SNOWORTRELWORTNRIDX ON CASUS.SNOWORTREL
(WORTNR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SOCIALNET_CLICKS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.SOCIALNET_CLICKS_PK ON CASUS.SOCIALNET_CLICKS
(ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- STATUS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.STATUS_PK ON CASUS.STATUS
(NR, LANG)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- STUD_MATNR_IDX  (Index) 
--
CREATE INDEX CASUS.STUD_MATNR_IDX ON CASUS.STUD
(MATNR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- STUDY1_I1  (Index) 
--
CREATE INDEX CASUS.STUDY1_I1 ON CASUS.I_INTIME_STUDY1
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- STUDY1_I2  (Index) 
--
CREATE INDEX CASUS.STUDY1_I2 ON CASUS.I_INTIME_STUDY1
(MD5)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- STUDY2_I1  (Index) 
--
CREATE INDEX CASUS.STUDY2_I1 ON CASUS.I_INTIME_STUDY2
(MD5)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SUB_ENDDATE_IDX  (Index) 
--
CREATE INDEX CASUS.SUB_ENDDATE_IDX ON CASUS.SUBSCRIPTION
(ENDDATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SUBFIELD_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.SUBFIELD_PK ON CASUS.SUBFIELD
(NR, FIELD_NR, LANG)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SUB_GROUP_IDX  (Index) 
--
CREATE INDEX CASUS.SUB_GROUP_IDX ON CASUS.SUBSCRIPTION
(GROUPID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SUB_PROJ_IDX  (Index) 
--
CREATE INDEX CASUS.SUB_PROJ_IDX ON CASUS.SUBSCRIPTION
(PROJECTID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SUB_STARTDATE_IDX  (Index) 
--
CREATE INDEX CASUS.SUB_STARTDATE_IDX ON CASUS.SUBSCRIPTION
(STARTDATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SUPPORTREQUEST_ID_IDX  (Index) 
--
CREATE INDEX CASUS.SUPPORTREQUEST_ID_IDX ON CASUS.SUPPORTREQUEST
(INTERNAL_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SUPPORTREQUEST_TS_IDX  (Index) 
--
CREATE INDEX CASUS.SUPPORTREQUEST_TS_IDX ON CASUS.SUPPORTREQUEST
(CREATIONDATE)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SWITCH_NN_MAP_IDX  (Index) 
--
CREATE INDEX CASUS.SWITCH_NN_MAP_IDX ON CASUS.SWITCH_NEWNAMES_MAP
(C_USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SWITCH_OUID_IDX  (Index) 
--
CREATE UNIQUE INDEX CASUS.SWITCH_OUID_IDX ON CASUS.SWITCH_NEWACCOUNTS_MAP
(ORACLE_UID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- TESTITEM_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.TESTITEM_PK ON CASUS.TESTITEM
(NOITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- TEXT_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.TEXT_TABLE_PK ON CASUS.TEXT
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- TXTD_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.TXTD_TABLE_PK ON CASUS.TXTD
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- TYPE_IDX  (Index) 
--
CREATE INDEX CASUS.TYPE_IDX ON CASUS.DATA_ITEMS
(TYPE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UAREL_ANSWER_IDX  (Index) 
--
CREATE INDEX CASUS.UAREL_ANSWER_IDX ON CASUS.USERANSWER_VA_RELATIONAL
(ANSWER)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UASTATS_CARD_ID  (Index) 
--
CREATE INDEX CASUS.UASTATS_CARD_ID ON CASUS.USERANSWER_VA_STAT
(CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UASTATS_CARD_SUB_ID  (Index) 
--
CREATE INDEX CASUS.UASTATS_CARD_SUB_ID ON CASUS.USERANSWER_VA_STAT
(CARD_SUB_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UASTATS_CASE_ID  (Index) 
--
CREATE INDEX CASUS.UASTATS_CASE_ID ON CASUS.USERANSWER_VA_STAT
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UASTATS_SESSION_ID  (Index) 
--
CREATE INDEX CASUS.UASTATS_SESSION_ID ON CASUS.USERANSWER_VA_STAT
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UASTATS_USER_ID  (Index) 
--
CREATE INDEX CASUS.UASTATS_USER_ID ON CASUS.USERANSWER_VA_STAT
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UA_SUMMARY_PK_IDX  (Index) 
--
CREATE INDEX CASUS.UA_SUMMARY_PK_IDX ON CASUS.USERANSWERS_SUMMARY
(SESSION_ID, CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UA_VA_CARDID_IDX  (Index) 
--
CREATE INDEX CASUS.UA_VA_CARDID_IDX ON CASUS.USERANSWER_VA_RELATIONAL
(CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UA_VA_EL_CARDID_IDX_IDX  (Index) 
--
CREATE INDEX CASUS.UA_VA_EL_CARDID_IDX_IDX ON CASUS.USERANSWER_VA_RELATIONAL
(CARD_ID, INDEX_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UA_VA_REL_INDEXNR_IDX  (Index) 
--
CREATE INDEX CASUS.UA_VA_REL_INDEXNR_IDX ON CASUS.USERANSWER_VA_RELATIONAL
(INDEX_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UA_VA_REL_MOD_IDX  (Index) 
--
CREATE INDEX CASUS.UA_VA_REL_MOD_IDX ON CASUS.USERANSWER_VA_RELATIONAL
(MODIFICATION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UA_VA_REL_PARENTID_IDX  (Index) 
--
CREATE INDEX CASUS.UA_VA_REL_PARENTID_IDX ON CASUS.USERANSWER_VA_RELATIONAL
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UAVA_RESET_PARENTID_IDX  (Index) 
--
CREATE INDEX CASUS.UAVA_RESET_PARENTID_IDX ON CASUS.USERANSWER_VA_RESET
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ULANSWER_HLTEXT_TABLE_VA_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.ULANSWER_HLTEXT_TABLE_VA_PK ON CASUS.ULANSWER_TEXT
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ULANSWER_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.ULANSWER_TABLE_PK ON CASUS.ULANSWER
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ULANSWER_VA_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.ULANSWER_VA_PK ON CASUS.ULANSWER_VA
(PARENT_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- URL_TOKEN_INTERNAL_ID_IDX  (Index) 
--
CREATE INDEX CASUS.URL_TOKEN_INTERNAL_ID_IDX ON CASUS.URL_TOKEN_PROPERTIES
(INTERNAL_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- URL_TOKEN_TOKEN_IDX  (Index) 
--
CREATE INDEX CASUS.URL_TOKEN_TOKEN_IDX ON CASUS.URL_TOKEN
(TOKEN)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_EMAILOPT_UID_IDX  (Index) 
--
CREATE INDEX CASUS.USER_EMAILOPT_UID_IDX ON CASUS.USER_EMAILOPT
(USERID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_ID  (Index) 
--
CREATE INDEX CASUS.USER_ID ON CASUS.DATA_ITEMS
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_NET_HYPOS_NAMES_IDX  (Index) 
--
CREATE INDEX CASUS.USER_NET_HYPOS_NAMES_IDX ON CASUS.USER_NET_HYPOS
(NAME)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_NET_HYPOS_PARENT_ID_IDX  (Index) 
--
CREATE INDEX CASUS.USER_NET_HYPOS_PARENT_ID_IDX ON CASUS.USER_NET_HYPOS
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_NET_LINKS_DST_ID_IDX  (Index) 
--
CREATE INDEX CASUS.USER_NET_LINKS_DST_ID_IDX ON CASUS.USER_NET_LINKS
(DST_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_NET_LINKS_HYPO_ID_IDX  (Index) 
--
CREATE INDEX CASUS.USER_NET_LINKS_HYPO_ID_IDX ON CASUS.USER_NET_LINKS
(HYPO_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_NET_LINKS_PARENT_ID_IDX  (Index) 
--
CREATE INDEX CASUS.USER_NET_LINKS_PARENT_ID_IDX ON CASUS.USER_NET_LINKS
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_NET_LISTS_INDEX_NR_IDX  (Index) 
--
CREATE INDEX CASUS.USER_NET_LISTS_INDEX_NR_IDX ON CASUS.USER_NET_LISTS
(INDEX_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_NET_LISTS_ORDER_NR_IDX  (Index) 
--
CREATE INDEX CASUS.USER_NET_LISTS_ORDER_NR_IDX ON CASUS.USER_NET_LISTS
(ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_NET_LISTS_PARENT_ID_IDX  (Index) 
--
CREATE INDEX CASUS.USER_NET_LISTS_PARENT_ID_IDX ON CASUS.USER_NET_LISTS
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_NET_LISTS_PKLIKE_NR_IDX  (Index) 
--
CREATE INDEX CASUS.USER_NET_LISTS_PKLIKE_NR_IDX ON CASUS.USER_NET_LISTS
(PARENT_ID, ORDER_NR, INDEX_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USERPERM_REF_PERMID_IDX  (Index) 
--
CREATE INDEX CASUS.USERPERM_REF_PERMID_IDX ON CASUS.USERPERMISSION_REF
(PERMISSION_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USERPERM_REF_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.USERPERM_REF_PK ON CASUS.USERPERMISSION_REF
(UP_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USERPERM_REF_USERID_IDX  (Index) 
--
CREATE INDEX CASUS.USERPERM_REF_USERID_IDX ON CASUS.USERPERMISSION_REF
(USER_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_SUMM_STMT_CASE_IDX  (Index) 
--
CREATE INDEX CASUS.USER_SUMM_STMT_CASE_IDX ON CASUS.USER_SUMMARY_STATEMENTS
(CASUS_CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_SUMM_STMT_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.USER_SUMM_STMT_PK ON CASUS.USER_SUMMARY_STATEMENTS
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USRANS_CHGLOG_CARDID_IDX  (Index) 
--
CREATE INDEX CASUS.USRANS_CHGLOG_CARDID_IDX ON CASUS.USRANS_CHGLOG
(CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USRANS_CHGLOG_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.USRANS_CHGLOG_PK ON CASUS.USRANS_CHGLOG
(INTERNAL_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USRANS_CHGLOG_SESSID_IDX  (Index) 
--
CREATE INDEX CASUS.USRANS_CHGLOG_SESSID_IDX ON CASUS.USRANS_CHGLOG
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- VARARRAY_TABLE_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.VARARRAY_TABLE_PK ON CASUS.VARARRAY_TABLE
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- VARARRAY_TABLE_VA_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.VARARRAY_TABLE_VA_PK ON CASUS.VARARRAY_TABLE_VA
(PARENT_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ADDCARD_CLINREAS_REAL_ID  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.addcard_clinreas_real_id(in_num NUMBER,in_delay NUMBER) is
myNewid   Number;
myCounter Number;
CURSOR MyCursor(in_cursor_rownum NUMBER) IS
    select distinct ROWID,internal_id
    from casus.ADDCARD_CLINREASON where (internal_id<=0 or internal_id is null) AND ROWNUM <= in_cursor_rownum order by id;
BEGIN
myNewid := 0;
myCounter := 0;
 FOR c1_rec IN MyCursor(in_num) LOOP
   if  c1_rec.internal_id is null or c1_rec.internal_id<=0 then
  SELECT CASUS.CARDADD_ID_SEQ.nextval into myNewid from dual;
  update casus.ADDCARD_CLINREASON set internal_id=myNewid where rowid=c1_rec.ROWID;
  
  if (Remainder(myCounter,in_delay) = 0) then 
  commit;
  dbms_lock.sleep(5);
  end if;
  myCounter := myCounter +1;
  end if;
  
 END LOOP;
END; 
/


--
-- ADDMETA_TRIG  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.addmeta_trig is
myID Number;
CURSOR MyCursor IS
    select ROWID
    from case_metadata_add;
BEGIN

 FOR c1 IN MyCursor LOOP
   SELECT metadata_seq.nextval into myID from dual;
   update case_metadata_add set ID=myID where ROWID=c1.ROWID;
 END LOOP;

END;
/


--
-- CHANGE_CASERESOURCE_ID  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.change_caseresource_id is
myNewid   Number;
CURSOR MyCursor IS
    select distinct ROWID
    from casus.CASE_RESOURCES where id < 0;
BEGIN
myNewid := 0;

 FOR c1_rec IN MyCursor LOOP
  SELECT CASUS.CASE_RESOURCES_SEQ.nextval into myNewid from dual;
  update casus.CASE_RESOURCES set id=myNewid where rowid=c1_rec.ROWID;
 END LOOP;

END;
/


--
-- COU_EXT_COURSE_BOOKINGS  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.cou_ext_course_bookings(in_user_id NUMBER, in_group_id NUMBER, in_ext_course_id VARCHAR) is
BEGIN
insert into casus.course_student_ref (course_id, student_id, group_nr, invited)
select cc.id, in_user_id, in_group_id, 4 from casus.course cc
where cc.external_id = in_ext_course_id and cc.id not in (select csr.course_id from casus.course_student_ref csr where csr.student_id = in_user_id);
END;
/


--
-- CREATE_ROWIDS  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.create_rowids(in_group_id NUMBER) is
tmpRowID NUMBER;
myCount NUMBER;
CURSOR MyCursor() IS
    select rowid from casus.lists;
BEGIN
  myCount := 1;
 FOR c1_rec IN MyCursor(in_group_id) LOOP
  tmpRowID := c1_rec.rowid;
  update casus.lists set intern_id=myCount where rowid=tmpRowID;
  myCount := myCount + 1;
 END LOOP;
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount := 0;
END;
/


--
-- EMAIL_REGISTRATION_PLUGIN  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.email_registration_plugin(in_group_id NUMBER,in_student_id NUMBER, in_test NUMBER) is
myCount2   Number;
myCount3   Number;
BEGIN 
myCount2 := 0;
BEGIN
 SELECT count(*) INTO myCount2
 from casus.course_student_ref where student_id=in_student_id and course_id=2 and group_nr in (120,300); 
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount2 := 0;
END;  

myCount3 := 0;
BEGIN
 SELECT count(*) INTO myCount3
 from casus.course_student_ref where student_id=in_student_id and course_id=2240;
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount3 := 0;
END;  

dbms_output.put('myCount2=');
dbms_output.put_line(myCount2);
dbms_output.put('myCount3=');
dbms_output.put_line(myCount3);

if myCount2>0 and myCount3=0 then
   dbms_output.put_line('insert to 2240...');
   insert into casus.course_student_ref (course_id,student_id,group_nr) values (2240,in_student_id,1);
end if;

END;
/


--
-- EMAIL_REGISTRATION_TEST  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.email_registration_TEST(in_group_id NUMBER) is
tmpCourseID NUMBER;
myCount NUMBER;
CURSOR MyCursor(PARAM1 NUMBER) IS
    select caco.id from casus.course caco
    where caco.GROUP_ID = PARAM1;
BEGIN
 FOR c1_rec IN MyCursor(in_group_id) LOOP
  tmpCourseID := c1_rec.id;
 END LOOP;
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount := 0;
END;
/


--
-- EXPORT_POLL  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.export_poll (in_poll_id NUMBER) is
myQuestID   Number;
myTanBlock  Number;
tmpValue    VARCHAR2(255);
CURSOR tanscursor(in_tanblock NUMBER) IS
       select id, used 
       from FRAGEBOGEN.TRANSACTION 
       where tanblock = in_tanblock order by used;
CURSOR fieldscursor(in_quest NUMBER) IS
       select id, name
       from fragebogen.field
       where questionaire = in_quests order by ids;
BEGIN

select quest into myQuestID from fragebogen.poll where id = in_poll_id;
select id into myTanBlock from fragebogen.tanblock where poll = in_poll_id;
BEGIN
FOR c0_rec IN fieldscursor(myQuestID) LOOP
    dbms_output.put('"'); 
      dbms_output.put(c0_rec.name);
      dbms_output.put('"'); 
       dbms_output.put(','); 
          
END LOOP;
dbms_output.put_line('');

    --FOR c1_rec IN tans_cursor(myTanBlock) LOOP
    --    FOR c2_rec IN fields_cursor(myQuestID) LOOP
    --       
     --     
     --   END LOOP;
    --END LOOP;
END;

END; 
/


--
-- LM_ITEMS_ASSIGN_REAL_ID  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.lm_items_assign_real_id is
myNewid   Number;
myCounter Number;
e_halt_processing EXCEPTION;
CURSOR MyCursor IS
    select distinct ROWID, item_id
    from casus.LONGMENU_ITEMS where item_id<=0 or item_id is null;
BEGIN
myNewid := 0;
myCounter := 0;

 FOR c1_rec IN MyCursor LOOP
  SELECT CASUS.LONGMENU_ITEMS_ID_SEQ.nextval into myNewid from dual;
  update casus.LONGMENU_ITEMS set item_id=myNewid where rowid=c1_rec.ROWID;
  myCounter := myCounter +1;
 END LOOP;
END;
/


--
-- MY_JAVA_SLEEP  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.my_java_sleep (
  p_milli_seconds in number
) as language java name 'java.lang.Thread.sleep(long)'; 
/


--
-- MYPROD  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.myprod is
myID Number;
CURSOR MyCursor IS
    select ROWID
    from casus.lo_obj_catalogentry;
BEGIN

 FOR c1 IN MyCursor LOOP
   SELECT lo_con_seq.nextval into myID from dual;
   update casus.lo_obj_catalogentry set item_ID=myID where ROWID=c1.ROWID;
 END LOOP;

END;
/


--
-- PROCESS_USER_ANSWER_REL_MC  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.process_user_answer_rel_mc (in_parent_id NUMBER,myuseranswer VARCHAR,in_card_id NUMBER, in_type NUMBER, in_date TIMESTAMP,in_debug NUMBER) is
myCount   Number;
tmp VARCHAR(2);
myCountLen   Number;
i   Number;
my_parent_id NUMBER;
myValue VARCHAR(1);
myValueInt NUMBER;
BEGIN
if in_debug = 1 then
    dbms_output.put('process_user_answer_rel_mc (');
    dbms_output.put(in_parent_id);
    dbms_output.put(',');
    dbms_output.put(myuseranswer);
    dbms_output.put(',');
    dbms_output.put(in_card_id);
    dbms_output.put(',');
    dbms_output.put(in_type);
    dbms_output.put(',');
    dbms_output.put(in_debug);
    dbms_output.put_line(')');
end if;

BEGIN
    myCountLen := LENGTH(myuseranswer);    
    FOR i IN 1..myCountLen LOOP
       tmp := SUBSTR(myuseranswer,i,1);
       myValue := '0';
       myValueInt := 0;
       
       if (tmp = 'T' or tmp = 't') then 
        BEGIN
            myValue := '1';
            myValueInt := 1;
        END;
        END IF;
        
        
        BEGIN 
            if in_debug = 1 then
                dbms_output.put('i =');
                dbms_output.put(i);
                dbms_output.put('; tmp =');
                dbms_output.put(tmp);
                dbms_output.put_line(';');   
            end if;
            insert into CASUS.USERANSWER_VA_RELATIONAL (PARENT_ID,CARD_ID,ANSWER, ANSWER_INT,INDEX_NR, MODIFICATION_DATE) values (in_parent_id, in_card_id, null,myValueInt ,i, in_date);          
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
            dbms_output.put_line('error');
            END;
    END LOOP;
EXCEPTION
   WHEN dup_val_on_index THEN
   if in_debug = 1 then
        dbms_output.put_line('error');
   end if;
END;

END; 
/


--
-- VERSIONINGCREATEPATHS  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.VersioningCreatePaths(in_new_id NUMBER, in_recursive NUMBER) is
my_org_new_id Number;
my_loop_id Number;
my_depth Number;
my_count Number;
BEGIN
my_org_new_id := in_new_id;
my_depth := 0;

BEGIN
    select org_data_item into my_loop_id from casus.data_items where item_id = in_new_id;
EXCEPTION
    WHEN NO_DATA_FOUND THEN my_loop_id := -1;
END;
    
WHILE my_loop_id > 0
LOOP
    select count(*) into my_count from object_versions where new_id = my_org_new_id and old_id = my_loop_id;
    if (my_count>0) then
        update object_versions set depth = my_depth, mapping_status = -1, mapping_status_last_check = null where new_id = my_org_new_id and old_id = my_loop_id;
    else
        insert into object_versions (new_id, old_id, depth) values (my_org_new_id,my_loop_id, my_depth);
    end if;
    my_depth := my_depth + 1;
    
    if (in_recursive>0) then
        CASUS.VersioningCreatePaths(my_loop_id,in_recursive);
    end if;
    
    BEGIN
        select org_data_item into my_loop_id from casus.data_items where item_id = my_loop_id;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN my_loop_id := -1;
    END;
    
    
END LOOP;
end;
/


--
-- VERSIONINGDOCLEANWALKUP  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.VersioningDoCleanWalkUp(in_id NUMBER) is
my_count NUMBER;
CURSOR PathUpCursor(in_id NUMBER) IS
    select item_id from casus.data_items where org_data_item = in_id;
BEGIN    
    my_count := 0;
    FOR c1_rec IN PathUpCursor(in_id) LOOP
        my_count := my_count +1;
        casus.VersioningDoCleanWalkUp(c1_rec.item_id);
    END LOOP;
    
    if (my_count = 0) then
        casus.VersioningCreatePaths(in_id,1);
    end if;
end;
/


--
-- VERSIONINGREMOVE  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.VersioningRemove(in_new_id NUMBER, in_old_id NUMBER, in_recursive NUMBER) is
my_loop_id Number;
CURSOR PathUpCursor(in_id NUMBER) IS
    select item_id from casus.data_items where org_data_item = in_id;
BEGIN    
my_loop_id := in_old_id;
WHILE my_loop_id > 0
LOOP
    DELETE FROM object_versions where new_id = in_new_id and old_id = my_loop_id;
    
    if (in_recursive>0) then
        -- steps up
        FOR c1_rec IN PathUpCursor(in_new_id) LOOP
            casus.VersioningRemove(c1_rec.item_id, my_loop_id, in_recursive);
        END LOOP;
        
        -- one step down the row
        BEGIN
            select org_data_item into my_loop_id from casus.data_items where item_id = my_loop_id;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN my_loop_id := -1;
        END;
    else
        my_loop_id := -1;
    end if;
END LOOP;
end;
/


--
-- SPLIT  (Function) 
--
CREATE OR REPLACE FUNCTION CASUS.Split
(
   PC$Chaine IN VARCHAR2,         -- input string
   PN$Pos IN PLS_INTEGER,         -- token number
   PC$Sep IN VARCHAR2 DEFAULT ',' -- separator character
)
RETURN VARCHAR2
IS
  LC$Chaine VARCHAR2(32767) := PC$Sep || PC$Chaine ;
  LI$I      PLS_INTEGER ;
  LI$I2     PLS_INTEGER ;
BEGIN
  LI$I := INSTR( LC$Chaine, PC$Sep, 1, PN$Pos ) ;
  IF LI$I > 0 THEN
    LI$I2 := INSTR( LC$Chaine, PC$Sep, 1, PN$Pos + 1) ;
    IF LI$I2 = 0 THEN LI$I2 := LENGTH( LC$Chaine ) + 1 ; END IF ;
    RETURN( SUBSTR( LC$Chaine, LI$I+1, LI$I2 - LI$I-1 ) ) ;
  ELSE
    RETURN NULL ;
  END IF ;
END; 
/


--
-- ALLORAUSERS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.ALLORAUSERS
(USERNAME, USER_ID, CREATED)
AS 
select "USERNAME","USER_ID","CREATED" from sys.all_users;


--
-- CASE_RESOURCES_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASE_RESOURCES_VIEW
(NR, NAME, ORDER_NR, KEY)
AS 
select CODE_ID ,VALUE,CODE_ID ,NAMED_ID from casus.case_resources;


--
-- CASES_NET_STRUCTURE3  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_NET_STRUCTURE3
(CASE_ID, DU_ID, DU_NAME, FDG_ID, FDG_NAME, 
 DU_IDX_NR, FDG_IDX_NR)
AS 
SELECT
CASES_NET_STRUCTURE_TABLE.CASE_ID,
CASES_NET_STRUCTURE_TABLE.DU_ID,
di1.name,
CASES_NET_STRUCTURE_TABLE.FDG_ID,
di2.name,
CASES_NET_STRUCTURE_TABLE.DU_IDX_NR,
CASES_NET_STRUCTURE_TABLE.FDG_IDX_NR
FROM CASES_NET_STRUCTURE_TABLE, data_items di1, data_items di2
WHERE CASES_NET_STRUCTURE_TABLE.DU_ID = di1.item_id
AND CASES_NET_STRUCTURE_TABLE.FDG_ID = di2.item_id;


--
-- COURSE_GROUP_NAME_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_GROUP_NAME_VIEW
(COURSE_ID, GROUP_NR, NAME, DESCRIPTION, PRINT_MATRIX, 
 ENABLED, ID)
AS 
SELECT cg.course_id,
          cg.group_nr,
          g.name,
          g.description,
          cg.print_matrix,
          cg.enabled,
          cg.id
   FROM casus.course_groups cg, casus.c_group g
   WHERE cg.group_nr = g.GROUP_ID(+);


--
-- COURSENAME_CASE_USER_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSENAME_CASE_USER_VIEW
(COURSE_ID, NAME, CASE_ID, STUDENT_ID)
AS 
Select casus.course_case_ref.course_id,casus.course.name, casus.course_case_ref.case_id,casus.course_student_ref.student_id
FROM casus.course_student_ref, casus.course, casus.course_case_ref
WHERE casus.course_case_ref.course_id=casus.course_student_ref.course_id AND casus.course_case_ref.course_id=casus.course.id;


--
-- COURSE_SHIBBOLETH_ACC_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_SHIBBOLETH_ACC_VIEW
(COURSE_ID, GROUP_ID, ORDER_NR, EXPRGROUP_NR, EXPR_TYPE, 
 KEY_NAME, KEY_VALUE, CONTROL)
AS 
SELECT cc.id,
          sf.GROUP_ID,
          sap.order_nr,
          sap.exprgroup_nr,
          sap.expr_type,
          sap.key_name,
          sap.key_value,
          sap.control
     FROM casus.COURSE_SHIBBOLETH_PROFILE_REF cspr,
          casus.course cc,
          CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC sap,
          CASUS.SHIBBOLETH_FEDERATION sf,
          casus.SHIBBOLETH_FED_GROUP_REF sfgr
    WHERE     cspr.course_id = cc.id
          AND cspr.profile_id = sap.item_id
          AND cc.GROUP_ID = SFGR.GROUP_ID
          AND sfgr.federation_id = sf.federation_id
   UNION
   SELECT cc.id,
          cc.GROUP_ID,
          sap.order_nr,
          sap.exprgroup_nr,
          sap.expr_type,
          sap.key_name,
          sap.key_value,
          sap.control
     FROM casus.COURSE_SHIBBOLETH_PROFILE_REF cspr,
          casus.course cc,
          CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC sap
    WHERE cspr.course_id = cc.id AND cspr.profile_id = sap.item_id
   UNION
   SELECT csa.course_id,
          cc.GROUP_ID,
          csa.order_nr,
          csa.exprgroup_nr,
          csa.expr_type,
          csa.key_name,
          csa.key_value,
          csa.control
     FROM casus.course_shibboleth_acc csa, casus.course cc
    WHERE     csa.course_id = cc.id
          AND csa.course_id NOT IN (SELECT DISTINCT course_id
                                      FROM casus.COURSE_SHIBBOLETH_PROFILE_REF);


--
-- COURSE_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_VIEW
(ID, TUTOR, NAME, COURSECOMMENT, START_DATE, 
 END_DATE)
AS 
SELECT id,
          tutor,
          name,
          coursecomment,
          start_date,
          end_date
     FROM course;


--
-- C_SESSION_ACTION_FAV_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.C_SESSION_ACTION_FAV_VIEW
(USER_ID, ACTION, ACTION_MODIFIER, TARGET_ID, TIMESTAMP, 
 MY_ROWID, MY_RANK)
AS 
SELECT user_id "user_id",
          action "action",
          action_modifier "action_modifier",
          target_id "target_id",
          timestamp "timestamp",
          ROWID,
          RANK ()
             OVER (PARTITION BY user_id,
                                action,
                                action_modifier,
                                target_id
                   ORDER BY timestamp DESC)
             "my_rank"
     FROM c_session_action_favourites csa
    WHERE     action IN (2,
                         30,
                         40,
                         50)
          AND target_id > 0;


--
-- C_SESSION_ACTION_FAV_VIEW2  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.C_SESSION_ACTION_FAV_VIEW2
(USER_ID, ACTION, ACTION_MODIFIER, TARGET_ID, MY_ROWID, 
 MY_RANK)
AS 
SELECT user_id "user_id",
          action "action",
          action_modifier "action_modifier",
          target_id "target_id",
          ROWID,
          RANK ()
          OVER (PARTITION BY user_id, action, action_modifier
                ORDER BY timestamp DESC)
             "my_rank"
     FROM c_session_action_fav_view csa;


--
-- C_SESSION_ACTION_RANK_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.C_SESSION_ACTION_RANK_VIEW
(USER_ID, ACTION, ACTION_MODIFIER, TARGET_ID, TIMESTAMP, 
 MY_ROWID, MY_RANK)
AS 
SELECT user_id "user_id",
          action "action",
          action_modifier "action_modifier",
          case_id "case_id",
          timestamp "timestamp",
          ROWID,
          RANK ()
             OVER (PARTITION BY user_id,
                                action,
                                action_modifier,
                                case_id
                   ORDER BY timestamp DESC)
             "my_rank"
     FROM c_session_action csa
    WHERE action IN (30, 40) AND timestamp > SYSDATE - 365;


--
-- C_SESSION_ACTION_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.C_SESSION_ACTION_VIEW
(ACTION_DESC, ACTION_MODIFIER, SESSION_ID, TIMESTAMP, COURSE_ID, 
 AGENT)
AS 
select t2.ACTION_DESC, t1.ACTION_MODIFIER, t1.SESSION_ID,t1.TIMESTAMP,t1.COURSE_ID,AGENT from C_SESSION_ACTION t1, C_SESSION_ACTION_DESC t2 where
(t1.ACTION=3 and (t1.ACTION=t2.ACTION AND t1.ACTION_MODIFIER=t2.ACTION_MODIFIER)) or (t1.ACTION<>3 and (t1.ACTION=t2.ACTION));


--
-- C_SESSION_TIMES_TEST  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.C_SESSION_TIMES_TEST
(SESSION_ID, START_DATE, D_YEAR, D_WEEK, D_MONTH, 
 D_DAY, D_DAYOFMONTH, D_DAYOFWEEK, D_HOUR)
AS 
SELECT		session_id,start_date, cast (to_char (start_date, 'yyyy') AS NUMBER ), cast (to_char (start_date, 'WW') AS NUMBER ), cast (to_char (start_date, 'mm') AS NUMBER )
 ,cast (to_char (start_date, 'DDD') AS NUMBER ),cast (to_char (start_date, 'DD') AS NUMBER ), cast (to_char (start_date, 'D') AS NUMBER ), cast (to_char (start_date, 'HH24') AS NUMBER )
 	FROM 		casus.c_session_avg_success_test;


--
-- DATA_ITEMS_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.DATA_ITEMS_VIEW
(ITEM_ID, TYPE, NAME, VERSION, DELETE_FLAG, 
 USER_ID, INDEXED, GROUP_ID, CREATED, MODIFIED, 
 BACKUPED, STREAMED, DBID, DBUID, SYNCHRONIZED)
AS 
select   di.ITEM_ID, di.TYPE, di.NAME, di.VERSION, di.DELETE_FLAG , di.USER_ID, di.INDEXED, di.GROUP_ID, dic.CREATED, dic.MODIFIED, dic.BACKUPED, dic.STREAMED, dic.DBID, dic.DBUID , dic.SYNCHRONIZED from casus.data_items di, casus.data_items_chg dic where di.item_id = dic.item_id;


--
-- FTANSWER_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.FTANSWER_VIEW
(ANSWER_ID, ID, TEXT, CODE_ID, CODE, 
 SYN_ID, SYN)
AS 
SELECT ft.item_id, ft1.item_id, ft1.item, l2.item_id, ft2.item, l3.item_id,
          ft3.item
     FROM casus.ftanswer ft,
          casus.lists l1,
          casus.ftanswer_item ft1,
          casus.lists l2,
          casus.ftanswer_item ft2,
          casus.lists l3,
          casus.ftanswer_item ft3
    WHERE ft.item_id = l1.parent_id
      AND ft1.item_id = l1.item_id
      AND ft1.item_id = l2.parent_id
      AND ft2.item_id = l2.item_id
      AND ft2.item_id = l3.parent_id
      AND ft3.item_id = l3.item_id
   UNION
   SELECT ft.item_id, ft1.item_id, ft1.item, l2.item_id, ft2.item, 0, '-'
     FROM casus.ftanswer ft,
          casus.lists l1,
          casus.ftanswer_item ft1,
          casus.lists l2,
          casus.ftanswer_item ft2
    WHERE ft.item_id = l1.parent_id
      AND ft1.item_id = l1.item_id
      AND ft1.item_id = l2.parent_id
      AND ft2.item_id = l2.item_id
   UNION
   SELECT ft.item_id, ft1.item_id, ft1.item, 0, '-', 0, '-'
     FROM casus.ftanswer ft, casus.lists l1, casus.ftanswer_item ft1
    WHERE ft.item_id = l1.parent_id AND ft1.item_id = l1.item_id;


--
-- HTMD_LAST_CHG_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.HTMD_LAST_CHG_VIEW
(ITEM_ID, LAST_CHG)
AS 
select hvs.item_id ,max(version_date) from  Htmd_vs hvs group by hvs.item_id;


--
-- MCANSWER_NUM_ITMS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.MCANSWER_NUM_ITMS
(ITEM_ID, NUM_OF_ITEMS)
AS 
SELECT mc.item_id, (select count(*) from casus.mcanswer_va mci where mci.parent_id = mc.item_id)
   FROM casus.mcanswer mc
   GROUP BY mc.item_id;


--
-- MEDIA_MANAGER_ITEM  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.MEDIA_MANAGER_ITEM
(ITEM_ID, ORG_ITEM_ID, MEDIA_ID, NAME, USER_ID, 
 GROUP_ID, DELETE_FLAG, COMMENT1, COMMENT2, COMMENT3, 
 TYPE, MIME_TYPE, MEDIA_SIZE, WIDTH, HEIGHT, 
 CREATED, KEYWORDS, LICENCE_ID)
AS 
SELECT mh.item_id,
           di.org_data_item,
           mh.media_id,
           di.name,
           di.user_id,
           di.GROUP_ID,
           di.DELETE_FLAG,
           mh.comment1,
           mh.comment2,
           mh.comment3,
           di.TYPE,
           mh.mime_type,
           mh.media_size,
           mh.width,
           mh.height,
           dic.created,
           mhm.nonrelational_keywords,
           mhm.licence
      FROM casus.mediaheader     mh,
      	   casus.media_metadata mhm,
           casus.data_items      di,
           casus.data_items_chg  dic
     WHERE mh.item_id = di.item_id AND di.item_id = dic.item_id and mh.item_id = mhm.mediaid;


--
-- MEDU_SEQ_AND_SITE  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.MEDU_SEQ_AND_SITE
(SITE_ID, MIN_VERSION_OF_CLIENT, SUPPORT_EMAIL, DOWNLOAD_FTP, TS, 
 REP_DATE)
AS 
SELECT site_id,
          min_version_of_client,
          support_email,
          download_ftp,
          ts,
          rep_date
     FROM casus.seq_and_site;


--
-- PEERGROUP_VIEW2B  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.PEERGROUP_VIEW2B
(PARENT_ID, CARD_ID, ITEM_DATE, ITEM_INDEX, ANSWER_COUNT)
AS 
SELECT uar.parent_id, uar.card_id, uar.modification_date, 0, 1
   FROM casus.useranswer_va_relational uar
   UNION
   SELECT uar.parent_id,
          uar.card_id,
          uar.modification_date,
          uar.index_nr,
          uar.answer_int
   FROM casus.useranswer_va_relational uar
   WHERE answer IS NULL;


--
-- PEERGROUP_VIEW4  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.PEERGROUP_VIEW4
(PARENT_ID, CARD_ID, ITEM_DATE, ITEM_INDEX, ITEM_NAME, 
 ANSWER_COUNT)
AS 
SELECT uar.parent_id, uar.card_id, uar.modification_date, 0, NULL, 1
   FROM casus.useranswer_va_relational uar
   UNION
   SELECT uar.parent_id,
          uar.card_id,
          uar.modification_date,
          uar.index_nr,
          answer,
          1
   FROM casus.useranswer_va_relational uar
   WHERE answer IS NOT NULL;


--
-- V_DATA_ITEMS_DATA_CHG  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.V_DATA_ITEMS_DATA_CHG
(ITEM_ID, TYPE, NAME, VERSION, DELETE_FLAG, 
 USER_ID, INDEXED, GROUP_ID, CREATED, MODIFIED, 
 BACKUPED, STREAMED, DBID, DBUID, SYNCHRONIZED)
AS 
select   di.ITEM_ID,TYPE,NAME,VERSION,DELETE_FLAG,USER_ID,INDEXED,GROUP_ID,CREATED,MODIFIED,BACKUPED,STREAMED,DBID,DBUID,SYNCHRONIZED 
 from casus.data_items di, casus.data_items_chg dic where di.item_id = dic.item_id;


--
-- V_LIST_DATA_ITEMS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.V_LIST_DATA_ITEMS
(ORDER_NR, INDEX_NR, "p_ITEM_ID", "p_TYPE", "p_NAME", 
 "p_VERSION", "p_LETE_FLAG", "p_USER_ID", "p_GROUP_ID", ITEM_ID, 
 TYPE, NAME, VERSION, DELETE_FLAG, USER_ID, 
 GROUP_ID)
AS 
select li.ORDER_NR, li.INDEX_NR,
    di1.ITEM_ID "p_ITEM_ID", di1.TYPE "p_TYPE", di1.NAME "p_NAME", di1.VERSION "p_VERSION", di1.DELETE_FLAG "p_LETE_FLAG", di1.USER_ID "p_USER_ID", di1.GROUP_ID "p_GROUP_ID",
    di2.ITEM_ID, di2.TYPE, di2.NAME, di2.VERSION, di2.DELETE_FLAG, di2.USER_ID, di2.GROUP_ID
    from casus.data_items di1, casus.lists li, casus.data_items di2 
    where di1.item_id = li.parent_id and li.item_id = di2.item_id;


--
-- ADDCARD_CLR_MOD_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.ADDCARD_CLR_MOD_TRIGGER
BEFORE UPDATE
OF   TYPE,NAME,CARD_ID,CASE_ID,SESSION_ID,ID,SUBTYPE,DELETE_FLAG,STATUS,STATUS1,DELETE_CARD,USER_ID,ORDER_NR
ON CASUS.ADDCARD_CLINREASON 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
:NEW.MODIFICATION_DATE := SYSDATE;
END;
/


--
-- ANNO_NULLUSER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.ANNO_NULLUSER BEFORE INSERT
ON CASUS.ANNOTATIONS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
   IF (:NEW.to_user_id is null) THEN
        :NEW.to_user_id :=-1;
   END IF;
END;
/


--
-- "BIN$s/0WyMWf2QfgQKjABwA6pA==$0"  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS."BIN$s/0WyMWf2QfgQKjABwA6pA==$0" AFTER UPDATE OF data ON "CASUS"."JPEG" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id=:old.item_id;
END;
/


--
-- "BIN$s/0WyMWy2QfgQKjABwA6pA==$0"  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS."BIN$s/0WyMWy2QfgQKjABwA6pA==$0" AFTER UPDATE OF data ON "CASUS"."PICT" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id=:old.item_id;
END;
/


--
-- CG_NAMEDLIST_DEL_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.CG_NAMEDLIST_DEL_TRIGGER
BEFORE DELETE
ON CASUS.CG_TUTORS_NAMED_LISTS REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
/******************************************************************************

******************************************************************************/
BEGIN
 delete from CASUS.CG_TUTORS_MY_STUDENTS where parent_id = :old.internal_id;
END CG_NAMEDLIST_DEL_TRIGGER;
/


--
-- CGT_INSERT  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.CGT_INSERT
BEFORE INSERT
ON CASUS.COURSE_GROUP_TUTORS REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpID NUMBER;
tmpGROUPNR NUMBER;
tmpORDERNR NUMBER;
BEGIN 
   IF (:new.COURSEGROUPID = 0) THEN
         select ID INTO tmpID from casus.COURSE_GROUPS where COURSE_ID=:new.COURSE_ID and GROUP_NR=:new.GROUP_NR;
      :new.COURSEGROUPID := tmpID;
   ELSE
       select COURSE_ID, GROUP_NR INTO tmpID, tmpGROUPNR from casus.COURSE_GROUPS where ID=:new.COURSEGROUPID;
      :new.COURSE_ID := tmpID;
      :new.GROUP_NR  := tmpGROUPNR;
   END IF;
   EXCEPTION
   WHEN NO_DATA_FOUND THEN tmpID := -1;
END;
/


--
-- CHOICE_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.CHOICE_CHG
BEFORE UPDATE
OF CHOICE
ON CASUS.MCANSWER_VA
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
/******************************************************************************

******************************************************************************/
BEGIN
  :new.choice_new := :new.choice - 1;
END CHOICE_CHG;
/


--
-- CHOICE_CHG2  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.CHOICE_CHG2
BEFORE UPDATE
ON CASUS.MCANSWER_VA 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
/******************************************************************************

******************************************************************************/
BEGIN
   if (:old.ANSWER_TEXT <> :new.ANSWER_TEXT or :old.CORRECT <> :new.CORRECT or :old.order_nr <> :new.order_nr  or :old.choice <> :new.choice  or :old.choice_new <> :new.choice_new  or :old.poison <> :new.poison  or :old.blocks <> :new.blocks) then
   insert into mcanswer_va_chg ( PARENT_ID,ORDER_NR, ANSWER_TEXT,CORRECT,CHOICE,CHOICE_NEW,POISON,BLOCKS, action ) values ( :old.PARENT_ID, :old.ORDER_NR, :old.ANSWER_TEXT, :old.CORRECT, :old.CHOICE, :old.CHOICE_NEW, :old.POISON, :old.BLOCKS, 2);
    end if;
END CHOICE_CHG2;
/


--
-- CHOICE_DEL  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.CHOICE_DEL
BEFORE DELETE
ON CASUS.MCANSWER_VA REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
/******************************************************************************

******************************************************************************/
BEGIN
 insert into mcanswer_va_chg ( PARENT_ID,ORDER_NR, ANSWER_TEXT,CORRECT,CHOICE,CHOICE_NEW,POISON,BLOCKS , action) values ( :old.PARENT_ID, :old.ORDER_NR, :old.ANSWER_TEXT, :old.CORRECT, :old.CHOICE, :old.CHOICE_NEW, :old.POISON, :old.BLOCKS, -1);
END CHOICE_DEL;
/


--
-- CHOICE_INS  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.CHOICE_INS
BEFORE INSERT
ON CASUS.MCANSWER_VA
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
/******************************************************************************

******************************************************************************/
BEGIN
 if :new.choice_new = -1 then
  :new.choice_new := :new.choice-1;
 end if;
END CHOICE_INS;
/


--
-- COURSE_CHG1  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.COURSE_CHG1 BEFORE UPDATE ON CASUS.COURSE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN update casus.course_chg set modified=SYSDATE where item_id=:old.id; END;
/


--
-- COURSE_UPDATE_IDS  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.COURSE_UPDATE_IDS
BEFORE UPDATE
ON CASUS.COURSE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DISABLE
DECLARE
tmpCount NUMBER;
tmpID NUMBER;
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        29.09.2003             1. Created this trigger.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:
      Sysdate:         29.09.2003
      Date and Time:   29.09.2003, 11:15:53, and 29.09.2003 11:15:53
      Username:         (set in TOAD Options, Proc Templates)
      Table Name:       (set in the "New PL/SQL Object" dialog)
      Trigger Options:  (set in the "New PL/SQL Object" dialog)
******************************************************************************/
BEGIN
	tmpID :=  :NEW.TUTOR;
   select count(C_USER_ID )  INTO tmpCount from CASUS.SWITCH_NEWACCOUNTS_MAP where ORACLE_UID=tmpID;
   IF tmpCount>0 THEN
   	  select C_USER_ID INTO tmpCount from CASUS.SWITCH_NEWACCOUNTS_MAP where ORACLE_UID=tmpID;
	 :NEW.TUTOR := tmpCount;
   END IF;

   select count(C_GROUP_ID )  INTO tmpCount from CASUS.SWITCH_NEWACCOUNTS_MAP where ORACLE_UID=tmpID;
   IF tmpCount>0 THEN
   	  select C_GROUP_ID INTO tmpCount from CASUS.SWITCH_NEWACCOUNTS_MAP where ORACLE_UID=tmpID;
	 :NEW.GROUP_ID := tmpCount;
   END IF;

END ;
/


--
-- C_SESSION_ACTIVE_INSERT  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.C_SESSION_ACTIVE_INSERT
AFTER INSERT
ON CASUS.C_SESSION_ACTION 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
   if (:new.action = 2) then
    insert into casus.c_session_active( SESSION_ID,TIMESTAMP,COURSE_ID,INTERNAL_ID,HTTPSESSION,USER_ID,CASE_ID, GROUP_ID, SHOWME ,PORTAL_ID) values (:new.SESSION_ID,:new.TIMESTAMP,:new.COURSE_ID,:new.INTERNAL_ID,:new.HTTPSESSION,:new.USER_ID,:new.CASE_ID, :new.GROUP_ID, :new.SHOWME ,:new.PORTAL_ID);
   else if  (:new.action = 3) then  
    delete from  casus.c_session_active where session_id = :new.session_id;
   else if  (:new.action = 4) then  
    delete from  casus.c_session_active where HTTPSESSION = :new.HTTPSESSION;
    end if; 
  end if;
   end if;
END ;
/


--
-- DELETE_CASE  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.DELETE_CASE BEFORE UPDATE ON "CASUS"."DATA_ITEMS" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
if :old.type = 'CASE' and :old.delete_flag = 1 then
delete from casus.course_case_ref where case_id=:old.item_id;
delete from casus.case_review_ref where case_id=:old.item_id;
end if;
END;
/


--
-- DELETE_CG_TUTMYSTUD_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.DELETE_CG_TUTMYSTUD_CHG
BEFORE DELETE
ON CASUS.CG_TUTORS_MY_STUDENTS 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
INSERT INTO casus.CG_TUTORS_MY_STUDENTS_chg (INTERNAL_ID, TUTOR_ID, COURSE_ID, COURSE_GROUP_ID, USER_ID, CREATION_DATE, MODIFICATION_DATE, action) VALUES (:old.INTERNAL_ID, :old.TUTOR_ID,:old.COURSE_ID, :old.COURSE_GROUP_ID,:old.USER_ID, :old.CREATION_DATE, sysdate, -1);
END;
/


--
-- DELETE_COURSE_CASE_REF_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.DELETE_COURSE_CASE_REF_CHG BEFORE DELETE ON "CASUS"."COURSE_CASE_REF" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN    INSERT INTO casus.COURSE_CASE_REF_chg (course_id, case_id, deleted) VALUES (:old.course_id, :old.case_id, 1); END;
/


--
-- DELETE_COURSE_CHGLOG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.DELETE_COURSE_CHGLOG BEFORE DELETE ON "CASUS"."COURSE" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN    INSERT INTO casus.COURSE_CHGLOG (course_id, action, name, extern_comment,intern_comment) VALUES (:old.id, 'DEL', :old.name, :old.coursecomment, :old.comment_external); END;
/


--
-- DELETE_COURSE_STUDENT_REF_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.DELETE_COURSE_STUDENT_REF_CHG BEFORE DELETE ON "CASUS"."COURSE_STUDENT_REF" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN    INSERT INTO casus.COURSE_STUDENT_REF_chg (course_id, student_id, deleted) VALUES (:old.course_id, :old.student_id, 1); END;
/


--
-- DELETE_C_SESSION_LOG_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.DELETE_C_SESSION_LOG_CHG BEFORE DELETE ON "CASUS"."C_SESSION_LOG" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
insert into casus.C_SESSION_LOG_CHG (chg_type,SESSION_ID,TS,SUCCESS,STATUS,EXT_STATUS,EXT_RESULT) values 
  (-1,:old.SESSION_ID,:old.TS,:old.SUCCESS,:old.STATUS,:old.EXT_STATUS,:old.EXT_RESULT);
END;
/


--
-- DELETE_DATA_ITEMS_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.DELETE_DATA_ITEMS_CHG BEFORE DELETE ON "CASUS"."DATA_ITEMS" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
DISABLE
BEGIN
  DELETE FROM data_items_chg WHERE item_id=:old.item_id;
END;
/


--
-- DELETE_LISTS  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.DELETE_LISTS BEFORE DELETE ON "CASUS"."LISTS" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
INSERT INTO casus.LISTS_chg (ITEM_ID, PARENT_ID, ORDER_NR, INDEX_NR, CHG_TYPE) VALUES (:old.ITEM_ID, :old.PARENT_ID, :old.ORDER_NR, :old.INDEX_NR, 'DEL');
END;
/


--
-- DI_UPDATE_IDS  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.DI_UPDATE_IDS
BEFORE UPDATE
ON CASUS.DATA_ITEMS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DISABLE
DECLARE
tmpCount NUMBER;
tmpID NUMBER;
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        29.09.2003             1. Created this trigger.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:
      Sysdate:         29.09.2003
      Date and Time:   29.09.2003, 11:15:53, and 29.09.2003 11:15:53
      Username:         (set in TOAD Options, Proc Templates)
      Table Name:       (set in the "New PL/SQL Object" dialog)
      Trigger Options:  (set in the "New PL/SQL Object" dialog)
******************************************************************************/
BEGIN
	tmpID :=  :NEW.USER_ID;
   select count(C_USER_ID )  INTO tmpCount from CASUS.SWITCH_NEWACCOUNTS_MAP where ORACLE_UID=tmpID;
   IF tmpCount>0 THEN
   	  select C_USER_ID INTO tmpCount from CASUS.SWITCH_NEWACCOUNTS_MAP where ORACLE_UID=tmpID;
	 :NEW.USER_ID := tmpCount;
   END IF;

   select count(C_GROUP_ID )  INTO tmpCount from CASUS.SWITCH_NEWACCOUNTS_MAP where ORACLE_UID=tmpID;
   IF tmpCount>0 THEN
   	  select C_GROUP_ID INTO tmpCount from CASUS.SWITCH_NEWACCOUNTS_MAP where ORACLE_UID=tmpID;
	 :NEW.GROUP_ID := tmpCount;
   END IF;

END ;
/


--
-- EXTSESSION_UPDATE_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.EXTSESSION_UPDATE_TRIGGER
BEFORE UPDATE
OF USER_ROLES
  ,TOOL_VERSION
  ,PROTOCOL
  ,BACKLINK_ID
  ,BACKLINK_URL
  ,PROT_MESSAGE_TYPE
  ,PROT_VERSION
  ,COURSEID
  ,CASEID
  ,INITOK
  ,GRADETRANSFER
  ,GRADEDATE
  ,GRADE
  ,ERRMSG
  ,OPENCOUNT
ON CASUS.EXT_SESSION
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  :new.modification_date := SYSDATE;
END;
/


--
-- EXTTOOL_UPDATE_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.EXTTOOL_UPDATE_TRIGGER

BEFORE UPDATE

OF TOOL_ID

  ,NAME

  ,DESCR

  ,ENCODING

  ,ALWAYSINITSESSION

  ,SYSTEM

  ,DEACTIVATED

  ,VERSION

  ,EXT_ACCESS

  ,LOGIN_PREFIX

  ,GROUP_ID

  ,ADMINEMAIL

  ,REPORTTODATE

ON CASUS.EXT_TOOL

REFERENCING NEW AS NEW OLD AS OLD

FOR EACH ROW
BEGIN

  :new.modification_date := SYSDATE;

END;
/


--
-- INSERT_CG_TUTMYSTUD_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT_CG_TUTMYSTUD_CHG BEFORE INSERT ON "CASUS"."CG_TUTORS_MY_STUDENTS" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
INSERT INTO casus.CG_TUTORS_MY_STUDENTS_chg (INTERNAL_ID, TUTOR_ID, COURSE_ID, COURSE_GROUP_ID, USER_ID, CREATION_DATE, MODIFICATION_DATE, action) VALUES (:new.INTERNAL_ID, :new.TUTOR_ID,:new.COURSE_ID, :new.COURSE_GROUP_ID,:new.USER_ID, :new.CREATION_DATE, :new.MODIFICATION_DATE, 1);
END;
/


--
-- INSERT_COURSE_CASE_REF_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT_COURSE_CASE_REF_CHG BEFORE INSERT ON "CASUS"."COURSE_CASE_REF" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN    INSERT INTO casus.COURSE_CASE_REF_chg (course_id, case_id) VALUES (:new.course_id, :new.case_id); END;
/


--
-- INSERT_COURSE_CHGLOG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT_COURSE_CHGLOG AFTER INSERT ON "CASUS"."COURSE" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN    INSERT INTO casus.COURSE_CHGLOG (course_id, action) VALUES (:new.id, 'INS'); END;
/


--
-- INSERT_COURSE_STUDENT_REF_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT_COURSE_STUDENT_REF_CHG BEFORE INSERT ON "CASUS"."COURSE_STUDENT_REF" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN    INSERT INTO casus.COURSE_STUDENT_REF_chg (course_id, student_id) VALUES (:new.course_id, :new.student_id); END;
/


--
-- INSERT_CSA  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT_CSA
AFTER INSERT
ON CASUS.C_SESSION_ACTION 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
targetId   Number;
mycount   Number;

BEGIN
delete from casus.c_session_action_favourites where action = :new.action and timestamp < sysdate-365;
if (:new.ACTION = 30 or :new.ACTION = 40) then   

    delete from c_session_action_favourites where rowid in (
        select my_rowid from c_session_action_fav_view2 where my_rank > 50 and action = :new.ACTION and user_id=:new.user_id);
    

    if (:new.ACTION = 30) then   
        targetId := :new.COURSE_ID;
    else if (:new.ACTION = 40) then   
        targetId := :new.CASE_ID;
    end if;
    end if;
    
    if (targetId > 0) then
        select count(*) into mycount from casus.c_session_action_favourites where action = :new.ACTION and TARGET_ID = targetId and user_id = :new.USER_ID;
        if (mycount > 0) then
            delete from casus.c_session_action_favourites where action = :new.ACTION and TARGET_ID = targetId and user_id = :new.USER_ID;
        end if;
    
        insert into casus.c_session_action_favourites (ACTION,ACTION_MODIFIER,TIMESTAMP,TARGET_ID,USER_ID) values 
        (:new.ACTION,:new.ACTION_MODIFIER,:new.TIMESTAMP,targetId,:new.USER_ID);
    end if;
  end if;
END;
/


--
-- INSERT_C_SESSION_LOG_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT_C_SESSION_LOG_CHG AFTER INSERT ON "CASUS"."C_SESSION_LOG" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
insert into casus.C_SESSION_LOG_CHG (chg_type,SESSION_ID,TS,SUCCESS,STATUS,EXT_STATUS,EXT_RESULT) values 
  (1,:new.SESSION_ID,:new.TS,:new.SUCCESS,:new.STATUS,:new.EXT_STATUS,:new.EXT_RESULT);
END;
/


--
-- INSERT_DATA_ITEMS_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT_DATA_ITEMS_CHG BEFORE INSERT ON "CASUS"."DATA_ITEMS" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN    INSERT INTO casus.data_items_chg (item_id, created,modified,dbid) VALUES (:new.item_id, SYSDATE, SYSDATE,:new.item_id); END;
/


--
-- INSERT_LISTS  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT_LISTS BEFORE INSERT ON "CASUS"."LISTS" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
INSERT INTO casus.LISTS_chg (ITEM_ID, PARENT_ID, ORDER_NR, INDEX_NR, CHG_TYPE) VALUES (:new.ITEM_ID, :new.PARENT_ID, :new.ORDER_NR, :new.INDEX_NR, 'INS');
END;
/


--
-- INSERT_ROLES_TRIGGER2  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT_ROLES_TRIGGER2
BEFORE UPDATE
ON CASUS.SWITCH_NEWACCOUNTS_MAP REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DISABLE
DECLARE
tmpID NUMBER;
tmpROLES_STR CHAR(50);
BEGIN
	 tmpROLES_STR :=  :NEW.ROLES_STR;
	 insert into casus.SWITCH_TEST (USER_ID,USER_STR ) VALUES (:NEW.C_USER_ID,:NEW.ROLES_STR);

	 IF tmpROLES_STR='2' THEN
	 insert into casus.C_USER_ROLES (USER_ID,USER_ROLE ) VALUES (:NEW.C_USER_ID,2);
	 END IF;

	 IF tmpROLES_STR='2,3' THEN
	 insert into casus.C_USER_ROLES (USER_ID,USER_ROLE ) VALUES (:NEW.C_USER_ID,2);
	 insert into casus.C_USER_ROLES (USER_ID,USER_ROLE ) VALUES (:NEW.C_USER_ID,3);
	 END IF;

	 IF tmpROLES_STR='2,3,4' THEN
	 insert into casus.C_USER_ROLES (USER_ID,USER_ROLE ) VALUES (:NEW.C_USER_ID,2);
	 insert into casus.C_USER_ROLES (USER_ID,USER_ROLE ) VALUES (:NEW.C_USER_ID,3);
	 insert into casus.C_USER_ROLES (USER_ID,USER_ROLE ) VALUES (:NEW.C_USER_ID,4);
	 END IF;
END ;
/


--
-- INSERT2_ACCR  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT2_ACCR BEFORE INSERT ON "CASUS"."ADDCARD_CLINREASON" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
DECLARE
myNewid   Number;
BEGIN

if :new.internal_id = -1 then 
SELECT CASUS.CARDADD_ID_SEQ.nextval into myNewid from dual;
:new.internal_id := myNewid;
end if;

END;
/


--
-- PAED_VHB_KLIFO_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.PAED_VHB_KLIFO_TRIGGER
BEFORE INSERT
ON CASUS.COURSE_STUDENT_REF 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpRegCount1 NUMBER;
BEGIN
-- Alle Teilnehmer kommen von der vhb in den Kurs: 32107
-- alle LMU studenten (gruppe sollte 26 sein) sollen dann auch in Kurs 32106
-- 
-- Alle studenten sollen dann auch in die Kurse: 32108,32109,32110 und 32111
-- 
--
  if :NEW.COURSE_ID = 36673 then
   dbms_output.put('NEW COURSE_ID:');
   dbms_output.put_line(:NEW.COURSE_ID);
   
   insert into CASUS.COURSE_STUDENT_REF (course_id, student_id) values (33073, :new.student_id);
   insert into CASUS.COURSE_STUDENT_REF (course_id, student_id) values (33071, :new.student_id);
   insert into CASUS.COURSE_STUDENT_REF (course_id, student_id) values (33072, :new.student_id);
   insert into CASUS.COURSE_STUDENT_REF (course_id, student_id) values (33074, :new.student_id);
  end if;
  
END;
/


--
-- PICTHLBASE_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.PICTHLBASE_TRIGGER AFTER UPDATE ON CASUS.PICTUREHLBASE REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
   UPDATE data_items_chg SET modified = SYSDATE WHERE item_id = :new.item_id;
END;
/


--
-- PICTUREHLLIST_INSERT  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.PICTUREHLLIST_INSERT
BEFORE INSERT
ON CASUS.PICTUREHLLIST REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpID NUMBER;
BEGIN 
   IF (:new.internal_id = 0) THEN
      select casus.hl_id_seq.nextval INTO tmpID from sys.dual;
   :new.internal_id := tmpID;
   END IF;
END;
/


--
-- PICTUREHLLIST_UPDATE  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.PICTUREHLLIST_UPDATE
BEFORE UPDATE
ON CASUS.PICTUREHLLIST REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DISABLE
DECLARE
tmpTYPE CHAR(4);
BEGIN
   tmpTYPE := '';
   select type INTO tmpTYPE from casus.data_items where item_id=:new.target_id;
   IF (tmpTYPE > 0) THEN
         :NEW.target_type := tmpTYPE;
   END IF;
END;
/


--
-- PICTUREHL_POLYGON_INSERT  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.PICTUREHL_POLYGON_INSERT
BEFORE INSERT
ON CASUS.PICTUREHL_POLYGON
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpID NUMBER;
tmpORDERNR NUMBER;
BEGIN 
   IF (:new.internal_id = 0) THEN
      select internal_id INTO tmpID from casus.PICTUREHLLIST where parent_id=:new.parent_id and order_nr=:new.order_nr;
   :new.internal_id := tmpID;
   ELSE
      select parent_id,max(ORDER_NR) into tmpID, tmpORDERNR from casus.PICTUREHLLIST where internal_id=:new.internal_id group by parent_id; 
   :new.parent_id := tmpID;
   :new.order_nr := tmpORDERNR;
   END IF;
END;
/


--
-- SYS_DATE_TRIG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.SYS_DATE_TRIG
BEFORE INSERT
ON CASUS.C_GROUP
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
BEGIN
:new.creation_date := SYSDATE;
END SYS_DATE_TRIG;
/


--
-- UPDATE_CASE_ACC_FAVOURITES  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_CASE_ACC_FAVOURITES
AFTER DELETE
ON CASUS.CASE_ACC
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  delete from casus.c_session_action_favourites where action = 40 and user_id = :old.user_id and target_id = :old.case_id;
END;
/


--
-- UPDATE_CG_TUTMYSTUD_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_CG_TUTMYSTUD_CHG BEFORE UPDATE ON "CASUS"."CG_TUTORS_MY_STUDENTS" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
:new.modification_date := sysdate;

INSERT INTO casus.CG_TUTORS_MY_STUDENTS_chg (INTERNAL_ID, TUTOR_ID, COURSE_ID, COURSE_GROUP_ID, USER_ID, CREATION_DATE, MODIFICATION_DATE, action) VALUES (:old.INTERNAL_ID, :old.TUTOR_ID,:old.COURSE_ID, :old.COURSE_GROUP_ID, :old.USER_ID, :old.CREATION_DATE, :old.MODIFICATION_DATE, 2);
END;
/


--
-- UPDATE_COURSE_CASE_REF_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_COURSE_CASE_REF_CHG AFTER UPDATE OF   course_id, case_id, ORDER_NR,NUM_OF_CARDS,CRITERIA_TYPE,TIME_THRESHOLD, CARD_THRESHOLD, SUCCESS_THRESHOLD ON "CASUS"."COURSE_CASE_REF" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
INSERT INTO casus.COURSE_CASE_REF_chg (course_id, case_id, case_id_new) VALUES (:old.course_id, :old.case_id, :new.case_id);
END;
/


--
-- UPDATE_COURSE_CHGLOG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_COURSE_CHGLOG AFTER UPDATE ON "CASUS"."COURSE" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
INSERT INTO casus.COURSE_CHGLOG (course_id, action, name, extern_comment,intern_comment) VALUES (:old.id, 'UPD', :old.name, :old.coursecomment, :old.comment_external);
END;
/


--
-- UPDATE_COURSE_STUDENT_REF_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_COURSE_STUDENT_REF_CHG AFTER UPDATE OF   COURSE_ID,STUDENT_ID,GROUP_NR,COMPUTER_NR ON "CASUS"."COURSE_STUDENT_REF" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
INSERT INTO casus.COURSE_STUDENT_REF_chg (course_id, student_id, student_id_new) VALUES (:old.course_id, :old.student_id, :new.student_id);
END;
/


--
-- UPDATE_C_SESSION_LOG_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_C_SESSION_LOG_CHG AFTER UPDATE ON "CASUS"."C_SESSION_LOG" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
insert into casus.C_SESSION_LOG_CHG (chg_type,SESSION_ID,TS,SUCCESS,STATUS,EXT_STATUS,EXT_RESULT) values 
  (2,:new.SESSION_ID,:new.TS,:new.SUCCESS,:new.STATUS,:new.EXT_STATUS,:new.EXT_RESULT);
END;
/


--
-- UPDATE_DATA_ITEMS_CHG2  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_DATA_ITEMS_CHG2 AFTER UPDATE ON "CASUS"."DATA_ITEMS" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE casus.data_items_chg SET modified=SYSDATE WHERE item_id=:old.item_id;
END;
/


--
-- UPDATE_DATA_ITEMS_FAVOURITES  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_DATA_ITEMS_FAVOURITES
AFTER UPDATE
OF USER_ID
ON CASUS.DATA_ITEMS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  if (:new.type = 'CASE' and :old.user_id <> :new.user_id) then
    delete from casus.c_session_action_favourites where action = 40 and user_id = :old.user_id and target_id = :new.item_id;
  end if;
END;
/


--
-- UPDATE_FTANSWER_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_FTANSWER_CHG AFTER UPDATE OF JUMP,FT_DATA_ID,COMMENT_ID,ADDINFO_ID ON "CASUS"."FTANSWER" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id =:old.item_id;
END;
/


--
-- UPDATE_FTANSWER_DATA_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_FTANSWER_DATA_CHG AFTER UPDATE OF DATA_SIZE,DATA ON "CASUS"."FTANSWER_DATA" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
DISABLE
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id in (select item_id from casus.ftanswer where FT_DATA_ID=:old.item_id);
END;
/


--
-- UPDATE_HTMD_TRG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_HTMD_TRG
AFTER UPDATE
ON CASUS.HTMD 
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
DECLARE
nextversion NUMBER;
BEGIN
nextversion := 1;
   begin
    select max(my_version)+1 into nextversion from htmd_vs where item_id = :new.item_id;      
   EXCEPTION
   WHEN NO_DATA_FOUND THEN nextversion := 1;
END;
if nextversion is null then
    nextversion := 1;
end if;
insert into HTMD_VS (item_id,  data_size, data, vararray_count, my_version) values (:old.item_id,  :old.data_size, :old.data, :old.vararray_count, nextversion);
    
END;
/


--
-- UPDATE_LISTS  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_LISTS AFTER UPDATE  ON "CASUS"."LISTS" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
INSERT INTO casus.LISTS_chg (ITEM_ID, PARENT_ID, ORDER_NR, INDEX_NR, CHG_TYPE) VALUES (:old.ITEM_ID, :old.PARENT_ID, :old.ORDER_NR, :old.INDEX_NR, 'UPD');
END;
/


--
-- UPDATE_MCANSWER_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_MCANSWER_CHG AFTER UPDATE OF JUMP,VARARRAY_COUNT,COMMENT_ID,ADDINFO_ID ON "CASUS"."MCANSWER" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id =:old.item_id;
END;
/


--
-- UPDATE_MCANSWER_VA_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_MCANSWER_VA_CHG AFTER UPDATE OF ORDER_NR,ANSWER_TEXT,CORRECT,CHOICE ON "CASUS"."MCANSWER_VA" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id=:old.PARENT_ID;
END;
/


--
-- UPDATE_MEDIAHEADER_HLID_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_MEDIAHEADER_HLID_CHG AFTER UPDATE OF hyperlink_ID ON "CASUS"."MEDIAHEADER" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id=:old.item_id;
END;
/


--
-- UPDATE_MEDIAHEADER_MEDIAID_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_MEDIAHEADER_MEDIAID_CHG AFTER UPDATE OF MEDIA_ID ON "CASUS"."MEDIAHEADER" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id=:old.item_id;
END;
/


--
-- UPDATE_NCANSWER_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_NCANSWER_CHG AFTER UPDATE OF JUMP,NCTEXT_ID,COMMENT_ID,ADDINFO_ID ON "CASUS"."NCANSWER" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id =:old.item_id;
END;
/


--
-- UPDATE_NCANSWER_TEXT_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_NCANSWER_TEXT_CHG AFTER UPDATE OF DATA_SIZE,DATA ON "CASUS"."NCANSWER_TEXT" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
DISABLE
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id in (select item_id from casus.ncanswer where NCTEXT_ID=:old.item_id);
END;
/


--
-- UPDATE_ULANSWER_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_ULANSWER_CHG AFTER UPDATE OF JUMP,HLTEXT_ID,COMMENT_ID,ADDINFO_ID ON "CASUS"."ULANSWER" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id =:old.item_id;
END;
/


--
-- UPDATE_ULANSWER_TEXT_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_ULANSWER_TEXT_CHG AFTER UPDATE OF DATA_SIZE,DATA,VARARRAY_COUNT ON "CASUS"."ULANSWER_TEXT" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
DISABLE
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id in (select item_id from casus.ulanswer where HLTEXT_ID=:old.item_id);
END;
/


--
-- UPDATE_ULANSWER_VA_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_ULANSWER_VA_CHG AFTER UPDATE OF ORDER_NR,BEGIN_UL,END_UL ON "CASUS"."ULANSWER_VA" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
  UPDATE data_items_chg SET modified = SYSDATE WHERE item_id in (select item_id from casus.ulanswer where HLTEXT_ID=:old.parent_id);
END;
/


--
-- SMP_JOB_EVENTLIST  (Synonym) 
--
CREATE SYNONYM CASUS.SMP_JOB_EVENTLIST FOR CASUS.SMP_JOB_EVENTLIST_;


--
-- SMP_JOB_ID  (Synonym) 
--
CREATE SYNONYM CASUS.SMP_JOB_ID FOR CASUS.SMP_JOB_ID_;


--
-- JOB83  (Job) 
--
DECLARE
  X NUMBER;
  user_name varchar2(128);
BEGIN
  select user into user_name from dual;
  execute immediate 'alter session set current_schema = CASUS';
  BEGIN
    SYS.DBMS_JOB.SUBMIT
    ( job       => X 
     ,what      => 'insert into casus.course_student_ref (course_id, student_id) select distinct 35409,user_id from casus.c_session where case_id in (475364,
460692,
476319,
460238,
474422,
458915,
474814,
477882) and start_date > to_date(''2010-10-01'',''YYYY-MM-DD'') and user_id not in (select student_id from casus.course_student_ref where course_id = 35409);

update casus.course_student_ref set group_nr = 450 where course_id = 35409 and group_nr <> 450;

update casus.c_session_avg_success set course_group_id = 450, course_id = 35409 where case_id in (475364,
460692,
476319,
460238,
474422,
458915,
474814,
477882)  and start_date > to_date(''2010-10-01'',''YYYY-MM-DD'') and course_group_id <> 450 and course_id <> 35409;

update c_session_avg_success csa1 set csa1.session_modification_date = (select cs1.modification_date  from c_session cs1 where cs1.session_id = csa1.session_id) 
where csa1.session_id in (select cs.session_id from c_session cs,c_session_avg_success csa  
    where (cs.modification_date>sysdate-1 or csa.session_modification_date is null) and csa.session_modification_date <> cs.modification_date and cs.session_id = csa.session_id);
    
update c_session_avg_success csa1 set csa1.session_end_date = (select cs1.endofsession_date  from c_session cs1 where cs1.session_id = csa1.session_id) 
where csa1.session_id in (select cs.session_id from c_session cs,c_session_avg_success csa  
    where (cs.modification_date>sysdate-1 or (csa.session_end_date is null and csa.session_end_date is not null))and csa.session_end_date <> cs.endofsession_date and cs.session_id = csa.session_id);
 
update c_session_avg_success csa1 set csa1.start_date = (select cs1.creation_date  from c_session cs1 where cs1.session_id = csa1.session_id) 
where csa1.session_id in (select cs.session_id from c_session cs,c_session_avg_success csa  
    where (cs.modification_date>sysdate-1 or (csa.start_date is null and cs.creation_date is not null)) AND (csa.start_date <> cs.creation_date) and cs.session_id = csa.session_id);
    
    commit;
    
   delete from casus.course_student_ref where student_id not in (select user_id from c_user);
    
   commit;             
   
   delete from casus.annotations where user_id > 0 and user_id not in (select user_id from casus.c_user);

   delete from casus.annotations where to_user_id > 0 and to_user_id not in (select user_id from casus.c_user);

   commit;
'
     ,next_date => SYSDATE+240/1440 
     ,interval  => 'SYSDATE+240/1440 '
     ,no_parse  => TRUE
    );
    execute immediate 'alter session set current_schema = ' || user_name ;
  EXCEPTION
    WHEN OTHERS THEN 
      execute immediate 'alter session set current_schema = ' || user_name ;
      RAISE;
  END;
  COMMIT;
END;
/


--
-- JOB25  (Job) 
--
DECLARE
  X NUMBER;
  user_name varchar2(128);
BEGIN
  select user into user_name from dual;
  execute immediate 'alter session set current_schema = CASUS';
  BEGIN
    SYS.DBMS_JOB.SUBMIT
    ( job       => X 
     ,what      => 'BEGIN 
  CASUS.UPDATE_COURSE;
  COMMIT; 
  
  delete from casus.c_session_active where timestamp < (sysdate-360/1440);

  commit; 
    
  update  casus.course_student_ref set computer_nr = -1 where computer_nr is null;

    commit;
    
    
CASUS.recalc_resetsession_actions;

commit;
    

CASUS.BATCHINITNEWCSESSION ( -1, -1, 25000 );
 COMMIT; 
 
 update casus.c_session_action set clientip = null where timestamp < sysdate-30 and timestamp > sysdate -40 and clientip is not null;
 
 commit;


END;'
     ,next_date => SYSDATE+240/1440 
     ,interval  => 'SYSDATE+240/1440 '
     ,no_parse  => TRUE
    );
    execute immediate 'alter session set current_schema = ' || user_name ;
  EXCEPTION
    WHEN OTHERS THEN 
      execute immediate 'alter session set current_schema = ' || user_name ;
      RAISE;
  END;
  COMMIT;
END;
/


--
-- JOB103  (Job) 
--
DECLARE
  X NUMBER;
  user_name varchar2(128);
BEGIN
  select user into user_name from dual;
  execute immediate 'alter session set current_schema = CASUS';
  BEGIN
    SYS.DBMS_JOB.SUBMIT
    ( job       => X 
     ,what      => 'update casus.seq_and_site set ts = sysdate;

commit;
'
     ,next_date => SYSDATE+1/1440 
     ,interval  => 'SYSDATE+1/1440 '
     ,no_parse  => TRUE
    );
    execute immediate 'alter session set current_schema = ' || user_name ;
  EXCEPTION
    WHEN OTHERS THEN 
      execute immediate 'alter session set current_schema = ' || user_name ;
      RAISE;
  END;
  COMMIT;
END;
/


--
-- DR$MAILMSG_TEXT_INDEX$J  (Scheduler Job) 
--
BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB
    (
       job_name        => 'CASUS.DR$MAILMSG_TEXT_INDEX$J'
      ,start_date      => NULL
      ,repeat_interval => 'SYSDATE+(1/24/10)'
      ,end_date        => NULL
      ,job_class       => 'DEFAULT_JOB_CLASS'
      ,job_type        => 'PLSQL_BLOCK'
      ,job_action      => 'ctxsys.drvdml.auto_sync_index(''MAILMSG_TEXT_INDEX'', 12582912, NULL,  NULL, NULL, 0);'
      ,comments        => 'automatic sync job'
    );
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE
    ( name      => 'CASUS.DR$MAILMSG_TEXT_INDEX$J'
     ,attribute => 'RESTARTABLE'
     ,value     => FALSE);
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE
    ( name      => 'CASUS.DR$MAILMSG_TEXT_INDEX$J'
     ,attribute => 'LOGGING_LEVEL'
     ,value     => SYS.DBMS_SCHEDULER.LOGGING_OFF);
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE_NULL
    ( name      => 'CASUS.DR$MAILMSG_TEXT_INDEX$J'
     ,attribute => 'MAX_FAILURES');
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE_NULL
    ( name      => 'CASUS.DR$MAILMSG_TEXT_INDEX$J'
     ,attribute => 'MAX_RUNS');
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE
    ( name      => 'CASUS.DR$MAILMSG_TEXT_INDEX$J'
     ,attribute => 'STOP_ON_WINDOW_CLOSE'
     ,value     => FALSE);
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE
    ( name      => 'CASUS.DR$MAILMSG_TEXT_INDEX$J'
     ,attribute => 'JOB_PRIORITY'
     ,value     => 3);
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE_NULL
    ( name      => 'CASUS.DR$MAILMSG_TEXT_INDEX$J'
     ,attribute => 'SCHEDULE_LIMIT');
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE
    ( name      => 'CASUS.DR$MAILMSG_TEXT_INDEX$J'
     ,attribute => 'AUTO_DROP'
     ,value     => TRUE);

  SYS.DBMS_SCHEDULER.ENABLE
    (name                  => 'CASUS.DR$MAILMSG_TEXT_INDEX$J');
END;
/


--
-- DR$USER_TEXT_INDEX$J  (Scheduler Job) 
--
BEGIN
  SYS.DBMS_SCHEDULER.CREATE_JOB
    (
       job_name        => 'CASUS.DR$USER_TEXT_INDEX$J'
      ,start_date      => NULL
      ,repeat_interval => 'SYSDATE+(1/24/60)'
      ,end_date        => NULL
      ,job_class       => 'DEFAULT_JOB_CLASS'
      ,job_type        => 'PLSQL_BLOCK'
      ,job_action      => 'ctxsys.drvdml.auto_sync_index(''USER_TEXT_INDEX'', 12582912, NULL,  NULL, NULL, 0);'
      ,comments        => 'automatic sync job'
    );
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE
    ( name      => 'CASUS.DR$USER_TEXT_INDEX$J'
     ,attribute => 'RESTARTABLE'
     ,value     => FALSE);
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE
    ( name      => 'CASUS.DR$USER_TEXT_INDEX$J'
     ,attribute => 'LOGGING_LEVEL'
     ,value     => SYS.DBMS_SCHEDULER.LOGGING_OFF);
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE_NULL
    ( name      => 'CASUS.DR$USER_TEXT_INDEX$J'
     ,attribute => 'MAX_FAILURES');
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE_NULL
    ( name      => 'CASUS.DR$USER_TEXT_INDEX$J'
     ,attribute => 'MAX_RUNS');
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE
    ( name      => 'CASUS.DR$USER_TEXT_INDEX$J'
     ,attribute => 'STOP_ON_WINDOW_CLOSE'
     ,value     => FALSE);
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE
    ( name      => 'CASUS.DR$USER_TEXT_INDEX$J'
     ,attribute => 'JOB_PRIORITY'
     ,value     => 3);
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE_NULL
    ( name      => 'CASUS.DR$USER_TEXT_INDEX$J'
     ,attribute => 'SCHEDULE_LIMIT');
  SYS.DBMS_SCHEDULER.SET_ATTRIBUTE
    ( name      => 'CASUS.DR$USER_TEXT_INDEX$J'
     ,attribute => 'AUTO_DROP'
     ,value     => TRUE);

  SYS.DBMS_SCHEDULER.ENABLE
    (name                  => 'CASUS.DR$USER_TEXT_INDEX$J');
END;
/


--
-- AIFF  (Table) 
--
CREATE TABLE CASUS.AIFF
(
  ITEM_ID    NUMBER                             NOT NULL,
  ORDER_NR   NUMBER                             DEFAULT 0                     NOT NULL,
  DATA_SIZE  NUMBER                             DEFAULT 1,
  DATA       LONG RAW                           DEFAULT '00'
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ANSWER_COMMENT  (Table) 
--
CREATE TABLE CASUS.ANSWER_COMMENT
(
  ITEM_ID    NUMBER                             NOT NULL,
  NAME       VARCHAR2(2000 BYTE),
  DATA_SIZE  NUMBER,
  DATA       LONG
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CARDS  (Table) 
--
CREATE TABLE CASUS.CARDS
(
  ITEM_ID              NUMBER                   NOT NULL,
  CARDTYPE             NUMBER,
  WIDTH                NUMBER,
  HEIGHT               NUMBER,
  INFOVISIBLE          NUMBER                   DEFAULT 0,
  INFOTOP              NUMBER,
  INFOLEFT             NUMBER,
  INFOHEIGHT           NUMBER,
  INFOWIDTH            NUMBER,
  INFOID               NUMBER,
  QUESTIONVISIBLE      NUMBER                   DEFAULT -1,
  QUESTIONTOP          NUMBER,
  QUESTIONLEFT         NUMBER,
  QUESTIONHEIGHT       NUMBER,
  QUESTIONWIDTH        NUMBER,
  QUESTIONID           NUMBER,
  MMVISIBLE            NUMBER,
  MMTOP                NUMBER,
  MMLEFT               NUMBER,
  MMHEIGHT             NUMBER,
  MMWIDTH              NUMBER,
  MMID                 NUMBER,
  ANSWERVISIBLE        NUMBER,
  ANSWERTOP            NUMBER,
  ANSWERLEFT           NUMBER,
  ANSWERHEIGHT         NUMBER,
  ANSWERWIDTH          NUMBER,
  ANSWERID             NUMBER,
  HASEXPERT            NUMBER                   DEFAULT -1,
  EXPERTID             NUMBER,
  CARDNOTICE           VARCHAR2(2000 BYTE),
  LEXICONID            NUMBER,
  RESERVED             NUMBER,
  EXCLUDED             NUMBER,
  EXPERTPICTURENORMAL  NUMBER,
  EXPERTPICTUREHAPPY   NUMBER,
  EXPERTPICTUREANGRY   NUMBER,
  EXPERTPICTUREEXTRA   NUMBER,
  AC_WIDTH             NUMBER(5)                DEFAULT -1,
  EC_WIDTH             NUMBER(5)                DEFAULT -1,
  EC_HEIGHT            NUMBER(5)                DEFAULT -1,
  AC_HEIGHT            NUMBER(5)                DEFAULT -1,
  RULE                 NUMBER                   DEFAULT -1,
  DEFAULT_CARD         NUMBER                   DEFAULT 0,
  ORG_CARD             NUMBER                   DEFAULT -1,
  NUM_INT_LINKS        NUMBER                   DEFAULT -1,
  NUM_MM_CLICKS        NUMBER                   DEFAULT -1,
  HAS_CARD_NAV         NUMBER                   DEFAULT -1,
  PREV_STATE           NUMBER                   DEFAULT -1,
  NEXT_STATE           NUMBER                   DEFAULT -1,
  COST                 NUMBER                   DEFAULT -1,
  SELECTOR             VARCHAR2(500 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASES  (Table) 
--
CREATE TABLE CASUS.CASES
(
  ITEM_ID               NUMBER                  NOT NULL,
  CASEFLAGS             NUMBER                  DEFAULT 1,
  FIELD                 NUMBER                  DEFAULT -1,
  SUBFIELD              NUMBER                  DEFAULT -1,
  AUTHORNAME            VARCHAR2(255 BYTE),
  AUTHORPRENAME         VARCHAR2(255 BYTE),
  AUTHORINSTITUTION     VARCHAR2(255 BYTE),
  PATIENTDATA           NUMBER,
  PATIENTAGE            NUMBER,
  CASEDESCRIPTION       VARCHAR2(4000 BYTE),
  ADMISSIONDATE         DATE                    DEFAULT NULL,
  TIME                  NUMBER                  DEFAULT -1,
  DIFFICULTY            NUMBER                  DEFAULT -1,
  CASECOMMENT           VARCHAR2(4000 BYTE),
  CASEHYPERLINKS        NUMBER,
  EVALUATION            NUMBER,
  VARARRAY_COUNT        NUMBER,
  NETID                 NUMBER,
  EXTRADATA             NUMBER                  DEFAULT -1,
  CREATIONDATE          DATE                    DEFAULT SYSDATE,
  LASTMODIFICATIONDATE  DATE                    DEFAULT SYSDATE,
  AUTHORDATA            NUMBER,
  UNUSED1               NUMBER                  DEFAULT -1,
  UNUSED2               NUMBER                  DEFAULT -1,
  UNUSED3               NUMBER                  DEFAULT -1,
  CODE_ID               NUMBER                  DEFAULT -1,
  ISCASEPORT            NUMBER(1),
  LANG                  VARCHAR2(5 BYTE)        DEFAULT NULL,
  PRICE                 NUMBER                  DEFAULT 0,
  FBN                   VARCHAR2(50 BYTE)       DEFAULT '',
  CASE_TYPE             NUMBER                  DEFAULT 0,
  GROUP_ID              NUMBER                  DEFAULT 0,
  IS_PUBLIC             NUMBER                  DEFAULT 0,
  PASSWD                VARCHAR2(50 BYTE)       DEFAULT '',
  NET_CONVERTED         NUMBER(1)               DEFAULT 0,
  ORG_CASE              NUMBER                  DEFAULT -1,
  ADDCARDTYPES          VARCHAR2(50 BYTE),
  APPLY_RULES           NUMBER                  DEFAULT 0,
  CHILD_TYPE            NUMBER                  DEFAULT -1,
  ENG_SCORE_MODE        NUMBER                  DEFAULT -1,
  CREDITS100            NUMBER                  DEFAULT -1,
  CREDITSX              NUMBER                  DEFAULT -1,
  PARENT_ENDDATE        DATE,
  USER_SUMMARY_TYPE     NUMBER(2)               DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.CASES.PASSWD IS 'password, currently used for CME LAEK only';

COMMENT ON COLUMN CASUS.CASES.ORG_CASE IS 'id of original case, if this case is a copy';


--
-- CASES_BACKUP  (Table) 
--
CREATE TABLE CASUS.CASES_BACKUP
(
  ITEM_ID               NUMBER                  NOT NULL,
  CASEFLAGS             NUMBER,
  FIELD                 NUMBER,
  SUBFIELD              NUMBER,
  AUTHORNAME            VARCHAR2(255 BYTE),
  AUTHORPRENAME         VARCHAR2(255 BYTE),
  AUTHORINSTITUTION     VARCHAR2(255 BYTE),
  PATIENTDATA           NUMBER,
  PATIENTAGE            NUMBER,
  CASEDESCRIPTION       VARCHAR2(255 BYTE),
  ADMISSIONDATE         DATE,
  TIME                  NUMBER,
  DIFFICULTY            NUMBER,
  CASECOMMENT           VARCHAR2(255 BYTE),
  CASEHYPERLINKS        NUMBER,
  EVALUATION            NUMBER,
  VARARRAY_COUNT        NUMBER,
  NETID                 NUMBER,
  EXTRADATA             NUMBER,
  CREATIONDATE          DATE,
  LASTMODIFICATIONDATE  DATE,
  AUTHORDATA            NUMBER,
  UNUSED1               NUMBER,
  UNUSED2               NUMBER,
  UNUSED3               NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CASES_TEST  (Table) 
--
CREATE TABLE CASUS.CASES_TEST
(
  ITEM_ID               NUMBER                  NOT NULL,
  CASEFLAGS             NUMBER,
  FIELD                 NUMBER,
  SUBFIELD              NUMBER,
  AUTHORNAME            VARCHAR2(255 BYTE),
  AUTHORPRENAME         VARCHAR2(255 BYTE),
  AUTHORINSTITUTION     VARCHAR2(255 BYTE),
  PATIENTDATA           NUMBER,
  PATIENTAGE            NUMBER,
  CASEDESCRIPTION       VARCHAR2(255 BYTE),
  ADMISSIONDATE         DATE,
  TIME                  NUMBER,
  DIFFICULTY            NUMBER,
  CASECOMMENT           VARCHAR2(255 BYTE),
  CASEHYPERLINKS        NUMBER,
  EVALUATION            NUMBER,
  VARARRAY_COUNT        NUMBER,
  NETID                 NUMBER,
  EXTRADATA             NUMBER,
  CREATIONDATE          DATE,
  LASTMODIFICATIONDATE  DATE,
  AUTHORDATA            NUMBER,
  UNUSED1               NUMBER,
  UNUSED2               NUMBER,
  UNUSED3               NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- COURSE_GROUP_DOMAINS  (Table) 
--
CREATE TABLE CASUS.COURSE_GROUP_DOMAINS
(
  COURSE_ID      NUMBER                         DEFAULT -1,
  GROUP_NR       NUMBER                         DEFAULT NULL,
  DOMAIN         VARCHAR2(100 BYTE),
  COURSEGROUPID  NUMBER,
  ORDER_NR       NUMBER,
  ID             NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- C_USER  (Table) 
--
CREATE TABLE CASUS.C_USER
(
  USER_ID             NUMBER                    NOT NULL,
  CREATION_DATE       DATE                      DEFAULT SYSDATE,
  LOGIN               VARCHAR2(500 BYTE)        NOT NULL,
  PASSWORD            RAW(100),
  NAME                VARCHAR2(255 BYTE),
  FIRSTNAME           VARCHAR2(255 BYTE),
  TITLE               VARCHAR2(255 BYTE),
  DATE_OF_BIRTH       DATE,
  SEX                 CHAR(1 BYTE)              DEFAULT 'N',
  STATUS              NUMBER                    DEFAULT -1,
  EDUCATION           NUMBER,
  MATR_NUM            VARCHAR2(255 BYTE),
  LANG                VARCHAR2(5 BYTE)          DEFAULT NULL,
  EMAIL               VARCHAR2(255 BYTE),
  INSTITUTION         VARCHAR2(100 BYTE),
  QUESTION            VARCHAR2(200 BYTE),
  ANSWER              VARCHAR2(200 BYTE),
  PASSWORD2           RAW(100),
  IS_AUTHOR           VARCHAR2(30 BYTE),
  PW_READABLE         VARCHAR2(100 BYTE),
  IS_REVIEWER         NUMBER                    DEFAULT 0,
  PERSONAL_COURSE_ID  NUMBER                    DEFAULT -1,
  STYLE_VALUE         VARCHAR2(20 BYTE),
  LOCKED              NUMBER                    DEFAULT 0,
  GROUP_ID            NUMBER                    DEFAULT 0,
  ADD_ROLE            NUMBER                    DEFAULT 0,
  EXTERNAL            NUMBER(1)                 DEFAULT 0,
  EFN                 NUMBER                    DEFAULT 0,
  ARZTNUMMER          NUMBER                    DEFAULT 0,
  DATATRANSFER_OK     NUMBER(1)                 DEFAULT 0,
  LEGITIMATION        NUMBER(1)                 DEFAULT 0,
  STREET              VARCHAR2(255 BYTE)        DEFAULT '',
  CITY                VARCHAR2(255 BYTE)        DEFAULT '',
  STREETNUMBER        VARCHAR2(50 BYTE)         DEFAULT '',
  LAEK_NUMMER         NUMBER                    DEFAULT 0,
  TYPE                NUMBER                    DEFAULT 0,
  GENDER              NUMBER(1)                 DEFAULT 0,
  SELFREGISTER        NUMBER(1)                 DEFAULT 0,
  IS_EXAM             NUMBER(1)                 DEFAULT 0,
  SUBGROUP_ID         NUMBER                    DEFAULT -1,
  AGB_ACCEPTED        NUMBER                    DEFAULT 1,
  COUNTRY             NUMBER                    DEFAULT -1,
  ZIPCODE             VARCHAR2(20 BYTE),
  EXT_LOGIN           VARCHAR2(500 BYTE)        DEFAULT '',
  EXT_PASSWORD        VARCHAR2(100 BYTE)        DEFAULT '',
  PROFILEEDITABLE     NUMBER                    DEFAULT 1,
  INVITED             NUMBER                    DEFAULT 0,
  PWD_ENCODING        VARCHAR2(50 BYTE),
  NICKNAME            VARCHAR2(100 BYTE),
  EMAIL_OPTION        NUMBER                    DEFAULT -1,
  PWD_CHANGE          NUMBER                    DEFAULT -1,
  EXT_TYPE            NUMBER                    DEFAULT -1,
  SHOWME              NUMBER                    DEFAULT 0,
  COUNTRY2            VARCHAR2(2 BYTE),
  DISPLAY_NAV         NUMBER                    DEFAULT 0,
  MULTIPLE_SESSIONS   NUMBER                    DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.C_USER.EXTERNAL IS 'user from external systems, plugin';


--
-- NETELMS_FDGS  (Table) 
--
CREATE TABLE CASUS.NETELMS_FDGS
(
  PARENT_ID    NUMBER                           NOT NULL,
  ORDER_NR     NUMBER                           NOT NULL,
  NAME         VARCHAR2(255 BYTE),
  CODE_ID      NUMBER,
  LEAD         NUMBER,
  INTERNAL_ID  NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NETELMS_HYPOS  (Table) 
--
CREATE TABLE CASUS.NETELMS_HYPOS
(
  PARENT_ID    NUMBER                           NOT NULL,
  ORDER_NR     NUMBER                           NOT NULL,
  NAME         VARCHAR2(255 BYTE),
  CODE_ID      NUMBER,
  LEAD         NUMBER,
  INTERNAL_ID  NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NETELMS_LINK_HYPO_FDG  (Table) 
--
CREATE TABLE CASUS.NETELMS_LINK_HYPO_FDG
(
  PARENT_ID       NUMBER                        NOT NULL,
  ORDER_NR        NUMBER                        NOT NULL,
  VALUE           NUMBER,
  SRC_NETELM_UID  NUMBER,
  DST_NETELM_UID  NUMBER,
  INTERNAL_ID     NUMBER                        DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- NETELMS_LINK_HYPO_THP  (Table) 
--
CREATE TABLE CASUS.NETELMS_LINK_HYPO_THP
(
  PARENT_ID       NUMBER                        NOT NULL,
  ORDER_NR        NUMBER                        NOT NULL,
  VALUE           NUMBER,
  SRC_NETELM_UID  NUMBER,
  DST_NETELM_UID  NUMBER,
  INTERNAL_ID     NUMBER                        DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PICTUREHL_ARROW  (Table) 
--
CREATE TABLE CASUS.PICTUREHL_ARROW
(
  PARENT_ID    NUMBER,
  ORDER_NR     NUMBER,
  SRC_X        NUMBER,
  SRC_Y        NUMBER,
  DST_X        NUMBER,
  DST_Y        NUMBER,
  INTERNAL_ID  NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PICTUREHL_ICON  (Table) 
--
CREATE TABLE CASUS.PICTUREHL_ICON
(
  PARENT_ID    NUMBER,
  ORDER_NR     NUMBER,
  POS_LEFT     NUMBER,
  POS_TOP      NUMBER,
  POS_RIGHT    NUMBER,
  POS_BOTTOM   NUMBER,
  INTERNAL_ID  NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- ANSWER_COMMENT_TABLE_VA_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.ANSWER_COMMENT_TABLE_VA_PK ON CASUS.ANSWER_COMMENT
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CARDS_ANSWERID_IDX  (Index) 
--
CREATE INDEX CASUS.CARDS_ANSWERID_IDX ON CASUS.CARDS
(ANSWERID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CARDS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CARDS_PK ON CASUS.CARDS
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASES_BACKUP_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CASES_BACKUP_PK ON CASUS.CASES_BACKUP
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASES_DIFF_IDX  (Index) 
--
CREATE INDEX CASUS.CASES_DIFF_IDX ON CASUS.CASES
(DIFFICULTY)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASES_FLAG_IDX  (Index) 
--
CREATE INDEX CASUS.CASES_FLAG_IDX ON CASUS.CASES
(CASEFLAGS)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASES_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CASES_PK ON CASUS.CASES
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CASES_TEST_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.CASES_TEST_PK ON CASUS.CASES_TEST
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CGD_ID_IDX  (Index) 
--
CREATE INDEX CASUS.CGD_ID_IDX ON CASUS.COURSE_GROUP_DOMAINS
(COURSEGROUPID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CGD_PK_OLD_IDX  (Index) 
--
CREATE INDEX CASUS.CGD_PK_OLD_IDX ON CASUS.COURSE_GROUP_DOMAINS
(COURSE_ID, GROUP_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_USER_ADDROLE_IDX  (Index) 
--
CREATE INDEX CASUS.C_USER_ADDROLE_IDX ON CASUS.C_USER
(ADD_ROLE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_USER_EXTERNAL_IDX  (Index) 
--
CREATE INDEX CASUS.C_USER_EXTERNAL_IDX ON CASUS.C_USER
(EXTERNAL)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_USER_GROUP_IDX  (Index) 
--
CREATE INDEX CASUS.C_USER_GROUP_IDX ON CASUS.C_USER
(GROUP_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_USER_MATNR_IDX  (Index) 
--
CREATE INDEX CASUS.C_USER_MATNR_IDX ON CASUS.C_USER
(MATR_NUM)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_USER_NAME_IDX  (Index) 
--
CREATE INDEX CASUS.C_USER_NAME_IDX ON CASUS.C_USER
(NAME)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_USER_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.C_USER_PK ON CASUS.C_USER
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NETELMS_FDGS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.NETELMS_FDGS_PK ON CASUS.NETELMS_FDGS
(PARENT_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NETELMS_HYPOS_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.NETELMS_HYPOS_PK ON CASUS.NETELMS_HYPOS
(PARENT_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NETELMS_LINK_HYPO_FDG_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.NETELMS_LINK_HYPO_FDG_PK ON CASUS.NETELMS_LINK_HYPO_FDG
(PARENT_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- NETELMS_LINK_HYPO_THP_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.NETELMS_LINK_HYPO_THP_PK ON CASUS.NETELMS_LINK_HYPO_THP
(PARENT_ID, ORDER_NR)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USER_TEXT_INDEX  (Index) 
--
CREATE INDEX CASUS.USER_TEXT_INDEX ON CASUS.C_USER
(LOGIN)
INDEXTYPE IS CTXSYS.CONTEXT;

--
-- CHANGE_IMAGEHL_INHERITANCE  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.change_imagehl_inheritance is
myCount   Number;
myParent_id   Number;
myOrder_nr   Number;
CURSOR MyCursor IS
    select distinct PARENT_ID,ORDER_NR
    from casus.PICTUREHLLIST 
    where internal_id is null or internal_id <= 0;
BEGIN
myCount := 0;


 FOR c1_rec IN MyCursor LOOP
 select casus.hl_id_seq.nextval INTO myCount from sys.dual;
  update casus.PICTUREHLLIST set internal_id=myCount where parent_id=c1_rec.parent_id and order_nr=c1_rec.order_nr;
  update casus.PICTUREHL_ARROW set internal_id=myCount where parent_id=c1_rec.parent_id and order_nr=c1_rec.order_nr;
  update casus.PICTUREHL_ICON set internal_id=myCount where parent_id=c1_rec.parent_id and order_nr=c1_rec.order_nr;
  update casus.PICTUREHL_POLYGON set internal_id=myCount where parent_id=c1_rec.parent_id and order_nr=c1_rec.order_nr;
  update casus.PICTUREHL_POSTEXT set internal_id=myCount where parent_id=c1_rec.parent_id and order_nr=c1_rec.order_nr;
 END LOOP;

END; 
/


--
-- EMAIL_REGISTRATION  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.email_registration(in_group_id NUMBER,in_student_id NUMBER, in_test NUMBER) is
myCount   Number;
myCount2   Number;
myCount3   Number;
tmpCount NUMBER;
tmpVar NUMBER;
tmpCourseID NUMBER;
tmpStudentEmail VARCHAR2(100);
CURSOR MyCursor(PARAM1 NUMBER) IS
    select cc.id from casus.course cc
    where cc.GROUP_ID = PARAM1;
BEGIN
--dbms_output.put_line('email_registration start');
tmpStudentEmail := null;
BEGIN
 SELECT email INTO tmpStudentEmail
 from casus.c_user where user_id=in_student_id;
 dbms_output.put('tmpStudentEmail=');
 dbms_output.put_line(tmpStudentEmail);
    -- insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( tmpStudentEmail);
 myCount := 1;
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount := 0;
END;

if myCount=1 then
   -- insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( 'not empty');
 FOR c1_rec IN MyCursor(in_group_id) LOOP
  tmpCourseID := c1_rec.id;
  --insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( TO_CHAR(tmpCourseID));
  dbms_output.put('tmpCourseID=');
  dbms_output.put_line(tmpCourseID);
  
  select count(*) INTO tmpCount from casus.c_user cu,casus.course_group_domains cgd where cgd.course_id=tmpCourseID and cu.user_id=in_student_id  and (cu.email like CONCAT('%@',cgd.domain) OR cu.email like CONCAT('%.',cgd.domain));
     IF (tmpCount > 0) THEN
           select MIN(cgd.group_nr) INTO tmpVar from casus.c_user cu,casus.course_group_domains cgd where cgd.course_id=tmpCourseID and cu.user_id=in_student_id and (cu.email like CONCAT('%@',cgd.domain) OR cu.email like CONCAT('%.',cgd.domain)) group by cgd.course_id;
          
      dbms_output.put('tmpVar=');
      dbms_output.put_line(tmpVar);
      tmpCount := 0;
      select count(*) INTO tmpCount from casus.course_student_ref csr where csr.course_id=tmpCourseID and csr.student_id=in_student_id;
      --insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( TO_CHAR(tmpCount));
      IF (tmpCount = 0) THEN
         insert into casus.course_student_ref (course_id,student_id,group_nr) values (tmpCourseID,in_student_id,tmpVar);
      --insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( 'insert');
   else
     dbms_output.put('update casus.course_student_ref csr set group_nr=tmpVar where csr.course_id=tmpCourseID and csr.student_id=student_id;');
        dbms_output.put('tmpCourseID'); 
   dbms_output.put(tmpCourseID);
   dbms_output.put('student_id');
   dbms_output.put_line(in_student_id);
         update casus.course_student_ref csr set group_nr=tmpVar where csr.course_id=tmpCourseID and csr.student_id=in_student_id;
   
   dbms_output.put('update casus.c_session_avg_success csa set csa.group_nr=tmpVar where csa.course_id=tmpCourseID and csa.user_id=in_student_id;');
        dbms_output.put('tmpCourseID'); 
   dbms_output.put(tmpCourseID);
   dbms_output.put('student_id');
   dbms_output.put_line(in_student_id);
   update casus.c_session_avg_success csa set csa.course_group_id=tmpVar where csa.course_id=tmpCourseID and csa.user_id=in_student_id;
      end if;
      
      update casus.c_user set locked=0 where user_id=in_student_id;
   
   CASUS.EMAIL_REGISTRATION_plugin ( IN_GROUP_ID, IN_STUDENT_ID, IN_TEST );
     END IF;
 END LOOP;
END IF;
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount := 0;
   


   
--dbms_output.put_line('email_registration end');
END;
/


--
-- EMAIL_REGISTRATION_TESTFUNC  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.email_registration_testfunc(in_group_id NUMBER,in_student_id NUMBER, in_test NUMBER) is
myCount   Number;
myCount2   Number;
myCount3   Number;
tmpCount NUMBER;
tmpVar NUMBER;
tmpCourseID NUMBER;
tmpStudentEmail VARCHAR2(50);
CURSOR MyCursor(PARAM1 NUMBER) IS
    select cc.id from casus.course cc
    where cc.GROUP_ID = PARAM1;
BEGIN
--dbms_output.put_line('email_registration start');
tmpStudentEmail := null;
BEGIN
 SELECT email INTO tmpStudentEmail
 from casus.c_user where user_id=in_student_id;
 dbms_output.put('tmpStudentEmail=');
 dbms_output.put_line(tmpStudentEmail);
    -- insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( tmpStudentEmail);
 myCount := 1;
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount := 0;
END;

if myCount=1 then
   -- insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( 'not empty');
 FOR c1_rec IN MyCursor(in_group_id) LOOP
  tmpCourseID := c1_rec.id;
  --insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( TO_CHAR(tmpCourseID));
  dbms_output.put('tmpCourseID=');
  dbms_output.put_line(tmpCourseID);
  
  select count(*) INTO tmpCount from casus.c_user cu,casus.course_group_domains cgd where cgd.course_id=tmpCourseID and cu.user_id=in_student_id  and cu.email like CONCAT('%',cgd.domain);
     IF (tmpCount > 0) THEN
           select MIN(cgd.group_nr) INTO tmpVar from casus.c_user cu,casus.course_group_domains cgd where cgd.course_id=tmpCourseID and cu.user_id=in_student_id and cu.email like CONCAT('%',cgd.domain) group by cgd.course_id;
          
      dbms_output.put('tmpVar=');
      dbms_output.put_line(tmpVar);
      tmpCount := 0;
      select count(*) INTO tmpCount from casus.course_student_ref csr where csr.course_id=tmpCourseID and csr.student_id=in_student_id;
      --insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( TO_CHAR(tmpCount));
      IF (tmpCount = 0) THEN
     dbms_output.put('insert into casus.course_student_ref (course_id,student_id,group_nr) values (');
   dbms_output.put(tmpCourseID);
   dbms_output.put(',');
   dbms_output.put(in_student_id);
   dbms_output.put(',');
   dbms_output.put(tmpVar);
        dbms_output.put_line(');');
         --insert into casus.course_student_ref (course_id,student_id,group_nr) values (tmpCourseID,in_student_id,tmpVar);
        --insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( 'insert');
         -- update casus.course_student_ref csr set group_nr=tmpVar where csr.course_id=tmpCourseID and csr.student_id=student_id;
      end if;
      
   dbms_output.put('update casus.c_user set locked=0 where user_id==');
      dbms_output.put_line(in_student_id);
      --u pdate casus.c_user set locked=0 where user_id=in_student_id;
   
   -- CASUS.EMAIL_REGISTRATION_plugin ( IN_GROUP_ID, IN_STUDENT_ID, IN_TEST );
     END IF;
 END LOOP;
END IF;
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount := 0;
   
END;
/


--
-- PROCESS_USER_ANSWER_REL_FT  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.process_user_answer_rel_ft (in_parent_id NUMBER,myuseranswer VARCHAR,in_card_id NUMBER, in_type NUMBER, in_date TIMESTAMP,in_debug NUMBER) is
myCount   Number;
tmp VARCHAR(4000);
myLen   Number;
i   Number;
my_parent_id NUMBER;
myValue VARCHAR(4000);
myValueInt NUMBER;
BEGIN
if in_debug = 1 then
    dbms_output.put('process_user_answer_rel_ft (');
    dbms_output.put(in_parent_id);
    dbms_output.put(',');
    dbms_output.put(myuseranswer);
    dbms_output.put(',');
    dbms_output.put(in_card_id);
    dbms_output.put(',');
    dbms_output.put(in_type);
    dbms_output.put(',');
    dbms_output.put(in_debug);
    dbms_output.put_line(')');
end if;

BEGIN
    myValue := '';
    myValueInt := 0;
    i := 1;
    LOOP
        myValue:= Split( myuseranswer, i , ',') ;
        EXIT WHEN myValue IS NULL ;
  
            if in_debug = 1 then
                dbms_output.put('i =');
                dbms_output.put(i);
                dbms_output.put('; myValue =');
                dbms_output.put(myValue);
                dbms_output.put_line(';');   
            end if;
            myLen := LENGTH(myValue);
            if (myLen > 0) then
        insert into CASUS.USERANSWER_VA_RELATIONAL (PARENT_ID,CARD_ID,ANSWER, ANSWER_INT,INDEX_NR, MODIFICATION_DATE) values (in_parent_id, in_card_id, myValue,myValueInt ,i, in_date);          
         end if;
  i := i + 1 ;
    END LOOP ;
    
EXCEPTION
   WHEN dup_val_on_index THEN
   if in_debug = 1 then
        dbms_output.put_line('error');
   end if;
END;

END; 
/


--
-- UPDATE_CASEMODIFICATION  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.update_casemodification(newitemid NUMBER) is
tmpTYPE CHAR(4);
tmpID   NUMBER;
loopID   NUMBER;
tmpCount NUMBER;
CURSOR MyCursor(PARAM1 NUMBER) IS
	   select parent_id
	   from casus.lists li
	   where li.item_id=PARAM1 AND li.parent_id<>0;
BEGIN
	 --dbms_output.put('update_casemodification: ');
	 --dbms_output.put_line(newitemid);
	 loopID := newitemid;

	 tmpTYPE := null;
	 BEGIN
	 	  select type into tmpTYPE from casus.data_items di where di.item_id=loopID;
	 EXCEPTION
		 WHEN NO_DATA_FOUND THEN tmpTYPE := null;
	 END;

     -- dbms_output.put('update_casemodification tmpTYPE...');
	 --dbms_output.put_line(tmpTYPE);
     IF tmpTYPE=null or tmpTYPE='CASE' THEN
	 	 IF tmpTYPE='CASE' THEN
	 	 update casus.cases set LASTMODIFICATIONDATE=SYSDATE where item_id=loopID;
		 --dbms_output.put_line('update_casemodification is CASE...');
		 end if;
	 else
	 	 FOR c1_rec IN MyCursor(loopID) LOOP
		  	  --dbms_output.put('-> update_casemodification(');
			  --dbms_output.put(c1_rec.parent_id);
			  --dbms_output.put_line(')');
	      	  casus.update_casemodification(c1_rec.parent_id);
		 END LOOP;
     END IF;
END;

/


--
-- UPDHYPERLINKCOUNTER  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.updHyperlinkCounter(in_card_id NUMBER, in_count NUMBER) is
BEGIN
    UPDATE casus.cards c SET c.NUM_INT_LINKS = in_count WHERE item_id = in_card_id;
END;
/


--
-- UPDMEDIACOUNTER  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.updMediaCounter(in_card_id NUMBER, in_count NUMBER) is
BEGIN
    UPDATE casus.cards c SET c.num_mm_clicks = in_count WHERE item_id = in_card_id;
END;
/


--
-- VALIDATECGTNAMEDLISTS  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.validateCGTNamedLists(in_list_id NUMBER) is
BEGIN
if (in_list_id = -1) then
update CASUS.CG_TUTORS_MY_STUDENTS cgms1 
set cgms1.user_id = (select user_id from c_user where login like cgms1.user_login) 
where cgms1.internal_id in (select cgms.internal_id from CASUS.CG_TUTORS_MY_STUDENTS cgms, c_user cu where cgms.parent_id > 0 and cgms.user_id = -1 and cgms.user_login = cu.login);
else
update CASUS.CG_TUTORS_MY_STUDENTS cgms1 
set cgms1.user_id = (select user_id from c_user where login like cgms1.user_login) 
where cgms1.parent_id = in_list_id and cgms1.internal_id in (select cgms.internal_id from CASUS.CG_TUTORS_MY_STUDENTS cgms, c_user cu where cgms.parent_id = in_list_id and cgms.user_id = -1 and cgms.user_login = cu.login);
end if;
END; 
/


--
-- EMAIL_REGISTRATION_FUNCTION  (Function) 
--
CREATE OR REPLACE FUNCTION CASUS.EMAIL_REGISTRATION_FUNCTION (in_group_id NUMBER,in_student_id NUMBER, in_email VARCHAR2, in_test NUMBER) RETURN NUMBER  IS
tmpResult NUMBER;
myCount   Number;
tmpCount NUMBER;
tmpVar NUMBER;
tmpCourseID NUMBER;
tmpStudentEmail VARCHAR2(50);
CURSOR MyCursor(PARAM1 NUMBER) IS
    select cc.id from casus.course cc
    where cc.GROUP_ID = PARAM1;
BEGIN
IF in_test=1  THEN
   dbms_output.put_line('start EMAIL_REGISTRATION_FUNCTION');
END IF;
   tmpResult := 0;
   
   --dbms_output.put_line('email_registration start');
if in_student_id<>0 then
   tmpStudentEmail := null;

 BEGIN
  SELECT email INTO tmpStudentEmail
  from casus.c_user where user_id=in_student_id;
  --dbms_output.put_line(tmpStudentEmail);
     -- insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( tmpStudentEmail);
  myCount := 1;
 EXCEPTION
    WHEN NO_DATA_FOUND THEN myCount := 0;
 END;
ELSE
 tmpStudentEmail := in_email;
 myCount := 1;
 if tmpStudentEmail=null then
    myCount := 0;
 END IF;
END IF;

IF in_test=1  THEN
   dbms_output.put('myCount=');
   dbms_output.put(myCount);
   dbms_output.put(', tmpStudentEmail=');
   dbms_output.put_line(tmpStudentEmail);
END IF;

if myCount=1 then
IF in_test=1  THEN
   dbms_output.put('start loop =');
   dbms_output.put_line(in_group_id);
   END IF;
   -- insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( 'not empty');
 FOR c1_rec IN MyCursor(in_group_id) LOOP
  tmpCourseID := c1_rec.id;
  IF in_test=1  THEN
   dbms_output.put('tmpCourseID=');
   dbms_output.put_line(tmpCourseID);
   END IF;
   
  --insert into CASUS.EMAIN_REGPROC_DEBUG (test) values ( TO_CHAR(tmpCourseID));
  --dbms_output.put_line(tmpCourseID);
  select count(*) INTO tmpCount from casus.course_groups cg,casus.course_group_domains cgd where cg.course_id=cgd.course_id and cg.group_nr=cgd.group_nr and cgd.course_id=tmpCourseID and cg.enabled=1 and (tmpStudentEmail like CONCAT('%@',cgd.domain) OR tmpStudentEmail like CONCAT('%.',cgd.domain));
     IF (tmpCount > 0) THEN
    IF in_test=1  THEN
          dbms_output.put('found course_group in course =');
       dbms_output.put_line(tmpCourseID);
      END IF;
           tmpResult := 1;
     END IF;
 END LOOP;
END IF;

IF in_test=1  THEN
   dbms_output.put_line(tmpResult);
END IF;

RETURN tmpResult;
   
END EMAIL_REGISTRATION_FUNCTION;
/


--
-- AUTHOR_USERS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.AUTHOR_USERS
(NR, NAME, ORDER_NR, KEY)
AS 
select au.user_id,cu.login,UPPER(cu.login),'authors' from casus.c_user cu,sys.all_users au where cu.IS_AUTHOR=au.username 
union 
select distinct cu.user_id,cu.login,UPPER(cu.login),'authors' from casus.c_user cu, casus.c_user_roles cur where cu.user_id = cur.user_id and cur.user_role in (3);


--
-- AUTHOR_USERS2  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.AUTHOR_USERS2
(NR, NAME, ORDER_NR, KEY)
AS 
select au.user_id,cu.login,UPPER(cu.login),'authors' from casus.c_user cu,sys.all_users au where cu.IS_AUTHOR=au.username union select au.user_id,au.username,au.username,'authors' from sys.all_users au where au.username not in (select distinct(is_author) from casus.c_user where is_author like '%');


--
-- CASE_ACC_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASE_ACC_VIEW
(USER_ID, USER_LOGIN, CASE_ID, CASE_GROUP_ID, CASE_NAME, 
 CASE_OWNER)
AS 
SELECT u.user_id,
          u.login,
          di.item_id,
          di.GROUP_ID,
          di.name,
          0
     FROM casus.case_acc ca, casus.c_user u, casus.data_items di
    WHERE ca.user_id = u.USER_ID AND ca.CASE_ID = di.item_id
   UNION
   SELECT u.user_id,
          u.login,
          di.item_id,
          di.GROUP_ID,
          di.name,
          1
     FROM casus.c_user u, casus.data_items di
    WHERE u.user_id = di.user_id AND di.TYPE = 'CASE';


--
-- CASES_HIB_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_HIB_VIEW
(ITEM_ID, TYPE, NAME, VERSION, DELETE_FLAG, 
 USER_ID, CASEFLAGS, FIELD, AUTHORNAME, AUTHORINSTITUTION, 
 CASEDESCRIPTION, PAT_NAME, PATBIRTHDAY, INT_COMMENT, PAT_CONSENT, 
 LANG, CASE_TYPE, DIFFICULTY, KEYWORDS, COPYRIGHT, 
 ISSN, CONT_REV, FORM_REV, DID_REV, TIME, 
 CASECOMMENT, CASEHYPERLINKS, EVALUATION, CREATIONDATE, LASTMODIFICATIONDATE, 
 CODE_ID, GROUP_ID, IS_PUBLIC, EMAIL, CASE_TYPE2, 
 FBN, PASSWD, CREDITSX, CREDITS100, EXTERNAL_ID, 
 AUTHORPRENAME, CHILD_TYPE, ORG_CASE, AUTHOREMAIL, OPEN_NAV, 
 PARENT_ENDDATE)
AS 
SELECT d.item_id, d.TYPE, d.NAME, d.VERSION, delete_flag, d.user_id,
          m.caseflags, m.FIELD, authorname, authorinstitution,
          casedescription, m.pat_name, m.patbirthday, m.int_comment,
          m.pat_consent, m.lang, m.case_type, m.difficulty, m.keywords,
          m.copyright, m.issn, m.cont_rev, m.form_rev, m.did_rev, m.TIME,
          casecomment, casehyperlinks, evaluation, creationdate,
          lastmodificationdate, code_id, d.GROUP_ID, c.is_public, u.email,
          m.case_type2, c.fbn, c.passwd, c.creditsx, c.credits100,
          m.external_id, authorprename, c.child_type, c.org_case, '',
          m.open_nav, c.parent_enddate
     FROM casus.data_items d,
          casus.cases c,
          casus.case_metadata m,
          casus.c_user u
    WHERE d.item_id = c.item_id AND d.item_id = m.case_id AND d.user_id = u.user_id(+);


--
-- CASES_STRUCTURE_ACS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE_ACS
(ANSWER_ID, ANSWERCOMMENT_ID)
AS 
SELECT cc.answerid, ca.comment_id
     FROM casus.cards cc, casus.ftanswer ca
    WHERE     cc.answerid > 0
          AND cc.answerid = ca.item_id(+)
          AND ca.item_id IS NOT NULL
   UNION
   SELECT cc.answerid, ca.comment_id
     FROM casus.cards cc, casus.mcanswer ca
    WHERE     cc.answerid > 0
          AND cc.answerid = ca.item_id(+)
          AND ca.item_id IS NOT NULL
   UNION
   SELECT cc.answerid, ca.comment_id
     FROM casus.cards cc, casus.ncanswer ca
    WHERE     cc.answerid > 0
          AND cc.answerid = ca.item_id(+)
          AND ca.item_id IS NOT NULL
   UNION
   SELECT cc.answerid, ca.comment_id
     FROM casus.cards cc, casus.ulanswer ca
    WHERE     cc.answerid > 0
          AND cc.answerid = ca.item_id(+)
          AND ca.item_id IS NOT NULL
   UNION
   SELECT cc.answerid, ca.comment_id
     FROM casus.cards cc, casus.mappinganswer ca
    WHERE     cc.answerid > 0
          AND cc.answerid = ca.item_id(+)
          AND ca.item_id IS NOT NULL
   UNION
   SELECT cc.answerid, ca.comment_id
     FROM casus.cards cc, casus.nets2 ca
    WHERE     cc.answerid > 0
          AND cc.answerid = ca.item_id(+)
          AND ca.item_id IS NOT NULL;


--
-- CASES_STRUCTURE_TEXTS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE_TEXTS
(CARD_ID, TEXT_ID, TEXT_TYPE)
AS 
SELECT cc.item_id, cc.infoid, 1
     FROM casus.cards cc
    WHERE cc.infoid > 0
   UNION
   SELECT cc.item_id, cc.questionid, 2
     FROM casus.cards cc
    WHERE cc.questionid > 0
   UNION
   SELECT cc.item_id, cc.expertid, 3
     FROM casus.cards cc
    WHERE cc.expertid > 0
   UNION
   SELECT cc.item_id, acs.answercomment_id, 4
     FROM casus.cards cc, casus.CASES_STRUCTURE_ACS acs
    WHERE cc.answerid > 0 AND cc.answerid = acs.answer_id;

COMMENT ON COLUMN CASUS.CASES_STRUCTURE_TEXTS.TEXT_TYPE IS '1=info,2=question,3=expert,4=answercomment';


--
-- CASES_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_VIEW
(ITEM_ID, TYPE, NAME, DELETE_FLAG, USER_ID, 
 CASEFLAGS, FIELD, SUBFIELD, AUTHORNAME, AUTHORPRENAME, 
 AUTHORINSTITUTION, PATIENTDATA, PATIENTAGE, CASEDESCRIPTION, ADMISSIONDATE, 
 TIME, DIFFICULTY, CASECOMMENT, CASEHYPERLINKS, EVALUATION, 
 VARARRAY_COUNT, NETID, EXTRADATA, CREATIONDATE, LASTMODIFICATIONDATE, 
 AUTHORDATA, UNUSED1, UNUSED2, UNUSED3, CODE_ID, 
 GROUP_ID)
AS 
SELECT		d.item_id,type,name,delete_flag,user_id,CaseFlags,Field,Subfield,AuthorName,AuthorPrename,AuthorInstitution,PatientData,PatientAge,CaseDescription,AdmissionDate,Time,Difficulty,CaseComment,CaseHyperlinks,Evaluation,vararray_count,NetID,ExtraData,CreationDate,LastModificationDate,AuthorData,Unused1,Unused2,Unused3,code_id, d.group_id
	FROM 		casus.data_items d, casus.cases c
	WHERE 		d.item_id = c.item_id;


--
-- CASES_VIEW2  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_VIEW2
(ITEM_ID, TYPE, NAME, DELETE_FLAG, USER_ID, 
 CASEFLAGS, FIELD, SUBFIELD, AUTHORNAME, AUTHORPRENAME, 
 AUTHORINSTITUTION, PATIENTDATA, PATIENTAGE, CASEDESCRIPTION, ADMISSIONDATE, 
 TIME, DIFFICULTY, CASECOMMENT, CASEHYPERLINKS, EVALUATION, 
 VARARRAY_COUNT, NETID, EXTRADATA, CREATIONDATE, LASTMODIFICATIONDATE, 
 AUTHORDATA, UNUSED1, UNUSED2, UNUSED3, CODE_ID)
AS 
SELECT		c.item_id,d.type,d.name,d.delete_flag,d.user_id,c.CaseFlags,Field,Subfield,AuthorName,AuthorPrename,AuthorInstitution,PatientData,PatientAge,CaseDescription,AdmissionDate,Time,Difficulty,CaseComment,CaseHyperlinks,Evaluation,vararray_count,NetID,ExtraData,CreationDate,LastModificationDate,AuthorData,Unused1,Unused2,Unused3,code_id
	FROM 		casus.cases c, casus.data_items d
	WHERE 		d.item_id = c.item_id;


--
-- CASES_VIEW3  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_VIEW3
(ITEM_ID, TYPE, NAME, DELETE_FLAG, USER_ID, 
 CASEFLAGS, FIELD, SUBFIELD, AUTHORNAME, AUTHORPRENAME, 
 AUTHORINSTITUTION, PATIENTDATA, PATIENTAGE, CASEDESCRIPTION, ADMISSIONDATE, 
 TIME, DIFFICULTY, CASECOMMENT, CASEHYPERLINKS, EVALUATION, 
 VARARRAY_COUNT, NETID, EXTRADATA, CREATIONDATE, LASTMODIFICATIONDATE, 
 AUTHORDATA, UNUSED1, UNUSED2, UNUSED3, CODE_ID)
AS 
SELECT		c.item_id,d.type,d.name,d.delete_flag,d.user_id,c.CaseFlags,Field,Subfield,AuthorName,AuthorPrename,AuthorInstitution,PatientData,PatientAge,CaseDescription,AdmissionDate,Time,Difficulty,CaseComment,CaseHyperlinks,Evaluation,vararray_count,NetID,ExtraData,CreationDate,LastModificationDate,AuthorData,Unused1,Unused2,Unused3,code_id
	FROM 		casus.cases c, casus.data_items d
	WHERE 		c.item_id = d.item_id
	and			d.item_id in (select item_id from casus.cases c2);


--
-- CASES_VIEW4  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_VIEW4
(ITEM_ID, TYPE, NAME, DELETE_FLAG, USER_ID, 
 CASEFLAGS, FIELD, SUBFIELD, AUTHORNAME, AUTHORPRENAME, 
 AUTHORINSTITUTION, PATIENTDATA, PATIENTAGE, CASEDESCRIPTION, ADMISSIONDATE, 
 TIME, DIFFICULTY, CASECOMMENT, CASEHYPERLINKS, EVALUATION, 
 VARARRAY_COUNT, NETID, EXTRADATA, CREATIONDATE, LASTMODIFICATIONDATE, 
 AUTHORDATA, UNUSED1, UNUSED2, UNUSED3, CODE_ID)
AS 
SELECT		c.item_id,d.type,d.name,d.delete_flag,d.user_id,c.CaseFlags,Field,Subfield,AuthorName,AuthorPrename,AuthorInstitution,PatientData,PatientAge,CaseDescription,AdmissionDate,Time,Difficulty,CaseComment,CaseHyperlinks,Evaluation,vararray_count,NetID,ExtraData,CreationDate,LastModificationDate,AuthorData,Unused1,Unused2,Unused3,code_id
	FROM 		casus.cases c, casus.data_items d
	WHERE 		c.item_id = d.item_id
	and			d.item_id in (select item_id from casus.cases c2)
WITH READ ONLY;


--
-- CHK_SWITCH_MAP  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CHK_SWITCH_MAP
(ACCOUNT, ORACLE_UID, C_USER_ID, C_GROUP_ID, ACTIVE, 
 ROLES_STR, LOGIN)
AS 
select SUBSTR(sm.ACCOUNT,3),sm.ORACLE_UID,sm.C_USER_ID,sm.C_GROUP_ID,sm.ACTIVE,sm.ROLES_STR,UPPER(cu.login) from SWITCH_NEWACCOUNTS_MAP sm,c_user cu where sm.C_USER_ID=cu.user_id;


--
-- COURSE_ACC_CUSER_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_ACC_CUSER_VIEW
(COURSE_ID, COURSE_NAME, START_DATE, END_DATE, GROUP_NR, 
 USER_LOGIN, USER_ID)
AS 
SELECT c.ID, c.NAME, c.start_date, c.end_date, -2, cu.login, cu.user_id
     FROM casus.c_user cu, casus.course c, casus.course_acc cacc
    WHERE cu.user_id = cacc.user_id AND c.ID = cacc.course_id AND c.TYPE <> 2
   UNION
   SELECT c.ID, c.NAME, c.start_date, c.end_date, -2, cu.login, cu.user_id
     FROM casus.c_user cu, casus.course c
    WHERE c.tutor = cu.user_id AND c.TYPE <> 2
   UNION
   SELECT c.ID, c.NAME, c.start_date, c.end_date, -2, cu.login, cu.user_id
     FROM casus.c_user cu, casus.course c, casus.c_user_roles cur
    WHERE c.tutor = cu.user_id
      AND cu.user_id = cur.user_id
      AND cur.user_role IN (3)
      AND c.TYPE <> 2;


--
-- COURSE_CASE_CHILD_VIEW_REF  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_CASE_CHILD_VIEW_REF
(COURSE_ID, CASE_ID, CHILD_TYPE, DISPLAY_CASE_ID, ORDER_NR, 
 NUM_OF_CARDS, CRITERIA_TYPE, TIME_THRESHOLD, CARD_THRESHOLD, SUCCESS_THRESHOLD, 
 STARTDATE, SUPPRESSFEEDBACK, ENDDATE, ANSWERALWAYSEDITABLE, PRICE, 
 PARENT_ID, RULESFORCOURSE, CREATION_DATE, MODIFICATION_DATE, SHOW_SUCCESS, 
 SHOW_IN_REPORTS, RESET_SESSION)
AS 
SELECT course_id,
          case_id,
          0,
          case_id,
          order_nr,
          num_of_cards,
          criteria_type,
          time_threshold,
          card_threshold,
          success_threshold,
          startdate,
          suppressfeedback,
          enddate,
          answeralwayseditable,
          price,
          parent_id,
          rulesforcourse,
          creation_date,
          modification_date,
             show_success,
             show_in_reports,
             reset_session
   FROM course_case_ref
   WHERE course_id > 0
   UNION
   SELECT ccr.course_id,
          c.org_case,
          1,
          ccr.case_id,
          ccr.order_nr,
          ccr.num_of_cards,
          ccr.criteria_type,
          ccr.time_threshold,
          ccr.card_threshold,
          ccr.success_threshold,
          ccr.startdate,
          ccr.suppressfeedback,
          ccr.enddate,
          ccr.answeralwayseditable,
          ccr.price,
          ccr.parent_id,
          ccr.rulesforcourse,
          ccr.creation_date,
          ccr.modification_date,
             ccr.show_success,
             ccr.show_in_reports,
             ccr.reset_session
   FROM course_case_ref ccr, cases c
   WHERE     c.org_case > 0
         AND c.child_type >= 1
         AND ccr.case_id = c.item_id
         AND ccr.course_id > 0;


--
-- COURSE_GROUP_TUTORS_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_GROUP_TUTORS_VIEW
(COURSE_ID, START_DATE, END_DATE, COURSE_NAME, GROUP_NR, 
 TUTOR_LOGIN, GROUP_NAME, ENABLED, TUTOR_ID)
AS 
SELECT cg.course_id "COURSE_ID",
          c.start_date,
          c.end_date,
          c.NAME "COURSE_NAME",
          cg.group_nr "GROUP_NR",
          cu.login "TUTOR_LOGIN",
          g.NAME "GROUP_NAME",
          cg.enabled "ENABLED",
          cu.user_id "TUTOR_ID"
     FROM casus.course_group_tutors cgt,
          casus.course_groups cg,
          casus.course c,
          casus.c_user cu,
          casus.c_group g
    WHERE     cgt.tutor_id = cu.user_id
          AND cgt.coursegroupid = cg.ID
          AND cg.course_id = c.ID
          AND g.GROUP_ID = cg.group_nr
          AND c.TYPE <> 2;


--
-- COURSE_GROUP_TUTORS_VIEW2  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_GROUP_TUTORS_VIEW2
(COURSE_ID, COURSE_NAME, START_DATE, END_DATE, GROUP_NR, 
 TUTOR_LOGIN, TUTOR_ID, ENABLED, GROUP_NAME, GROUP_TUTOR)
AS 
SELECT cg.course_id "COURSE_ID",
           c.name,
           c.start_date,
           c.end_date,
           cg.group_nr  "GROUP_NR",
           cu.login     "TUTOR_LOGIN",
           cu.user_id   "TUTOR_ID",
           cg.enabled   "ENABLED",
           gr.name      "GROUP_NAME",
           1            "GROUP_TUTOR"
      FROM casus.course_group_tutors  cgt,
           casus.course_groups        cg,
           casus.course               c,
           casus.c_user               cu,
           casus.c_group              gr
     WHERE     cgt.tutor_id = cu.user_id
           AND (   (    cgt.course_id = cg.course_id
                    AND cgt.group_nr = cg.group_nr)
                OR (cgt.coursegroupid = cg.id))
           AND cg.course_id = c.id
           AND cg.group_nr = gr.GROUP_ID(+)
    UNION
    SELECT course_id,
           course_name,
           start_date,
           end_date,
           group_nr,
           user_login,
           user_id,
           -1,
           '',
           0
      FROM casus.course_acc_cuser_view;


--
-- COURSE_USER_LOGIN_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_USER_LOGIN_VIEW
(COURSE_ID, LOGIN)
AS 
select csr.COURSE_ID,cu.LOGIN from casus.course_student_ref csr, casus.c_user cu
where csr.STUDENT_ID = cu.USER_ID;


--
-- COURSE_USERS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_USERS
(NR, NAME, ORDER_NR, KEY)
AS 
select distinct user_id,login,UPPER(cu.login),TO_CHAR(csr.course_id) from casus.c_user cu,casus.course_student_ref csr where cu.user_id=csr.student_id and user_id<>0;


--
-- C_USER_SHIBBOLETH  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.C_USER_SHIBBOLETH
(LOGIN, UNIQUE_ID, NAME, FIRSTNAME, DATE_OF_BIRTH, 
 GENDER, LANG, EMAIL, HOME_ORG, ORG_TYPE, 
 AFFILIATION, STAFF_CATEGORY, ORGDN, ORGUNITDN)
AS 
select
 login,
 concat(cu.user_id,'@casus.net'),
 name,
 firstname,
 date_of_birth,
 0,
 lang,
 email,
 concat('','casus.net'),
 concat('','others'),
 concat('','faculty'),
 200,
 concat('','o=casus, c=net'),
 concat('','ou=development, o=casus, c=net')
from casus.c_user cu,casus.c_user_roles cur where cu.user_id = cur.user_id and cu.group_id=0 and cur.USER_ROLE=4;


--
-- LMUDLE_USER_MAPPING  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.LMUDLE_USER_MAPPING
(TO_USER_ID, TO_USER_LOGIN, FROM_USER_ID, FROM_USER_LOGIN)
AS 
select cu.user_id,cu.login, cu2.user_id, lu.username from c_user cu,lmudle_user lu,c_user cu2 where cu.login in (
       select lower(email) from lmudle_user where username in (
            select login from c_user
        )
) and lower(cu.login) = lower(lu.email)    and lower(cu.login) <> lower(lu.username) and lower(lu.username) = lower(cu2.login);


--
-- LOG_DATA_ACCESS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.LOG_DATA_ACCESS
(COURSE_ID, LOGIN)
AS 
select 6,login from casus.c_user cu where user_id in (select distinct tutor_id from casus.course_group_tutors)
union 
select 6,login from casus.c_user cu where user_id in (select distinct tutor from casus.course)
union
select 6,login from casus.c_user cu where user_id in (select distinct user_id from casus.course_acc)
union
select csr.COURSE_ID,cu.LOGIN from casus.course_student_ref csr, casus.c_user cu
where csr.STUDENT_ID = cu.USER_ID;


--
-- MECUM_USER_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.MECUM_USER_VIEW
(EXT_LOGIN, EXT_PASSWORD, NAME, FIRSTNAME)
AS 
select ext_login, ext_password, name, firstname from casus.c_user where ext_type = 'mecum';


--
-- PEERGROUP_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.PEERGROUP_VIEW
(ANSWER_ID, CARD_ID, ITEM_DATE, ITEM_ID, ITEM_INDEX, 
 ITEM_NAME, ITEM_COUNT, ANSWER_COUNT)
AS 
SELECT cc.answerid,
          hd.card_id,
          hd.preprocess_date,
          hd.item_id,
          dat.item_index,
          dat.item_name,
          dat.item_count,
          0
   FROM casus.cards cc,
        casus.ua_peer_group_peer_header hd,
        casus.ua_peer_group_preprocessed dat
   WHERE cc.item_id = hd.card_id AND hd.item_id = dat.parent_id
   UNION
   SELECT cc.answerid,
          hd.card_id,
          hd.preprocess_date,
          hd.item_id,
          0,
          '',
          hd.answer_count,
          0
   FROM casus.cards cc, casus.ua_peer_group_peer_header hd
   WHERE cc.item_id = hd.card_id;


--
-- PEERGROUP_VIEW3  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.PEERGROUP_VIEW3
(PARENT_ID, ANSWER_ID, CARD_ID, ITEM_DATE, ITEM_INDEX, 
 ITEM_NAME, ANSWER_COUNT)
AS 
SELECT uar.parent_id,
          cc.answerid,
          uar.card_id,
          uar.modification_date,
          0,
          NULL,
          1
   FROM casus.cards cc, casus.useranswer_va_relational uar
   WHERE cc.item_id = uar.card_id
   UNION
   SELECT uar.parent_id,
          cc.answerid,
          uar.card_id,
          uar.modification_date,
          uar.index_nr,
          answer,
          1
   FROM casus.cards cc, casus.useranswer_va_relational uar
   WHERE cc.item_id = uar.card_id AND answer IS NOT NULL;


--
-- PLAYER_USERS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.PLAYER_USERS
(NR, NAME, ORDER_NR, KEY)
AS 
select cu.user_id,cu.login,UPPER(cu.login),'player' from casus.c_user cu;


--
-- STUDENT_SESSION_OVER_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.STUDENT_SESSION_OVER_VIEW
(COURSE_ID, COURSE_NAME, COURSE_GROUP_NR, COURSE_GROUP_NAME, USER_ID, 
 USER_LOGIN, USER_NAME, USER_FIRSTNAME)
AS 
select csr.course_id,cc.name,csr.group_nr,cg.name, cu.USER_ID, cu.login, cu.name, cu.firstname 
from casus.course_student_ref csr, casus.COURSE_GROUPS cg, casus.course cc, casus.c_user cu  
where  (csr.course_id=cg.course_id(+)
and  csr.GROUP_NR=cg.GROUP_NR(+))
and csr.course_id=cc.id
and csr.student_id=cu.user_id;


--
-- TUTOR_STUDENT_ACCESS_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.TUTOR_STUDENT_ACCESS_VIEW
(USER_ID, TUTOR_LOGIN)
AS 
select distinct csr.student_id,cgtv.TUTOR_LOGIN from casus.course_student_ref csr, COURSE_GROUP_TUTORS_VIEW cgtv where  csr.course_id=cgtv.course_id and csr.GROUP_NR= cgtv.GROUP_NR
union
select distinct csr.student_id,cacv.USER_LOGIN from casus.course_student_ref csr,COURSE_ACC_CUSER_VIEW cacv where csr.course_id = cacv.COURSE_ID;


--
-- TUTOR_STUDENT_ACCESS2_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.TUTOR_STUDENT_ACCESS2_VIEW
(USER_ID, TUTOR_LOGIN)
AS 
select distinct csr.student_id,cgtv.TUTOR_LOGIN from casus.course_student_ref csr, COURSE_GROUP_TUTORS_VIEW cgtv where  csr.course_id=cgtv.course_id and csr.GROUP_NR= cgtv.GROUP_NR
union
select distinct csr.student_id,cacv.USER_LOGIN from casus.course_student_ref csr,COURSE_ACC_CUSER_VIEW cacv where csr.course_id = cacv.COURSE_ID;


--
-- ARBMED_VHB_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.ARBMED_VHB_TRIGGER
BEFORE INSERT
ON CASUS.COURSE_STUDENT_REF
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
DISABLE
DECLARE
tmpRegCount1 NUMBER;
BEGIN
  if :NEW.COURSE_ID = 30625 then
   dbms_output.put('NEW COURSE_ID:');
   dbms_output.put_line(:NEW.COURSE_ID);
   select count(*)  INTO tmpRegCount1 from CASUS.C_USER where user_ID = :NEW.STUDENT_ID and Lower(login) like '%x8'; 
  if tmpRegCount1 > 0  then
     dbms_output.put('CHANGE TO COURSE_ID:');
      dbms_output.put_line(30797);
     :NEW.COURSE_ID := 30797;
  end if;
  end if;
END;
/


--
-- CASUS_INS_CREATIONDATE_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.CASUS_INS_CREATIONDATE_TRIGGER
BEFORE INSERT
ON CASUS.C_USER 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
     :new.creation_date := SYSDATE;
END SYSDATE_TRIG;
/


--
-- C_USER_EXTERNAL_USERS  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.C_USER_EXTERNAL_USERS
BEFORE UPDATE
ON CASUS.C_USER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpCount NUMBER;
BEGIN
   IF :NEW.login like '%&%' OR :NEW.login like '%###%' THEN
	 :NEW.EXTERNAL := 1;
   END IF;
END ;
/


--
-- C_USER_EXTERNAL_USERS_INSERT  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.C_USER_EXTERNAL_USERS_INSERT
BEFORE INSERT
ON CASUS.C_USER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpCount NUMBER;
BEGIN
   IF :NEW.login like '%&%' OR :NEW.login like '%###%' THEN
	 :NEW.EXTERNAL := 1;
   END IF;
END ;
/


--
-- CUSER_SET_GROUP_BY_LOGIN  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.CUSER_SET_GROUP_BY_LOGIN
BEFORE INSERT
ON CASUS.C_USER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
	IF :NEW.LOGIN like 'ml04&%' THEN
	 	:NEW.GROUP_ID := 18;
	END IF;
END ;
/


--
-- CUSER_SET_GROUP_BY_LOGIN_UD  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.CUSER_SET_GROUP_BY_LOGIN_UD
BEFORE UPDATE
ON CASUS.C_USER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
	IF :NEW.LOGIN like 'ml04&%' THEN
	 	:NEW.GROUP_ID := 18;
	END IF;
END ;
/


--
-- CUSER_UPDATE_NAMES_AND_GROUP  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.CUSER_UPDATE_NAMES_AND_GROUP
BEFORE UPDATE
ON CASUS.C_USER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DISABLE
DECLARE
tmpCount NUMBER;
tmpID NUMBER;
tmpStr CHAR(50);
tmpStr2 CHAR(50);
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        29.09.2003             1. Created this trigger.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:
      Sysdate:         29.09.2003
      Date and Time:   29.09.2003, 11:15:53, and 29.09.2003 11:15:53
      Username:         (set in TOAD Options, Proc Templates)
      Table Name:       (set in the "New PL/SQL Object" dialog)
      Trigger Options:  (set in the "New PL/SQL Object" dialog)
******************************************************************************/
BEGIN
	 tmpStr :=  :NEW.NAME;
   select count(C_USER_ID )  INTO tmpCount from CASUS.SWITCH_NEWACCOUNTS_MAP where C_USER_ID=:NEW.USER_ID;
   IF tmpCount>0 THEN
   	  select C_GROUP_ID INTO tmpID from CASUS.SWITCH_NEWACCOUNTS_MAP where C_USER_ID=:NEW.USER_ID;
	 :NEW.GROUP_ID := tmpID;
   END IF;

   select count(NAME )  INTO tmpCount from CASUS.SWITCH_NEWNAMES_MAP where C_USER_ID=:NEW.USER_ID;
   IF tmpCount>0 THEN
   	  select NAME INTO tmpStr2 from CASUS.SWITCH_NEWNAMES_MAP where C_USER_ID=:NEW.USER_ID;
	 :NEW.NAME := tmpStr2;
   END IF;

   select count(FIRSTNAME )  INTO tmpCount from CASUS.SWITCH_NEWNAMES_MAP where C_USER_ID=:NEW.USER_ID;
   IF tmpCount>0 THEN
   	  select FIRSTNAME INTO tmpStr2 from CASUS.SWITCH_NEWNAMES_MAP where C_USER_ID=:NEW.USER_ID;
	 :NEW.FIRSTNAME := tmpStr2;
   END IF;
END ;
/


--
-- DELETE_C_USER_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.DELETE_C_USER_CHG BEFORE DELETE ON "CASUS"."C_USER" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
insert into casus.c_user_chg (chg_type,USER_ID,LOGIN,PASSWORD,NAME,FIRSTNAME,TITLE,DATE_OF_BIRTH,
	SEX,STATUS,EDUCATION,MATR_NUM,LANG,EMAIL,IS_AUTHOR,IS_REVIEWER,PERSONAL_COURSE_ID,
	LOCKED,GROUP_ID,ADD_ROLE,EXTERNAL,EFN,ARZTNUMMER,DATATRANSFER_OK,LEGITIMATION,
	STREET,CITY,STREETNUMBER,LAEK_NUMMER,TYPE,GENDER,SELFREGISTER,IS_EXAM,
	SUBGROUP_ID,AGB_ACCEPTED,COUNTRY,ZIPCODE,EXT_LOGIN,EXT_PASSWORD,PROFILEEDITABLE,
	INVITED,PWD_ENCODING,NICKNAME,EMAIL_OPTION,PWD_CHANGE,SHOWME,COUNTRY2) values 
  (-1,:old.USER_ID,:old.LOGIN,:old.PASSWORD,:old.NAME,:old.FIRSTNAME,:old.TITLE,:old.DATE_OF_BIRTH,
  :old.SEX,:old.STATUS,:old.EDUCATION,:old.MATR_NUM,:old.LANG,:old.EMAIL,:old.IS_AUTHOR,:old.IS_REVIEWER,:old.PERSONAL_COURSE_ID,
  :old.LOCKED,:old.GROUP_ID,:old.ADD_ROLE,:old.EXTERNAL,:old.EFN,:old.ARZTNUMMER,:old.DATATRANSFER_OK,:old.LEGITIMATION,
  :old.STREET,:old.CITY,:old.STREETNUMBER,:old.LAEK_NUMMER,:old.TYPE,:old.GENDER,:old.SELFREGISTER,:old.IS_EXAM,
  :old.SUBGROUP_ID,:old.AGB_ACCEPTED,:old.COUNTRY,:old.ZIPCODE,:old.EXT_LOGIN,:old.EXT_PASSWORD,:old.PROFILEEDITABLE,
  :old.INVITED,:old.PWD_ENCODING,:old.NICKNAME,:old.EMAIL_OPTION,:old.PWD_CHANGE,:old.SHOWME,:old.COUNTRY2);
END;
/


--
-- INSERT_C_USER_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.INSERT_C_USER_CHG AFTER INSERT ON "CASUS"."C_USER" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
DISABLE
BEGIN
insert into casus.c_user_chg (chg_type,USER_ID,LOGIN,PASSWORD,NAME,FIRSTNAME,TITLE,DATE_OF_BIRTH,
    SEX,STATUS,EDUCATION,MATR_NUM,LANG,EMAIL,IS_AUTHOR,IS_REVIEWER,PERSONAL_COURSE_ID,
    LOCKED,GROUP_ID,ADD_ROLE,EXTERNAL,EFN,ARZTNUMMER,DATATRANSFER_OK,LEGITIMATION,
    STREET,CITY,STREETNUMBER,LAEK_NUMMER,TYPE,GENDER,SELFREGISTER,IS_EXAM,
    SUBGROUP_ID,AGB_ACCEPTED,COUNTRY,ZIPCODE,EXT_LOGIN,EXT_PASSWORD,PROFILEEDITABLE,
    INVITED,PWD_ENCODING,NICKNAME,EMAIL_OPTION,PWD_CHANGE,SHOWME,COUNTRY2) values 
  (1,:new.USER_ID,:new.LOGIN,:new.PASSWORD,:new.NAME,:new.FIRSTNAME,:new.TITLE,:new.DATE_OF_BIRTH,
  :new.SEX,:new.STATUS,:new.EDUCATION,:new.MATR_NUM,:new.LANG,:new.EMAIL,:new.IS_AUTHOR,:new.IS_REVIEWER,:new.PERSONAL_COURSE_ID,
  :new.LOCKED,:new.GROUP_ID,:new.ADD_ROLE,:new.EXTERNAL,:new.EFN,:new.ARZTNUMMER,:new.DATATRANSFER_OK,:new.LEGITIMATION,
  :new.STREET,:new.CITY,:new.STREETNUMBER,:new.LAEK_NUMMER,:new.TYPE,:new.GENDER,:new.SELFREGISTER,:new.IS_EXAM,
  :new.SUBGROUP_ID,:new.AGB_ACCEPTED,:new.COUNTRY,:new.ZIPCODE,:new.EXT_LOGIN,:new.EXT_PASSWORD,:new.PROFILEEDITABLE,
  :new.INVITED,:new.PWD_ENCODING,:new.NICKNAME,:new.EMAIL_OPTION,:new.PWD_CHANGE,:new.SHOWME,:new.COUNTRY2);
END;
/


--
-- NEURO_VHB_KLIFO_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.NEURO_VHB_KLIFO_TRIGGER
BEFORE INSERT
ON CASUS.COURSE_STUDENT_REF REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
DISABLE
DECLARE
tmpRegCount1 NUMBER;
BEGIN
  if :NEW.COURSE_ID = 30713 then
   dbms_output.put('NEW COURSE_ID:');
   dbms_output.put_line(:NEW.COURSE_ID);
   select count(*)  INTO tmpRegCount1 from CASUS.C_USER where user_ID = :NEW.STUDENT_ID and Lower(login) like '%x8'; 
  if tmpRegCount1 > 0  then
     dbms_output.put('CHANGE TO COURSE_ID:');
      dbms_output.put_line(30799);
     :NEW.COURSE_ID := 30799;
     
     insert into CASUS.COURSE_STUDENT_REF (course_id, student_id) values (30712, :new.student_id);
  end if;
  
  
  end if;
  
  if :NEW.COURSE_ID = 30710 or :NEW.COURSE_ID = 30711 then
   dbms_output.put('NEW COURSE_ID:');
   dbms_output.put_line(:NEW.COURSE_ID);
   select count(*)  INTO tmpRegCount1 from CASUS.C_USER where user_ID = :NEW.STUDENT_ID and Lower(login) like '%x8'; 
  if tmpRegCount1 > 0  then
     insert into CASUS.COURSE_STUDENT_REF (course_id, student_id) values (26145, :new.student_id);
  end if;
  
  
  end if;
END;
/


--
-- PICTUREHL_ARROW_INSERT  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.PICTUREHL_ARROW_INSERT
BEFORE INSERT
ON CASUS.PICTUREHL_ARROW REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpID NUMBER;
BEGIN 
   IF (:new.internal_id = 0) THEN
      select internal_id INTO tmpID from casus.PICTUREHLLIST where parent_id=:new.parent_id and order_nr=:new.order_nr;
   :new.internal_id := tmpID;
   END IF;
END;
/


--
-- PICTUREHL_ICON_INSERT  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.PICTUREHL_ICON_INSERT
BEFORE INSERT
ON CASUS.PICTUREHL_ICON REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpID NUMBER;
tmpORDERNR NUMBER;
BEGIN 
   IF (:new.internal_id = 0) THEN
      select internal_id INTO tmpID from casus.PICTUREHLLIST where parent_id=:new.parent_id and order_nr=:new.order_nr;
   :new.internal_id := tmpID;
  ELSE
   begin
      select parent_id,max(ORDER_NR) into tmpID, tmpORDERNR from casus.PICTUREHLLIST where internal_id=:new.internal_id group by parent_id; 
     EXCEPTION
   WHEN NO_DATA_FOUND THEN tmpORDERNR := 0;
    END;
   :new.parent_id := tmpID;
   :new.order_nr := tmpORDERNR;
   END IF;
END;
/


--
-- UMED_VHB_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UMED_VHB_TRIGGER
BEFORE INSERT
ON CASUS.COURSE_STUDENT_REF
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
DISABLE
DECLARE
tmpRegCount1 NUMBER;
BEGIN
  if :NEW.COURSE_ID = 29752 then
   dbms_output.put('NEW COURSE_ID:');
   dbms_output.put_line(:NEW.COURSE_ID);
   select count(*)  INTO tmpRegCount1 from CASUS.C_USER where user_ID = :NEW.STUDENT_ID and Lower(login) like '%x8'; 
  if tmpRegCount1 > 0  then
     dbms_output.put('CHANGE TO COURSE_ID:');
      dbms_output.put_line(30798);
     :NEW.COURSE_ID := 30798;
  end if;
  end if;
END;
/


--
-- UPDATE_CARD_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_CARD_CHG AFTER UPDATE OF INFOID,QUESTIONID,ANSWERID,MMID,EXPERTID ON "CASUS"."CARDS" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
INSERT INTO casus.card_chg (ITEM_ID,INFO_ID,QUESTION_ID,ANSWER_ID,MM_ID,EXPERT_ID) VALUES (:old.ITEM_ID, :old.INFOID, :old.QUESTIONID, :old.ANSWERID, :old.MMID, :old.EXPERTID);
END;
/


--
-- UPDATE_C_USER_CHG  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.UPDATE_C_USER_CHG BEFORE UPDATE ON "CASUS"."C_USER" REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
insert into casus.c_user_chg (chg_type,USER_ID,LOGIN,PASSWORD,NAME,FIRSTNAME,TITLE,DATE_OF_BIRTH,
	SEX,STATUS,EDUCATION,MATR_NUM,LANG,EMAIL,IS_AUTHOR,IS_REVIEWER,PERSONAL_COURSE_ID,
	LOCKED,GROUP_ID,ADD_ROLE,EXTERNAL,EFN,ARZTNUMMER,DATATRANSFER_OK,LEGITIMATION,
	STREET,CITY,STREETNUMBER,LAEK_NUMMER,TYPE,GENDER,SELFREGISTER,IS_EXAM,
	SUBGROUP_ID,AGB_ACCEPTED,COUNTRY,ZIPCODE,EXT_LOGIN,EXT_PASSWORD,PROFILEEDITABLE,
	INVITED,PWD_ENCODING,NICKNAME,EMAIL_OPTION,PWD_CHANGE,SHOWME,COUNTRY2) values 
  (2,:old.USER_ID,:old.LOGIN,:old.PASSWORD,:old.NAME,:old.FIRSTNAME,:old.TITLE,:old.DATE_OF_BIRTH,
  :old.SEX,:old.STATUS,:old.EDUCATION,:old.MATR_NUM,:old.LANG,:old.EMAIL,:old.IS_AUTHOR,:old.IS_REVIEWER,:old.PERSONAL_COURSE_ID,
  :old.LOCKED,:old.GROUP_ID,:old.ADD_ROLE,:old.EXTERNAL,:old.EFN,:old.ARZTNUMMER,:old.DATATRANSFER_OK,:old.LEGITIMATION,
  :old.STREET,:old.CITY,:old.STREETNUMBER,:old.LAEK_NUMMER,:old.TYPE,:old.GENDER,:old.SELFREGISTER,:old.IS_EXAM,
  :old.SUBGROUP_ID,:old.AGB_ACCEPTED,:old.COUNTRY,:old.ZIPCODE,:old.EXT_LOGIN,:old.EXT_PASSWORD,:old.PROFILEEDITABLE,
  :old.INVITED,:old.PWD_ENCODING,:old.NICKNAME,:old.EMAIL_OPTION,:old.PWD_CHANGE,:old.SHOWME,:old.COUNTRY2);
END;
/


--
-- C_SESSION  (Table) 
--
CREATE TABLE CASUS.C_SESSION
(
  SESSION_ID               NUMBER               NOT NULL,
  GROUP_ID                 INTEGER              DEFAULT -1,
  USER_ID                  NUMBER,
  START_DATE               DATE                 DEFAULT NULL,
  CASE_ID                  NUMBER,
  LAST_ANSWERED_CARD_ID    NUMBER,
  VARARRAY_COUNT           NUMBER,
  NETWORK_ID               NUMBER,
  END_OF_CASE              NUMBER(1)            DEFAULT 0,
  HOST                     VARCHAR2(100 BYTE),
  CLIENT                   VARCHAR2(100 BYTE),
  VERSION                  VARCHAR2(100 BYTE),
  NETINFO_ID               NUMBER               DEFAULT 0,
  FREETEXT_SUGGEST         VARCHAR2(255 BYTE),
  C_ID                     NUMBER(10)           DEFAULT -1,
  DB_ID                    NUMBER(10)           DEFAULT 0,
  PMWNET_ID                NUMBER               DEFAULT 0,
  COURSE_ID                NUMBER               DEFAULT -1,
  CREATION_DATE            DATE                 DEFAULT SYSDATE,
  MODIFICATION_DATE        DATE                 DEFAULT SYSDATE,
  ENDOFSESSION_DATE        DATE,
  OWN_COMMENT              NUMBER               DEFAULT 0,
  OWN_COMMENT_CARD_ID      NUMBER               DEFAULT -1,
  TUTOR_COMMENT            NUMBER               DEFAULT 0,
  TUTOR_COMMENT_CARD_ID    NUMBER               DEFAULT -1,
  TUTOR_QUESTION_ANSWERED  DATE,
  RULE                     NUMBER               DEFAULT -1,
  ENG_SCORE                NUMBER               DEFAULT -1,
  ENG_SCORE_DETAILS        VARCHAR2(250 BYTE),
  SCORE                    NUMBER               DEFAULT -1,
  TIME                     NUMBER               DEFAULT -1,
  ORG_SESSION_ID           NUMBER,
  ORG_SCORE                NUMBER,
  MOD_YEAR                 NUMBER,
  MOD_MONTH                NUMBER,
  MOD_WEEK                 NUMBER,
  MOD_DAY                  NUMBER,
  MOD_DAYOFMONTH           NUMBER,
  MOD_DAYOFWEEK            NUMBER,
  MOD_HOUR                 NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- USERANSWER_VA  (Table) 
--
CREATE TABLE CASUS.USERANSWER_VA
(
  PARENT_ID            NUMBER                   NOT NULL,
  ORDER_NR             NUMBER                   DEFAULT 0,
  CARD_ID              NUMBER                   NOT NULL,
  ANSWER               VARCHAR2(4000 BYTE),
  SUCCESS              NUMBER                   DEFAULT -1,
  HANDLING_TIME        NUMBER                   DEFAULT 0,
  COMMENTREAD_COUNT    NUMBER                   DEFAULT 0,
  COMMENTREAD_TIME     NUMBER                   DEFAULT 0,
  FT_DETAILS           VARCHAR2(4000 BYTE),
  MODIFICATION_DATE    DATE                     DEFAULT SYSDATE,
  CREATION_DATE        DATE                     DEFAULT SYSDATE,
  ANSWERTYPE           VARCHAR2(4 BYTE)         DEFAULT 'NOAD',
  HASBEENRATED         NUMBER(1)                DEFAULT 0,
  CREATION_DATE_EXT    DATE                     DEFAULT NULL,
  HL_CLICKED_NUM       NUMBER                   DEFAULT 0,
  EXPERT_CLICKED_NUM   NUMBER                   DEFAULT 0,
  MAGNIFY_CLICKED_NUM  NUMBER                   DEFAULT 0,
  HL_NUMS              VARCHAR2(100 BYTE),
  ORG_CARD_ID          NUMBER,
  CONFIDENCE           NUMBER,
  PLUGIN_STORE         CLOB
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CASUS.USERANSWER_VA.CONFIDENCE IS 'can be  null, hibernate as Integer object!';


--
-- CS_CASEUSER_IDX  (Index) 
--
CREATE INDEX CASUS.CS_CASEUSER_IDX ON CASUS.C_SESSION
(CASE_ID, USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_CASEID_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_CASEID_IDX ON CASUS.C_SESSION
(CASE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_C_ID_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_C_ID_IDX ON CASUS.C_SESSION
(C_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_COURSE_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_COURSE_IDX ON CASUS.C_SESSION
(COURSE_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_ENG_SCORE_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_ENG_SCORE_IDX ON CASUS.C_SESSION
(ENG_SCORE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_ENG_TIME_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_ENG_TIME_IDX ON CASUS.C_SESSION
(TIME)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_ID_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_ID_IDX ON CASUS.C_SESSION
(SESSION_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_LASTCARDID_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_LASTCARDID_IDX ON CASUS.C_SESSION
(LAST_ANSWERED_CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_MOD_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_MOD_IDX ON CASUS.C_SESSION
(MODIFICATION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_PMWNET_ID_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_PMWNET_ID_IDX ON CASUS.C_SESSION
(PMWNET_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_RULE_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_RULE_IDX ON CASUS.C_SESSION
(RULE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_SCORE_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_SCORE_IDX ON CASUS.C_SESSION
(SCORE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_STARTDATE_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_STARTDATE_IDX ON CASUS.C_SESSION
(START_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_TUTORANS_TS_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_TUTORANS_TS_IDX ON CASUS.C_SESSION
(TUTOR_QUESTION_ANSWERED)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- C_SESSION_USERID_IDX  (Index) 
--
CREATE INDEX CASUS.C_SESSION_USERID_IDX ON CASUS.C_SESSION
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CS_REPORTS_IDX  (Index) 
--
CREATE INDEX CASUS.CS_REPORTS_IDX ON CASUS.C_SESSION
(CASE_ID, USER_ID, MODIFICATION_DATE, END_OF_CASE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          100M
            NEXT             25M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CS_REPORTS2_IDX  (Index) 
--
CREATE INDEX CASUS.CS_REPORTS2_IDX ON CASUS.C_SESSION
(USER_ID, CASE_ID, TUTOR_QUESTION_ANSWERED)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          100M
            NEXT             25M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CS_TIME1_IDX  (Index) 
--
CREATE INDEX CASUS.CS_TIME1_IDX ON CASUS.C_SESSION
(MOD_YEAR, MOD_MONTH, MOD_WEEK)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          100M
            NEXT             25M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UAVA_ATYPE_IDX  (Index) 
--
CREATE INDEX CASUS.UAVA_ATYPE_IDX ON CASUS.USERANSWER_VA
(ANSWERTYPE)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UAVA_CARDID_IDX  (Index) 
--
CREATE INDEX CASUS.UAVA_CARDID_IDX ON CASUS.USERANSWER_VA
(CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UAVA_CREATION_IDX  (Index) 
--
CREATE INDEX CASUS.UAVA_CREATION_IDX ON CASUS.USERANSWER_VA
(CREATION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UAVA_HANDLINGTIME_IDX  (Index) 
--
CREATE INDEX CASUS.UAVA_HANDLINGTIME_IDX ON CASUS.USERANSWER_VA
(HANDLING_TIME)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UAVA_HASBEENRATED_IDX  (Index) 
--
CREATE INDEX CASUS.UAVA_HASBEENRATED_IDX ON CASUS.USERANSWER_VA
(HASBEENRATED)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UAVA_MODIFICATION_IDX  (Index) 
--
CREATE INDEX CASUS.UAVA_MODIFICATION_IDX ON CASUS.USERANSWER_VA
(MODIFICATION_DATE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UAVA_PARENTID_IDX  (Index) 
--
CREATE INDEX CASUS.UAVA_PARENTID_IDX ON CASUS.USERANSWER_VA
(PARENT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- UAVA_SUCCESS_IDX  (Index) 
--
CREATE INDEX CASUS.UAVA_SUCCESS_IDX ON CASUS.USERANSWER_VA
(SUCCESS)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USERANSWER_VA_HLC_IDX  (Index) 
--
CREATE INDEX CASUS.USERANSWER_VA_HLC_IDX ON CASUS.USERANSWER_VA
(HL_CLICKED_NUM)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- USERANSWER_VA_PK  (Index) 
--
CREATE UNIQUE INDEX CASUS.USERANSWER_VA_PK ON CASUS.USERANSWER_VA
(PARENT_ID, CARD_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- DO_RE_EMAIL_REGISTRATION  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.do_re_email_registration is
myID   Number;
myCount   Number;
CURSOR MyCursor IS
    select distinct cu.student_id from casus.course_student_ref cu
    where cu.course_id=2;
BEGIN
--dbms_output.put_line('do_re_email_registration');

 FOR c1_rec IN MyCursor LOOP
  myID := c1_rec.student_id;
  dbms_output.put('myID=');
  dbms_output.put_line(myID);
   
  email_registration(210, myID, 0); 
 END LOOP;
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount := 0;
   
   
--dbms_output.put_line('do_re_email_registration');
END;
/


--
-- INITNEWCSESSION  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.initNewCSession(newitemid NUMBER) is
tmpSessionID   NUMBER;
tmpSuccess NUMBER;
tmpTime NUMBER;
tmpCards NUMBER;
tmpModDate DATE;

BEGIN
     tmpSessionID := newitemid;
     tmpSuccess := 0;
     tmpTime := 0;
     tmpCards := 0;

     BEGIN
         SELECT AVG_SUCCESS,SUM_TIME,CARDS,SESSION_MODIFICATION_DATE INTO tmpSuccess,tmpTime,tmpCards,tmpModDate FROM casus.c_session_avg_success WHERE session_id = tmpSessionID and rownum = 1;
          UPDATE C_SESSION SET score = tmpSuccess, time = tmpTime, vararray_count = tmpCards where session_id = tmpSessionID;
          UPDATE C_SESSION SET MODIFICATION_DATE = tmpModDate where session_id = tmpSessionID;
     EXCEPTION
              WHEN NO_DATA_FOUND THEN tmpSuccess := 0;
     END;
END;
/


--
-- INIT_SESSION_UA_DATES  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.INIT_SESSION_UA_DATES(newitemid NUMBER) is
tmpStartDate DATE;
BEGIN
	 BEGIN
	 	 	  tmpStartDate := NULL;
	 	 	  SELECT cs.start_date INTO tmpStartDate FROM casus.c_session cs WHERE cs.session_id=newitemid;
	 	 	  UPDATE casus.useranswer_va uava SET creation_date = tmpStartDate,modification_date = tmpStartDate WHERE parent_id = newitemid;
	 EXCEPTION
	 	 		  WHEN NO_DATA_FOUND THEN
	 			  	   tmpStartDate := NULL;
	 END;
END;

/


--
-- INIT_SESSION_UA_DATES2  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.INIT_SESSION_UA_DATES2(newitemid NUMBER) is
tmpStartDate DATE;
tmpCreationDate DATE;
BEGIN
	 BEGIN
	 	 	  tmpStartDate := NULL;
	 	 	  SELECT max(cs.timestamp) INTO tmpStartDate FROM casus.c_session_action cs WHERE cs.action=1 and cs.session_id=newitemid;
			  SELECT min(cs.timestamp) INTO tmpCreationDate FROM casus.c_session_action cs WHERE cs.action=1 and cs.session_id=newitemid;
			  dbms_output.put('newitemid=');
     		  dbms_output.put(newitemid);
			  dbms_output.put('; tmpCreationDate=');
			  dbms_output.put(tmpCreationDate);
			  dbms_output.put('; tmpStartDate=');
     		  dbms_output.put_line(tmpStartDate);
			  UPDATE casus.useranswer_va uava SET creation_date = tmpStartDate,modification_date = tmpStartDate WHERE parent_id = newitemid;
	 	 	  UPDATE casus.c_session cs SET start_date = tmpStartDate,modification_date = tmpStartDate,creation_date = tmpCreationDate WHERE session_id = newitemid;
	 EXCEPTION
	 	 		  WHEN NO_DATA_FOUND THEN
	 			  	   tmpStartDate := NULL;
	 END;
END;

/


--
-- INIT_WRONG_SESSION_DATES  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.INIT_WRONG_SESSION_DATES(newitemid NUMBER) is
tmpModDate DATE;
BEGIN
     BEGIN
                tmpModDate := NULL;
                SELECT max( ua.modification_date) INTO tmpModDate FROM casus.useranswer_va ua WHERE ua.parent_id=newitemid;
                UPDATE casus.c_session cs SET modification_date = tmpModDate WHERE session_id = newitemid;
                UPDATE casus.c_session_avg_success cs SET session_modification_date = tmpModDate WHERE session_id = newitemid;
     EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                          tmpModDate := NULL;
     END;
END; 
/


--
-- INIT_WRONG_SESSION_DATES_BATCH  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.INIT_WRONG_SESSION_DATES_BATCH(mymin NUMBER,mymax NUMBER) is
myCount   Number;
CURSOR MyCursor(PARAM1 NUMBER,PARAM2 NUMBER) IS
       SELECT csa.session_id
       FROM casus.c_session csa
       WHERE csa.session_id>=PARAM1 AND csa.session_id<PARAM2 and csa.modification_date < sysdate-10;
BEGIN
myCount := 0;

if myMin < myMax then
    FOR c1_rec IN MyCursor(mymin,mymax) LOOP
          CASUS.INIT_WRONG_SESSION_DATES(c1_rec.session_id);
          myCount := myCount + 1;

          if (mod( myCount, 100 ) = 0) then
              my_java_sleep(1000);
              commit;
          end if;
    END LOOP;
END IF;
EXCEPTION
         WHEN NO_DATA_FOUND THEN myCount := 0;
END; 
/


--
-- INIT_WRONG_SESSION_DATES_BAT2  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.INIT_WRONG_SESSION_DATES_BAT2(courseid NUMBER) is
myCount   Number;
CURSOR MyCursor(PARAM1 NUMBER) IS
       SELECT csa.session_id
       FROM casus.c_session csa
       WHERE csa.user_id in (select student_id from course_student_ref where course_id = PARAM1) and csa.case_id in (select case_id from course_case_ref where course_id = PARAM1);
BEGIN
myCount := 0;

    FOR c1_rec IN MyCursor(courseid) LOOP
          CASUS.INIT_WRONG_SESSION_DATES(c1_rec.session_id);
          myCount := myCount + 1;

          if (mod( myCount, 100 ) = 0) then
              my_java_sleep(1000);
          end if;
    END LOOP;
EXCEPTION
         WHEN NO_DATA_FOUND THEN myCount := 0;
END; 
/


--
-- IOU_C_SESSION  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.iou_c_session(in_session_id NUMBER, in_user_id NUMBER,in_case_id NUMBER,in_date Date,in_lpc_id NUMBER, in_END_OF_CASE NUMBER, in_course_id NUMBER) is
my_session_id Number;
my_eoc Number;
my_date Date;
BEGIN
dbms_output.put('iou_c_session start (');
dbms_output.put(in_session_id );
dbms_output.put(',');
dbms_output.put(in_user_id);
dbms_output.put(',');
dbms_output.put(in_case_id);
dbms_output.put_line(')');

BEGIN
my_session_id := in_session_id;
dbms_output.put('select session_id from CASUS.C_SESSION where session_id = in_session_id or (user_id = in_user_id and case_id = in_case_id);');
    dbms_output.put(my_session_id);
    dbms_output.put_line('!');
select session_id,END_OF_CASE INTO my_session_id,my_eoc from CASUS.C_SESSION where session_id = in_session_id or (user_id = in_user_id and case_id = in_case_id);
EXCEPTION
   WHEN NO_DATA_FOUND THEN my_session_id := -1;
END;

dbms_output.put('iou_c_session: my_session_id=');
dbms_output.put(my_session_id);
dbms_output.put_line('!');

my_date := in_date;
if my_date = null then
    my_date := SYSDATE;
  end if;  
 
if my_session_id<= 0 then
    select casus.hl_id_seq.nextval INTO my_session_id from sys.dual;
    
INSERT INTO CASUS.C_SESSION (
   SESSION_ID, GROUP_ID, USER_ID, 
   START_DATE, CASE_ID, LAST_ANSWERED_CARD_ID, 
   VARARRAY_COUNT, NETWORK_ID, END_OF_CASE, 
   HOST, CLIENT, VERSION, 
   NETINFO_ID, FREETEXT_SUGGEST, C_ID, 
   DB_ID, PMWNET_ID, COURSE_ID) 
VALUES (my_session_id , 750, in_user_id,
   my_date, in_case_id,in_lpc_id ,
    -1, -1, 0,
    '', '', '',
    -1, '', -1,
    -1, 0, in_course_id);
else
    if in_END_OF_CASE = 1 then
        my_eoc := 1;
       end if;
    update CASUS.C_SESSION set LAST_ANSWERED_CARD_ID=in_lpc_id, END_OF_CASE = my_eoc where session_id = my_session_id;
end if;

END; 
/


--
-- IOU_UA1  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.iou_ua1(in_session_id NUMBER, in_user_id NUMBER,in_case_id NUMBER,in_card_id NUMBER, in_answer VARCHAR2, in_sec Number, in_answertype VARCHAR2) is
my_session_id Number;
my_ua_count Number;
BEGIN
dbms_output.put('iou_ua1 start (');
dbms_output.put_line(')');

begin
my_session_id := in_session_id;
        BEGIN
            select session_id INTO my_session_id from CASUS.C_SESSION where session_id = in_session_id or (user_id = in_user_id and case_id = in_case_id);
        EXCEPTION
            WHEN NO_DATA_FOUND THEN my_session_id := -1;
        END;

if my_session_id<= 0 then
    dbms_output.put('ERROR iou_ua1: ');
    dbms_output.put(in_user_id);
    dbms_output.put(',');
    dbms_output.put(in_case_id);
    dbms_output.put_line('!');
else
    BEGIN
        select count(*) INTO my_ua_count from CASUS.USERANSWER_VA where parent_id = my_session_id and card_id = in_card_id;
    EXCEPTION
       WHEN NO_DATA_FOUND THEN my_ua_count := -1;
    END;
    
    if my_ua_count<= 0 then
    dbms_output.put('iou_ua1: my_session_id=');
    dbms_output.put(my_session_id);
    dbms_output.put_line('!');
        INSERT INTO CASUS.USERANSWER_VA (
            PARENT_ID, ORDER_NR, CARD_ID, 
            ANSWER, SUCCESS, HANDLING_TIME, 
            COMMENTREAD_COUNT, COMMENTREAD_TIME, FT_DETAILS, 
            ANSWERTYPE, 
            HASBEENRATED) 
        VALUES ( my_session_id, 0  , in_card_id,
            in_answer, 50,  in_sec,
            0 ,0 , '',
            in_answertype, 1);
    else
        UPDATE CASUS.USERANSWER_VA
            SET HANDLING_TIME     = HANDLING_TIME + in_sec,
            HASBEENRATED      = 1
        WHERE  PARENT_ID         = my_session_id
        AND    CARD_ID           = in_card_id;
    end if;
end if;
end;
END; 
/


--
-- IOU_UA2  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.iou_ua2(in_session_id NUMBER, in_user_id NUMBER, in_case_id NUMBER, in_card_id NUMBER, in_sec Number) is
my_session_id Number;
my_ua_count Number;
BEGIN
dbms_output.put('iou_ua2 start (');
dbms_output.put_line(')');
BEGIN

my_session_id := in_session_id;
        BEGIN
            select session_id INTO my_session_id from CASUS.C_SESSION where session_id = in_session_id or (user_id = in_user_id and case_id = in_case_id);
        EXCEPTION
            WHEN NO_DATA_FOUND THEN my_session_id := -1;
        END;

if my_session_id<= 0 then
    dbms_output.put('ERROR iou_ua2: ');
    dbms_output.put(in_user_id);
    dbms_output.put(',');
    dbms_output.put(in_case_id);
    dbms_output.put_line('!');
else
    BEGIN
        select count(*) INTO my_ua_count from CASUS.USERANSWER_VA where parent_id = my_session_id and card_id = in_card_id;
    EXCEPTION
       WHEN NO_DATA_FOUND THEN my_ua_count := -1;
    END;
    
    if my_ua_count<= 0 then
        INSERT INTO CASUS.USERANSWER_VA (
            PARENT_ID, ORDER_NR, CARD_ID, 
            ANSWER, SUCCESS, HANDLING_TIME, 
            COMMENTREAD_COUNT, COMMENTREAD_TIME, FT_DETAILS, 
            ANSWERTYPE, 
            HASBEENRATED) 
        VALUES ( my_session_id, 0  , in_card_id,
            '', 100,  in_sec,
            0 ,0 , '',
            'NOAD', 1);
    else
        UPDATE CASUS.USERANSWER_VA
            SET   HANDLING_TIME     = HANDLING_TIME + in_sec
        WHERE  PARENT_ID         = my_session_id
            AND    CARD_ID           = in_card_id;
    end if;
end if;
END;
END; 
/


--
-- PROCESS_USER_ANSWER_REL  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.process_user_answer_rel (in_parent_id NUMBER,in_useranswer VARCHAR,in_card_id NUMBER, in_card_type VARCHAR, in_type NUMBER, in_date TIMESTAMP, in_debug NUMBER) is
myCount   Number;
tmp VARCHAR(2);
myCountLen   Number;
i   Number;
my_parent_id NUMBER;
my_useranswer VARCHAR(4000);
my_cardtype VARCHAR(10);
my_date TIMESTAMP;
BEGIN
if in_debug = 1 then
    dbms_output.put('process_user_answer_rel (');
    dbms_output.put(in_parent_id);
    dbms_output.put(',');
    dbms_output.put(in_useranswer);
    dbms_output.put(',');
    dbms_output.put(in_card_id);
    dbms_output.put(',');
    dbms_output.put(in_card_type);
    dbms_output.put(',');
    dbms_output.put(in_type);
    dbms_output.put(',');
    dbms_output.put(in_debug);
    dbms_output.put_line(')');
end if;
my_date := in_date;
my_useranswer := in_useranswer;
my_cardtype := in_card_type;
if in_type = 0 then
begin
    select modification_date, answer, answertype into my_date, my_useranswer, my_cardtype from casus.useranswer_va where parent_id = in_parent_id and card_id = in_card_id;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
   if in_debug = 1 then
        dbms_output.put_line('error: found no date');
   end if;
END;
end if;

if (my_useranswer is not null) then
BEGIN
  if my_cardtype = 'MCAD' then
            casus.process_user_answer_rel_mc (in_parent_id,my_useranswer ,in_card_id , in_type , my_date, in_debug );
  else if my_cardtype = 'FTAD' then

            casus.process_user_answer_rel_ft (in_parent_id,my_useranswer ,in_card_id , in_type , my_date, in_debug );
       end if;
  end if;

EXCEPTION
   WHEN NO_DATA_FOUND THEN
   if in_debug = 1 then
        dbms_output.put_line('error');
   end if;
END;
end if;
END; 
/


--
-- PROCESS_USER_ANSWER_TIME  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.process_user_answer_time(in_startdate DATE, in_enddate DATE,in_switch NUMBER,in_debug NUMBER) is
myCount   Number;
tmp VARCHAR(1000);
tmp1 VARCHAR(20);
tmp2 VARCHAR(20);
tmpdate1 DATE;
tmpdate2 DATE;
myCountLen   Number;
i   Number;
already_processed NUMBER;
my_parent_id NUMBER;
CURSOR MyCursor(PARAM2 DATE,PARAM3 DATE) IS
    select distinct card_id
    from casus.useranswer_va ua, casus.cards cc, casus.data_items di 
    where ua.CARD_ID=cc.ITEM_ID and cc.ANSWERID=di.ITEM_ID and di.TYPE='MCAD' and ua.creation_date>=PARAM2 and ua.creation_date<PARAM3;
BEGIN
if (in_debug = 1) then
dbms_output.put('process_user_answer_time (');
dbms_output.put(in_startdate);
dbms_output.put(',');
dbms_output.put(in_enddate);
dbms_output.put(',');
dbms_output.put(in_debug);
dbms_output.put_line(')');
end if;

BEGIN
    tmp1 := TO_CHAR(in_startdate , 'DD-MON-YYYY');
    tmpdate1 := TO_DATE(tmp1 , 'DD-MON-YYYY');
            
    while (tmpdate1 < in_enddate) loop
        
        FOR c1_rec IN MyCursor(tmpdate1,tmpdate1 + 1) LOOP
            if (in_debug = 1) then
                dbms_output.put('-> call process_user_answer_card (');
                dbms_output.put(c1_rec.card_id);
                dbms_output.put(',');
                dbms_output.put(tmpdate1);
                dbms_output.put(',');
                dbms_output.put(in_debug);
                dbms_output.put_line(')');
            end if;
            CASUS.process_user_answer_card(c1_rec.card_id, tmpdate1, in_switch, in_debug);
            commit;
        END LOOP;
        tmpdate1 := tmpdate1 + 1;       
    end loop;   
END;

END;
/


--
-- RECALC_RESETSESSION_ACTIONS  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.recalc_resetsession_actions is 
my_tutor_id NUMBER;
my_case_id NUMBER;
my_user_id NUMBER;
my_session_id NUMBER;
my_timestamp DATE;

my_ROWID ROWID;
CURSOR MyCursor IS
   select ROWID,session_id,user_id,timestamp from c_session_action where action = 51 and action_modifier=-1;
BEGIN
 FOR c1_rec IN MyCursor LOOP
     my_ROWID := c1_rec.ROWID;
     my_tutor_id := c1_rec.user_id;
     my_session_id := c1_rec.session_id;
     my_timestamp := c1_rec.timestamp;
     
     BEGIN
     select case_id,user_id into my_case_id,my_user_id from c_session where session_id = my_session_id;
     update c_session_action set case_id = my_case_id, user_id = my_user_id, action_modifier = my_tutor_id where ROWID = my_ROWID;
     commit;
      EXCEPTION
    WHEN NO_DATA_FOUND THEN
        dbms_output.put_line(my_ROWID);
        BEGIN
        select distinct case_id,user_id into my_case_id,my_user_id from c_session_action where session_id = my_session_id and action = 2 and timestamp < my_timestamp;
        update c_session_action set case_id = my_case_id, user_id = my_user_id, action_modifier = my_tutor_id where ROWID = my_ROWID;
         commit;
        EXCEPTION
    WHEN NO_DATA_FOUND THEN
    dbms_output.put_line('final');
    END;
    END;
 END LOOP;
END;
/


--
-- RESET_SESSION  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.reset_session(in_session_id NUMBER) is
BEGIN
--if in_debug = 1 then
--    dbms_output.put('CASUS.reset_sessions(');
--    dbms_output.put(in_session_id);
--    dbms_output.put(')');
--    dbms_output.put_line(')');
--end if;
insert into casus.useranswer_va_reset select * from casus.useranswer_va where parent_id = in_session_id;                
delete from casus.useranswer_va where parent_id = in_session_id;                
update casus.c_session set END_OF_CASE = 0,VARARRAY_COUNT=0,LAST_ANSWERED_CARD_ID=-1, endofsession_date = null,creation_date = null, modification_date = null where session_id = in_session_id;                   
update casus.c_session_avg_success set END_OF_CASE = 0,CARDS=0,SUM_TIME=0, session_end_date = null, START_DATE=null, SESSION_MODIFICATION_DATE=null where session_id = in_session_id;              
 END; 
/


--
-- RESET_SESSION2  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.reset_session2(in_session_id NUMBER, in_tutor_id NUMBER) is
BEGIN
--if in_debug = 1 then
-- dbms_output.put('CASUS.reset_sessions(');
-- dbms_output.put(in_session_id);
-- dbms_output.put(')');
-- dbms_output.put_line(')');
--end if;
insert into casus.c_session_action (session_id, action, action_modifier, user_id) values (in_session_id, 51, 0, in_tutor_id);
insert into casus.useranswer_va_reset select * from casus.useranswer_va where parent_id = in_session_id; 
delete from casus.useranswer_va where parent_id = in_session_id; 
update casus.c_session set END_OF_CASE = 0,VARARRAY_COUNT=0,LAST_ANSWERED_CARD_ID=-1, endofsession_date = null,creation_date = null, modification_date = null where session_id = in_session_id;                   
update casus.c_session_avg_success set END_OF_CASE = 0,CARDS=0,SUM_TIME=0, session_end_date = null, START_DATE=null, SESSION_MODIFICATION_DATE=null where session_id = in_session_id;               
 END; 
/


--
-- UAVA_SFST_CHG  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.uava_sfst_chg(in_card_id NUMBER,in_range NUMBER,in_debug NUMBER) is
myMin NUMBER;
myMax NUMBER;
myQueryMin NUMBER;
myQueryMax NUMBER;
myLoop NUMBER;
myRange NUMBER;
myType VARCHAR2(10);
myNewType VARCHAR2(10);

BEGIN
if in_debug = 1 then
    dbms_output.put('CASUS.uava_sfst_chg(');
    dbms_output.put(in_card_id);
    dbms_output.put(',');
    dbms_output.put(in_range);
    dbms_output.put(',');
    dbms_output.put(in_debug);
    dbms_output.put_line(')');
end if;
    myType := 'NCAD';
    myNewType := 'STAD';
    myRange := in_range;
    if myRange <= 0 then
        myRange := 100000;
    end if;
    
    select min(parent_id),max(parent_id)+1 into myMin,myMax from CASUS.useranswer_va where card_id = in_card_id and answertype = myType;
     myLoop := myMin;
     if in_debug = 1 then
    dbms_output.put('CASUS.uava_sfst_chg min;');
    dbms_output.put(myMin);
    dbms_output.put(', max');
    dbms_output.put(myMax);
    dbms_output.put_line('');
end if;
    while myLoop <= myMax loop
       myQueryMin := myLoop;
       myQueryMax := (myLoop + myRange);
       if (myQueryMax > myMax) then
        myQueryMax := myMax;
        end if;
        
       if in_debug = 1 then
            dbms_output.put('CASUS.uava_sfst_chg: update casus.useranswer_va set answertype = ');
            dbms_output.put(myNewType);
            dbms_output.put(' where parent_id>=');
             dbms_output.put(myQueryMin);
             dbms_output.put(' and parent_id<');
             dbms_output.put(myQueryMax);            
             dbms_output.put(' and card_id = ');
             dbms_output.put(in_card_id);            
             dbms_output.put(' and answertype = ');
             dbms_output.put(myType);           
             dbms_output.put_line(''); 
        end if;
        
        
        update casus.useranswer_va set answertype = myNewType where parent_id>=myQueryMin and parent_id<myQueryMax and card_id = in_card_id and answertype = myType;
        myLoop := myLoop + myRange;
        dbms_lock.sleep(5);
    end loop;
END; 
/


--
-- UPDATE_ENGSCORE_AND_DETAILS  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.update_engscore_and_details(in_session_id NUMBER, in_eng_score NUMBER, in_eng_score_details VARCHAR2) is
BEGIN
update c_session set eng_score = in_eng_score, eng_score_details = in_eng_score_details where session_id in in_session_id;
END; 
/


--
-- UPDATE_USERANSWER_CARD_VA  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.update_useranswer_card_va(in_start_id NUMBER,in_end_id NUMBER, in_card_id NUMBER, in_debug NUMBER) is
myCount NUMBER;
CURSOR MyCursor(PARAM1 NUMBER,PARAM2 NUMBER,PARAM3 NUMBER) IS
    select parent_id,card_id from casus.useranswer_va where parent_id>=PARAM1 and parent_id <= PARAM2 and card_id = PARAM3;
BEGIN
  myCount := 1;
  if in_debug = 1 then
    dbms_output.put('update_useranswer_va (');
    dbms_output.put(in_start_id);
    dbms_output.put(',');
    dbms_output.put(in_end_id);
    dbms_output.put_line(')');
end if;
 FOR c1_rec IN MyCursor(in_start_id,in_end_id,in_card_id) LOOP
 begin
 if in_debug = 1 then
    dbms_output.put('update_useranswer_va (');
    dbms_output.put(myCount);
    dbms_output.put_line(')');
end if;
  casus.process_user_answer_rel (c1_rec.parent_id,null,c1_rec.card_id,null,0,null,in_debug);
   myCount := myCount + 1;
   end;
 END LOOP;
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount := 0;
END; 
/


--
-- UPDATE_USERANSWER_VA  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.update_useranswer_va(in_start_id NUMBER,in_end_id NUMBER, in_debug NUMBER) is
myCount NUMBER;
CURSOR MyCursor(PARAM1 NUMBER,PARAM2 NUMBER) IS
    select parent_id,card_id from casus.useranswer_va where parent_id>=PARAM1 and parent_id <= PARAM2;
BEGIN
  myCount := 1;
  if in_debug = 1 then
    dbms_output.put('update_useranswer_va (');
    dbms_output.put(in_start_id);
    dbms_output.put(',');
    dbms_output.put(in_end_id);
    dbms_output.put_line(')');
end if;
 FOR c1_rec IN MyCursor(in_start_id,in_end_id) LOOP
 begin
 if in_debug = 1 then
    dbms_output.put('update_useranswer_va (');
    dbms_output.put(myCount);
    dbms_output.put_line(')');
end if;
  casus.process_user_answer_rel (c1_rec.parent_id,null,c1_rec.card_id,null,0,null,in_debug);
   myCount := myCount + 1;
   end;
 END LOOP;
EXCEPTION
   WHEN NO_DATA_FOUND THEN myCount := 0;
END; 
/


--
-- SELECTRECENTACTIVITIES  (Function) 
--
CREATE OR REPLACE FUNCTION CASUS.selectRecentActivities(in_user_id NUMBER,in_end_of_case NUMBER, in_course_id NUMBER, in_limit NUMBER)
    RETURN SYS_REFCURSOR
AS
    st_cursor SYS_REFCURSOR;
BEGIN
    if (in_end_of_case = 0) then
        if (in_course_id <= 0) then
            OPEN st_cursor FOR
             select "case_id", "end_of_case", "timestamp", "rank" from (
            select "case_id", "end_of_case", "timestamp", "rank" from (
            select csa.case_id as "case_id",cs.end_of_case as "end_of_case",csa.timestamp as "timestamp" ,RANK() OVER (PARTITION BY csa.user_id,csa.case_id
               ORDER BY timestamp DESC) "rank"
            from c_session_action csa,c_session cs 
            where csa.user_id = in_user_id and csa.action = 2 and csa.session_id = cs.session_id  order by csa.case_id,timestamp desc 
            ) where "rank" = 1 and "end_of_case" = 0
            order by "timestamp" desc
            )
            where rownum <= in_limit;
              RETURN  st_cursor;
        else
            OPEN st_cursor FOR
             select "case_id", "end_of_case", "timestamp", "rank" from (
            select "case_id", "end_of_case", "timestamp", "rank" from (
            select csa.case_id as "case_id",cs.end_of_case as "end_of_case",csa.timestamp as "timestamp" ,RANK() OVER (PARTITION BY csa.user_id,csa.case_id
               ORDER BY timestamp DESC) "rank"
            from c_session_action csa,c_session cs 
            where csa.user_id = in_user_id and csa.action = 2 and csa.session_id = cs.session_id  order by csa.case_id,timestamp desc 
            ) where "rank" = 1 and "end_of_case" = 0 and "case_id" in (select case_id from course_case_ref where course_id = in_course_id) 
            order by "timestamp" desc
            )
            where rownum <= in_limit;
              RETURN  st_cursor;
        end if;
    else
        if (in_course_id <= 0) then
            OPEN st_cursor FOR
             select "case_id", "end_of_case", "timestamp", "rank" from (
            select "case_id", "end_of_case", "timestamp", "rank" from (
            select csa.case_id as "case_id",cs.end_of_case as "end_of_case",csa.timestamp as "timestamp" ,RANK() OVER (PARTITION BY csa.user_id,csa.case_id
               ORDER BY timestamp DESC) "rank"
            from c_session_action csa,c_session cs 
            where csa.user_id = in_user_id and csa.action = 2 and csa.session_id = cs.session_id  order by csa.case_id,timestamp desc 
            ) where "rank" = 1
            order by "timestamp" desc
            )
            where rownum <= in_limit;
              RETURN  st_cursor;
        else
            OPEN st_cursor FOR
             select "case_id", "end_of_case", "timestamp", "rank" from (
            select "case_id", "end_of_case", "timestamp", "rank" from (
            select csa.case_id as "case_id",cs.end_of_case as "end_of_case",csa.timestamp as "timestamp" ,RANK() OVER (PARTITION BY csa.user_id,csa.case_id
               ORDER BY timestamp DESC) "rank"
            from c_session_action csa,c_session cs 
            where csa.user_id = in_user_id and csa.action = 2 and csa.session_id = cs.session_id  order by csa.case_id,timestamp desc 
            ) where "rank" = 1 and "case_id" in (select case_id from course_case_ref where course_id = in_course_id) 
            order by "timestamp" desc
            )
            where rownum <= in_limit;
              RETURN  st_cursor;
        end if;
    end if;

 END;
/


--
-- CASES_STRUCTURE  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE
(CASE_ID, DU_ID, FDG_ID, CARD_ID, DU_IDX_NR, 
 FDG_IDX_NR, CARD_IDX_NR)
AS 
SELECT Cases_view.Item_id, Lists.Item_id, Lists_2.Item_id, Lists_3.Item_id, Lists.Index_nr, Lists_2.Index_nr, Lists_3.Index_nr 
FROM Lists Lists_3, Lists Lists_2, Lists, Cases_view 
WHERE Lists_2.Item_id = Lists_3.Parent_id 
AND Lists.Item_id = Lists_2.Parent_id 
AND Cases_view.Item_id = Lists.Parent_id 
AND Lists_3.Order_nr = 5 
AND Lists_2.Order_nr = 1 
AND Lists.Order_nr = 4
order by Cases_view.Item_id,Lists.Index_nr, Lists_2.Index_nr, Lists_3.Index_nr;


--
-- CASES_STRUCTURE_ANSWERS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE_ANSWERS
(CASE_ID, DU_ID, FDG_ID, CARD_ID, DU_IDX_NR, 
 FDG_IDX_NR, CARD_IDX_NR, ANSWER_ID, ANSWER_TYPE, CARD_NAME, 
 MODIFICATION_DATE)
AS 
SELECT cases_view.item_id,
          lists.item_id,
          lists_2.item_id,
          lists_3.item_id,
          lists.index_nr,
          lists_2.index_nr,
          lists_3.index_nr,
          c.answerid,
          di.TYPE,
          di2.name,
          CASE
             WHEN (dichg.modified < dichg2.modified OR c.answerid <= 0)
             THEN
                dichg2.modified
             ELSE
                dichg.modified
          END
   FROM lists lists_3,
        lists lists_2,
        lists,
        cases_view,
        cards c,
        data_items di,
        data_items_chg dichg,
        data_items di2,
        data_items_chg dichg2
   WHERE     lists_2.item_id = lists_3.parent_id
         AND lists.item_id = lists_2.parent_id
         AND cases_view.item_id = lists.parent_id
         AND lists_3.order_nr = 5
         AND lists_2.order_nr = 1
         AND lists.order_nr = 4
         AND lists_3.item_id = c.item_id(+)
         AND c.answerid = di.item_id(+)
         AND c.item_id = di2.item_id(+)
         AND di.item_id = dichg.item_id(+)
         AND di2.item_id = dichg2.item_id;


--
-- CASES_STRUCTURE_CARDNUM  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE_CARDNUM
(ITEM_ID, NUM_OF_CARDS)
AS 
SELECT cc1.Item_id, COUNT (*)
        FROM Casus.Cases_structure cs1, Casus.Cases cc1
       WHERE cc1.Item_id = cs1.Case_id and cc1.apply_rules = 0
    GROUP BY cc1.Item_id
    union
   SELECT cc2.Item_id , COUNT (*)
        FROM Casus.Cases_structure cs2, Casus.Cases cc2, casus.cards ca2
       WHERE cc2.Item_id = cs2.Case_id and cs2.card_id = ca2.item_id and cc2.apply_rules = 1 and ca2.rule in (-1,0)
    GROUP BY cc2.Item_id;


--
-- CASES_STRUCTURE_HLTEXTS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE_HLTEXTS
(CASE_ID, CARD_ID, TEXT_ID, TEXT_TYPE, PARENT_ID)
AS 
SELECT cs.case_id,
           cs.card_id,
           di.item_id,
           10,
           li.parent_id
      FROM casus.cases_structure        cs,
           casus.CASES_STRUCTURE_TEXTS  cst,
           CASUS.LISTS                  li,
           Data_Items                   di
     WHERE     cs.card_id = cst.card_id
           AND cst.text_id = li.parent_id
           AND li.item_id = di.item_id
           AND di.TYPE IN ('HTMD', 'TXTD');

COMMENT ON COLUMN CASUS.CASES_STRUCTURE_HLTEXTS.TEXT_TYPE IS '10=hyperlinks';


--
-- CASES_STRUCTURE_PLAYER  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE_PLAYER
(CASE_ID, DU_ID, FDG_ID, CARD_ID, DU_IDX_NR, 
 FDG_IDX_NR, CARD_IDX_NR, EXCLUDED)
AS 
SELECT Cases_view.Item_id, Lists.Item_id, Lists_2.Item_id, Lists_3.Item_id, Lists.Index_nr, Lists_2.Index_nr, Lists_3.Index_nr, cards.EXCLUDED FROM Lists Lists_3, Lists Lists_2, Lists, Cases_view, Cards WHERE Lists_2.Item_id = Lists_3.Parent_id AND Lists.Item_id = Lists_2.Parent_id AND Cases_view.Item_id = Lists.Parent_id AND Lists_3.Order_nr = 5 AND Lists_2.Order_nr = 1 AND Lists.Order_nr = 4 AND Lists_3.Item_id= cards.ITEM_ID;


--
-- CASES_STRUCTURE_PLAYER_CARDNUM  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE_PLAYER_CARDNUM
(ITEM_ID, NUM_OF_CARDS)
AS 
SELECT csp.case_id, COUNT(*) FROM CASES_STRUCTURE_Player csp WHERE  excluded=0 group by csp.case_id
union
select cv.item_id, 0 from casus.cases_view cv where item_id not in (select distinct cs.case_id from Casus.Cases_structure cs);


--
-- CASES_STRUCTURE_PLAYER_WN  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE_PLAYER_WN
(CASE_ID, DU_ID, FDG_ID, CARD_ID, CARD_NAME, 
 DU_IDX_NR, FDG_IDX_NR, CARD_IDX_NR, EXCLUDED)
AS 
SELECT cases_view.item_id, lists.item_id, lists_2.item_id, lists_3.item_id,di3.NAME, 
          lists.index_nr, lists_2.index_nr, lists_3.index_nr, cards.excluded
     FROM lists lists_3, lists lists_2, lists, cases_view, cards, data_items di3 
    WHERE lists_2.item_id = lists_3.parent_id
      AND lists.item_id = lists_2.parent_id
      AND cases_view.item_id = lists.parent_id
      AND lists_3.order_nr = 5
      AND lists_2.order_nr = 1
      AND lists.order_nr = 4
      AND lists_3.item_id = cards.item_id
      AND lists_3.item_id = di3.item_id;


--
-- CASES_STRUCTURE2  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE2
(CASE_ID, DU_ID, FDG_ID, DU_IDX_NR, FDG_IDX_NR)
AS 
SELECT Cases_view.Item_id, Lists.Item_id, Lists_2.Item_id, Lists.Index_nr, Lists_2.Index_nr
FROM Lists Lists_2, Lists, Cases_view WHERE  Lists.Item_id = Lists_2.Parent_id AND Cases_view.Item_id = Lists.Parent_id AND Lists_2.Order_nr = 1 AND Lists.Order_nr = 4;


--
-- CASES_WITH_CHAPTER_SETTINGS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_WITH_CHAPTER_SETTINGS
(CASE_ID, DU_COUNT, CHAPTER_TYPE)
AS 
select case_id, count(distinct du_id), 3 from cases_structure where case_id in (
select item_id from data_items where item_id in (
select parent_id from lists where item_id in (
select item_id from DUs where subtype in (1,2) 
)
)
) group by case_id
union
select case_id, count(distinct du_id), 1 from cases_structure where case_id in (
select item_id from data_items where item_id in (
select parent_id from lists where item_id in (
select item_id from DUs where subtype in (1) 
)
)
) and case_id not in (
select item_id from data_items where item_id in (
select parent_id from lists where item_id in (
select item_id from DUs where subtype in (1,2) 
)
)
) group by case_id
union
select case_id, count(distinct du_id), 2 from cases_structure where case_id in (
select item_id from data_items where item_id in (
select parent_id from lists where item_id in (
select item_id from DUs where subtype in (2) 
)
)
) and case_id not in (
select item_id from data_items where item_id in (
select parent_id from lists where item_id in (
select item_id from DUs where subtype in (1,2) 
)
)
) group by case_id;


--
-- COURSE_EVALUATION  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_EVALUATION
(ID, TUTOR, STUDENT_ID, LOGIN, NAME, 
 FIRSTNAME, MATR_NUM, GROUP_NR, COMPUTER_NR, SESSION_ID, 
 START_DATE, CASE_ID, VARARRAY_COUNT, END_OF_CASE, NUM_OF_CARDS, 
 SUCCESS, TIME)
AS 
SELECT Course.Id, Course.Tutor, Course_student_ref.Student_id, C_user.Login, C_user.Name, C_user.Firstname, C_user.Matr_num, Course_student_ref.Group_nr, Course_student_ref.Computer_nr, C_session.Session_id, C_session.Start_date, C_session.Case_id, C_session.Vararray_count, C_session.End_of_case, Cases_structure_table.Num_of_cards, AVG(Useranswer_va.Success), SUM(Useranswer_va.Handling_time) FROM Cases_structure_table, C_user, Course, Course_student_ref, Cards, Useranswer_va, C_session WHERE Course_student_ref.Course_id = Course.Id AND Course_student_ref.Student_id = C_user.User_id AND Useranswer_va.Card_id = Cards.Item_id AND C_session.Session_id = Useranswer_va.Parent_id AND C_session.User_id = Course_student_ref.Student_id AND C_session.Case_id = Cases_structure_table.Case_id AND Cards.Answerid > 0 GROUP BY Course.Id, Course.Tutor, Course_student_ref.Student_id, C_user.Login, C_user.Name, C_user.Firstname, C_user.Matr_num, Course_student_ref.Group_nr, Course_student_ref.Computer_nr, C_session.Session_id, C_session.Start_date, C_session.Case_id, C_session.Vararray_count, C_session.End_of_case, Cases_structure_table.Num_of_cards;


--
-- COURSE_EVALUATION_DETAILS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_EVALUATION_DETAILS
(COURSE_ID, STUDENT_ID, SESSION_ID, CASE_ID, ORDER_NR, 
 CARD_ID, SUCCESS, HANDLING_TIME, COMMENTREAD_COUNT, COMMENTREAD_TIME, 
 TYPE, ANSWER)
AS 
SELECT Course_student_ref.Course_id, Course_student_ref.Student_id, C_session.Session_id, C_session.Case_id, Useranswer_va.Order_nr, Useranswer_va.Card_id, Useranswer_va.Success, Useranswer_va.Handling_time, Useranswer_va.Commentread_count, Useranswer_va.Commentread_time, Data_items.Type, Useranswer_va.Answer FROM Course_student_ref, Data_items, Cards, Useranswer_va, C_session WHERE Cards.Answerid = Data_items.Item_id AND Useranswer_va.Card_id = Cards.Item_id AND C_session.Session_id = Useranswer_va.Parent_id AND C_session.User_id = Course_student_ref.Student_id AND Cards.Answerid > 0;


--
-- COURSE_EVALUATION2  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_EVALUATION2
(ID, TUTOR, STUDENT_ID, LOGIN, NAME, 
 FIRSTNAME, MATR_NUM, GROUP_NR, COMPUTER_NR, SESSION_ID, 
 START_DATE, CASE_ID, VARARRAY_COUNT, END_OF_CASE, SUCCESS, 
 STUD_CARDS, TIME, NUM_OF_CARDS, CASE_ORDER_NR)
AS 
SELECT Course_evaluation.Id, Course_evaluation.Tutor, Course_evaluation.Student_id, Course_evaluation.Login, Course_evaluation.Name, Course_evaluation.Firstname, Course_evaluation.Matr_num, Course_evaluation.Group_nr, Course_evaluation.Computer_nr, Course_evaluation.Session_id, Course_evaluation.Start_date, Course_evaluation.Case_id, Course_evaluation.Vararray_count, Course_evaluation.End_of_case, Course_evaluation.Success, Course_evaluation.Vararray_count/Course_evaluation.Num_of_cards, Course_evaluation.Time, Course_evaluation.Num_of_cards, Course_case_ref.Order_nr FROM Course_case_ref, Course_evaluation WHERE Course_evaluation.Id = Course_case_ref.Course_id AND Course_evaluation.case_id = Course_case_ref.case_id;


--
-- CREATE_LMUDLE_SESSION_MAPPING  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CREATE_LMUDLE_SESSION_MAPPING
(OLD_SESSION_ID, CASE_ID, FROM_USER_ID, TO_USER_ID, DUPLICATES)
AS 
select cs.session_id, cs.case_id, cs.user_id, (select lum2.to_user_id from lmudle_user_mapping_table lum2 where lum2.from_user_id = cs.user_id),
(select count(*) from c_session cs2 where cs2.user_id in (select lum3.to_user_id from lmudle_user_mapping_table lum3 where lum3.from_user_id = cs.user_id) and cs2.case_id = cs.case_id) from c_session cs where cs.user_id in (
select lum4.from_user_id from lmudle_user_mapping_table lum4 where lum4.from_user_id not in (15739,140416));


--
-- C_SESSION_COURSE_GROUP  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.C_SESSION_COURSE_GROUP
(SESSION_ID, COURSE_ID, COURSE_GROUP_ID)
AS 
SELECT cs.session_id, cs.course_id, csr.group_nr from casus.c_session cs, casus.course_student_ref csr where cs.course_id=csr.course_id and cs.user_id = csr.student_id;


--
-- C_SESSION_INFO  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.C_SESSION_INFO
(SESSION_ID, VARARRAY_COUNT)
AS 
SELECT cs.session_id,count(*) 
FROM casus.c_session cs, useranswer_va ua
where cs.session_id = ua.parent_id 
GROUP BY cs.session_id;


--
-- C_SESSION_INFO2  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.C_SESSION_INFO2
(SESSION_ID, LAST_ANSWERED_CARD_ID, VARARRAY_COUNT, NETWORK_ID, END_OF_CASE, 
 HOST, CLIENT, VERSION, NETINFO_ID, FREETEXT_SUGGEST, 
 C_ID, DB_ID, PMWNET_ID, COURSE_ID, CREATION_DATE, 
 MODIFICATION_DATE)
AS 
SELECT cs.SESSION_ID,cs.LAST_ANSWERED_CARD_ID,cs2.VARARRAY_COUNT,cs.NETWORK_ID,cs.END_OF_CASE,cs.HOST,cs.CLIENT,cs.VERSION,cs.NETINFO_ID,cs.FREETEXT_SUGGEST,cs.C_ID,cs.DB_ID,cs.PMWNET_ID,cs.COURSE_ID,cs.CREATION_DATE,cs.MODIFICATION_DATE 
FROM casus.c_session cs, casus.c_session_info cs2
where cs.session_id = cs2.session_id 
ORDER BY user_id,case_id,session_id DESC;


--
-- C_SESSION_TIMES  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.C_SESSION_TIMES
(SESSION_ID, START_DATE, D_YEAR, D_WEEK, D_MONTH, 
 D_DAY, D_DAYOFMONTH, D_DAYOFWEEK, D_HOUR)
AS 
SELECT		session_id,start_date, cast (to_char (start_date, 'yyyy') AS NUMBER ), cast (to_char (start_date, 'WW') AS NUMBER ), cast (to_char (start_date, 'mm') AS NUMBER )
 ,cast (to_char (start_date, 'DDD') AS NUMBER ),cast (to_char (start_date, 'DD') AS NUMBER ), cast (to_char (start_date, 'D') AS NUMBER ), cast (to_char (start_date, 'HH24') AS NUMBER )
 	FROM 		casus.C_SESSION;


--
-- CS_MAIN_MH_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CS_MAIN_MH_VIEW
(CASE_ID, CARD_ID, MEDIAHEADER_ID, TYPE)
AS 
SELECT case_id, card_id, mh.item_id,1
      FROM cases_structure cs, cards cc, mediaheader mh
     WHERE cs.card_id = cc.item_id AND (cc.mmid = mh.item_id)
    UNION
    SELECT case_id, card_id, mh.item_id,2
      FROM cases_structure  cs,
           cards            cc,
           lists            li,
           mediaheader      mh
     WHERE     cs.card_id = cc.item_id
           AND (cc.mmid = li.parent_id AND li.item_id = mh.item_id);


--
-- LMUDLE_SESSION_MAPPING  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.LMUDLE_SESSION_MAPPING
(OLD_SESSION_ID, CASE_ID, FROM_USER_ID, TO_USER_ID, DUPLICATES, 
 FROM_USER_LOGIN, TO_USER_LOGIN)
AS 
select old_session_id,case_id,from_user_id, to_user_id,duplicates,cu2.login, cu1.login from create_lmudle_session_mapping, c_user cu1, c_user cu2 where to_user_id = cu1.user_id and from_user_id = cu2.user_id;


--
-- MCANSWER_PROBLEM  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.MCANSWER_PROBLEM
(CASE_ID, CASE_NAME, CASE_DELETE_FLAG, CARD_ID, CARD_NAME, 
 ANSWER_ID, NUM_OF_ITEMS)
AS 
SELECT csa.case_id, di1.name, di1.delete_flag, csa.card_id, di2.name, mci.item_id, mci.num_of_items 
   FROM casus.mcanswer_num_itms mci, casus.cases_structure_answers csa, casus.data_items di1, casus.data_items di2
   where mci.item_id = csa.answer_id and csa.case_id = di1.item_id and csa.card_id = di2.item_id;


--
-- OSCE  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.OSCE
(LOGIN, COURSE_ID, GROUP_NR, SESSION_ID, CREATION_DATE)
AS 
select cu.login, csr.course_id, csr.group_nr, cs.session_id, cs.CREATION_DATE from casus.c_user cu, casus.course_student_ref csr, casus.c_session cs where csr.student_id = cs.user_id and cu.user_id = cs.user_id;


--
-- PEERGROUP_VIEW2  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.PEERGROUP_VIEW2
(PARENT_ID, ANSWER_ID, CARD_ID, COURSE_ID, ITEM_DATE, 
 ITEM_INDEX, ANSWER_COUNT)
AS 
SELECT uar.parent_id,
          cc.answerid,
          uar.card_id,
          cs.course_id,
          uar.modification_date,
          0,
          1
   FROM casus.cards cc,
        casus.useranswer_va_relational uar,
        casus.c_session cs
   WHERE cc.item_id = uar.card_id AND uar.parent_id = cs.session_id
   UNION
   SELECT uar.parent_id,
          cc.answerid,
          uar.card_id,
          cs.course_id,
          uar.modification_date,
          uar.index_nr,
          uar.answer_int
   FROM casus.cards cc,
        casus.useranswer_va_relational uar,
        casus.c_session cs
   WHERE     cc.item_id = uar.card_id
         AND uar.parent_id = cs.session_id
         AND answer IS NULL;


--
-- PEERGROUP_VIEW2A  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.PEERGROUP_VIEW2A
(PARENT_ID, CARD_ID, COURSE_ID, ITEM_DATE, ITEM_INDEX, 
 ANSWER_COUNT)
AS 
SELECT uar.parent_id,
          uar.card_id,
          cs.course_id,
          uar.modification_date,
          0,
          1
   FROM casus.useranswer_va_relational uar, casus.c_session cs
   WHERE uar.parent_id = cs.session_id
   UNION
   SELECT uar.parent_id,
          uar.card_id,
          cs.course_id,
          uar.modification_date,
          uar.index_nr,
          uar.answer_int
   FROM casus.useranswer_va_relational uar, casus.c_session cs
   WHERE uar.parent_id = cs.session_id AND answer IS NULL;


--
-- SESSION_COUNT_USER_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.SESSION_COUNT_USER_VIEW
("user_id", "course_id", "session_count")
AS 
select user_id "user_id", course_id "course_id", count(*) "session_count" from casus.c_session group by course_id,user_id;


--
-- USERANSWER_VA_SUCCESS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.USERANSWER_VA_SUCCESS
(SUCCESS, PARENT_ID)
AS 
SELECT AVG(Casus.Useranswer_va.Success), Casus.Useranswer_va.Parent_id FROM Casus.Cards, Casus.Useranswer_va WHERE Casus.Useranswer_va.Card_id = Casus.Cards.Item_id AND Casus.Cards.Answerid > 0 GROUP BY Casus.Useranswer_va.Parent_id;


--
-- USERANSWER_VA_TIME  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.USERANSWER_VA_TIME
(HANDLING_TIME, PARENT_ID)
AS 
SELECT SUM(Handling_time), Parent_id FROM Casus.Useranswer_va GROUP BY Parent_id;


--
-- USER_SESSION_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.USER_SESSION_VIEW
(USER_ID, CASE_ID, SESSION_COUNT)
AS 
SELECT   user_id, case_id, COUNT (*)
       FROM casus.c_session
       where start_date is not null
   GROUP BY user_id, case_id;


--
-- C_SESSION_DEL_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.C_SESSION_DEL_TRIGGER
BEFORE DELETE
ON CASUS.C_SESSION
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
INSERT INTO CASUS.C_SESSION_DELETE (
   CASE_ID, CLIENT, COURSE_ID, 
   CREATION_DATE, C_ID, DB_ID, ENDOFSESSION_DATE, END_OF_CASE, 
   ENG_SCORE, ENG_SCORE_DETAILS, FREETEXT_SUGGEST, 
   GROUP_ID, HOST, LAST_ANSWERED_CARD_ID, 
   MODIFICATION_DATE, NETINFO_ID, NETWORK_ID, 
   ORG_SCORE, ORG_SESSION_ID, OWN_COMMENT, 
   OWN_COMMENT_CARD_ID, PMWNET_ID, RULE, 
   SCORE, SESSION_ID, START_DATE, 
   TIME, TUTOR_COMMENT, TUTOR_COMMENT_CARD_ID, 
   TUTOR_QUESTION_ANSWERED, USER_ID, VARARRAY_COUNT, 
   VERSION, del_timestamp) 
VALUES ( :old.CASE_ID,
 :old.CLIENT,
 :old.COURSE_ID,
 :old.CREATION_DATE,
 :old.C_ID,
 :old.DB_ID,
 :old.ENDOFSESSION_DATE,
 :old.END_OF_CASE,
 :old.ENG_SCORE,
 :old.ENG_SCORE_DETAILS,
 :old.FREETEXT_SUGGEST,
 :old.GROUP_ID,
 :old.HOST,
 :old.LAST_ANSWERED_CARD_ID,
 :old.MODIFICATION_DATE,
 :old.NETINFO_ID,
 :old.NETWORK_ID,
 :old.ORG_SCORE,
 :old.ORG_SESSION_ID,
 :old.OWN_COMMENT,
 :old.OWN_COMMENT_CARD_ID,
 :old.PMWNET_ID,
 :old.RULE,
 :old.SCORE,
 :old.SESSION_ID,
 :old.START_DATE,
 :old.TIME,
 :old.TUTOR_COMMENT,
 :old.TUTOR_COMMENT_CARD_ID,
 :old.TUTOR_QUESTION_ANSWERED,
 :old.USER_ID,
 :old.VARARRAY_COUNT,
 :old.VERSION, sysdate );
 
delete from c_session_avg_success where session_id = :old.session_id;
END;
/


--
-- C_SESSION_INS2_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.C_SESSION_INS2_TRIGGER
BEFORE INSERT
ON CASUS.C_SESSION 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
:NEW.mod_year := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'yyyy') as number);
:NEW.mod_week := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'WW') as number);
:NEW.mod_month := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'mm') as number);
:NEW.mod_day := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'DDD') as number);
:NEW.mod_dayofmonth := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'DD') as number);
:NEW.mod_dayofweek := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'D') as number);
:NEW.mod_hour := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'HH24') as number);
END;
/


--
-- C_SESSION_MOD_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.C_SESSION_MOD_TRIGGER
BEFORE UPDATE
OF LAST_ANSWERED_CARD_ID
  ,VARARRAY_COUNT
  ,END_OF_CASE
ON CASUS.C_SESSION
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
:NEW.MODIFICATION_DATE := SYSDATE;
if :new.creation_date is null then
   :NEW.creation_date := SYSDATE;       
end if;

:NEW.mod_year := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'yyyy') as number);
:NEW.mod_week := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'WW') as number);
:NEW.mod_month := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'mm') as number);
:NEW.mod_day := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'DDD') as number);
:NEW.mod_dayofmonth := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'DD') as number);
:NEW.mod_dayofweek := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'D') as number);
:NEW.mod_hour := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'HH24') as number);

END;
/


--
-- C_SESSION_MOD2_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.C_SESSION_MOD2_TRIGGER
BEFORE UPDATE
OF MODIFICATION_DATE 
ON CASUS.C_SESSION 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
:NEW.mod_year := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'yyyy') as number);
:NEW.mod_week := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'WW') as number);
:NEW.mod_month := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'mm') as number);
:NEW.mod_day := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'DDD') as number);
:NEW.mod_dayofmonth := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'DD') as number);
:NEW.mod_dayofweek := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'D') as number);
:NEW.mod_hour := cast(TO_CHAR (:NEW.MODIFICATION_DATE, 'HH24') as number);
END;
/


--
-- USERANSWER_VA_INSERT_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.USERANSWER_VA_INSERT_TRIGGER AFTER INSERT ON CASUS.USERANSWER_VA REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
BEGIN
   UPDATE casus.c_session SET modification_date = SYSDATE WHERE session_id = :new.parent_id;
   
   casus.process_user_answer_rel (:new.parent_id,:new.answer,:new.card_id, :new.answertype, 1, :new.modification_date, 1);
END;
/


--
-- USERANSWER_VA_UPDATE_TRIGGER  (Trigger) 
--
CREATE OR REPLACE TRIGGER CASUS.USERANSWER_VA_UPDATE_TRIGGER
BEFORE UPDATE
OF ANSWER
  ,SUCCESS
  ,HANDLING_TIME
  ,COMMENTREAD_COUNT
  ,COMMENTREAD_TIME
  ,FT_DETAILS
ON CASUS.USERANSWER_VA 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  :new.modification_date := SYSDATE;
   UPDATE casus.c_session SET modification_date = SYSDATE WHERE session_id = :new.parent_id;
          
   if (:old.answer <> :new.answer and :new.answer is not null) then
    casus.process_user_answer_rel (:new.parent_id,:new.answer,:new.card_id, :new.answertype, 2, :new.modification_date, 1);          
   end if; 
END;
/


--
-- BATCHINITNEWCSESSION  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.batchInitNewCSession(fromid NUMBER, toid NUMBER, maxCount NUMBER) is
myCount NUMBER;
myStart NUMBER;
myEnd NUMBER;
my_fromid NUMBER;
my_toid NUMBER;
my_lastid NUMBER;
CURSOR MyCursor(PARAM1 NUMBER,PARAM2 NUMBER) IS
    select cs.session_id
    from c_session cs
    where session_id >= PARAM1 and session_id < PARAM2 and (score = -1 and time = -1);
BEGIN
 myCount := 0;
 myStart := dbms_utility.get_time();
 my_fromid := fromid;
  my_toid := toid;

 if (fromid = -1) then
    select max(last_min) into my_fromid from CASUS.BATCHINITNEWCSESSION_STATUS;
    if (my_fromid = -1) then
        select min(cs.session_id) into my_fromid from c_session cs where score = -1 and time = -1;
       end if;
 end if;
    
if (toid = -1) then
    select max(cs.session_id)+1 into my_toid from c_session cs where score = -1 and time = -1;
 end if;
 
 my_lastid := -1;
 
 FOR c1_rec IN MyCursor(my_fromid,my_toid) LOOP
       casus.initNewCSession(c1_rec.session_id);
    my_lastid := c1_rec.session_id;
    myCount := myCount +1;
    EXIT WHEN (maxCount > 0 and myCount>= maxCount);
 END LOOP;
myEnd := dbms_utility.get_time();

update CASUS.BATCHINITNEWCSESSION_STATUS set last_min = my_lastid;

dbms_output.put('sec=');
dbms_output.put((myEnd - myStart));
dbms_output.put(', my_lastid=');
dbms_output.put(my_lastid);
dbms_output.put(', my_fromid=');
dbms_output.put(my_fromid);
dbms_output.put(', my_toid=');
dbms_output.put(my_toid);
dbms_output.put(', myCount=');
dbms_output.put_line(myCount);
END;
/


--
-- INIT_SESSION_DATES  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.INIT_SESSION_DATES(mymin NUMBER,mymax NUMBER) is
myCount   Number;
CURSOR MyCursor(PARAM1 NUMBER,PARAM2 NUMBER) IS
	   SELECT csa.session_id
	   FROM casus.c_session csa
	   WHERE csa.session_id>=PARAM1 AND csa.session_id<PARAM2;
BEGIN
myCount := 0;

if myMin < myMax then
	FOR c1_rec IN MyCursor(mymin,mymax) LOOP
	      CASUS.INIT_SESSION_UA_DATES(c1_rec.session_id);
	END LOOP;
END IF;
EXCEPTION
		 WHEN NO_DATA_FOUND THEN myCount := 0;
END;

/


--
-- INIT_SESSION_DATES2  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.INIT_SESSION_DATES2(mymin NUMBER,mymax NUMBER) is
myCount   Number;
CURSOR MyCursor(PARAM1 NUMBER,PARAM2 NUMBER) IS
	   SELECT csa.session_id
	   FROM casus.c_session csa
	   WHERE csa.session_id>=PARAM1 AND csa.session_id<PARAM2;
BEGIN
myCount := 0;

if myMin < myMax then
	FOR c1_rec IN MyCursor(mymin,mymax) LOOP
	      CASUS.INIT_SESSION_UA_DATES2(c1_rec.session_id);
	END LOOP;
END IF;
EXCEPTION
		 WHEN NO_DATA_FOUND THEN myCount := 0;
END;

/


--
-- INIT_TUTOR_QUESTION_ANSWERED_3  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.INIT_TUTOR_QUESTION_ANSWERED_3(mymin NUMBER,mymax NUMBER) is
myCount   Number;
CURSOR MyCursor(param1 NUMBER,param2 NUMBER) IS
select distinct parent_id,ua.modification_date from useranswer_va ua
where ua.modification_date >= sysdate-param1 and  ua.modification_date < sysdate-param2
and ua.card_id in (  
    select csa.card_id  
    from casus.cases_structure_answers  csa, ANS_DETAILS  ad  
   where csa.answer_id = ad.item_id 
   and ad.tutor_feedback > 0);
BEGIN
 FOR c1_rec IN MyCursor(mymin,mymax) LOOP
       update c_session set TUTOR_QUESTION_ANSWERED=c1_rec.modification_date where session_id = c1_rec.parent_id and TUTOR_QUESTION_ANSWERED is null and TUTOR_QUESTION_ANSWERED < c1_rec.modification_date;
 END LOOP;
END; 
/


--
-- UPDATE_SESSION_AVGS  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.update_session_avgs(newitemid NUMBER) is
tmpTYPE CHAR(4);
tmpID   NUMBER;
tmpSessionID   NUMBER;
tmpSuccess NUMBER;
tmpTime NUMBER;
tmpHypo NUMBER;
tmpNetID NUMBER;
tmpCount NUMBER;
tmpCount2 NUMBER;
tmpStartDate DATE;
tmpUserCreationDate DATE;
tmpCourseID NUMBER;
tmpCaseID NUMBER;
tmpUserID NUMBER;
tmpCourseGroupID NUMBER;
tmpEOC NUMBER;
tmpCards NUMBER;
tmpModDate DATE;
tmpEOCDate DATE;
BEGIN
     tmpSessionID := newitemid;
     tmpSuccess := 0;
     tmpTime := 0;
     tmpCourseID := 0;
     tmpCaseID := 0;
     tmpUserID := 0;
     tmpCourseGroupID := 0;
     tmpEOC := 0;
     tmpCards := 0;

     BEGIN
         SELECT AVG(useranswer_va.success),count(*) INTO tmpSuccess,tmpCount2 FROM casus.useranswer_va WHERE useranswer_va.parent_id = tmpSessionID AND (useranswer_va.success >= 0) AND(useranswer_va.success <= 100) GROUP BY useranswer_va.parent_id;
         if (tmpCount2 = 0) then
            tmpSuccess := -1;
         end if;
     EXCEPTION
              WHEN NO_DATA_FOUND THEN tmpSuccess := -1;
     END;

     BEGIN
         SELECT SUM(useranswer_va.handling_time) INTO tmpTime FROM casus.useranswer_va WHERE useranswer_va.parent_id = tmpSessionID GROUP BY useranswer_va.parent_id;
     EXCEPTION
              WHEN NO_DATA_FOUND THEN tmpTime := 0;
     END;

     BEGIN
         SELECT count(distinct useranswer_va.card_id) INTO tmpCards FROM casus.useranswer_va WHERE useranswer_va.parent_id = tmpSessionID;
     EXCEPTION
              WHEN NO_DATA_FOUND THEN tmpCards := 0;
     END;

      BEGIN
           tmpHypo := 0;
           SELECT pmwnet_id,user_id,case_id,course_id,end_of_case,MODIFICATION_DATE,ENDOFSESSION_DATE INTO tmpNetID,tmpUserID,tmpCaseID,tmpCourseID,tmpEOC,tmpModDate,tmpEOCDate FROM casus.c_session where session_id=tmpSessionID;
           IF tmpNetID>0 THEN
              SELECT count(distinct hypos.name) INTO tmpHypo FROM casus.user_net_hypos hypos, casus.user_net_lists lists where lists.item_id=hypos.parent_id and lists.parent_id=tmpNetID group by lists.parent_id;
           END IF;
     EXCEPTION
               WHEN NO_DATA_FOUND THEN tmpHypo := 0;
     END;

     BEGIN
           tmpStartDate := NULL;
          tmpUserCreationDate := NULL;
           SELECT cs.start_date,cu.creation_date INTO tmpStartDate,tmpUserCreationDate FROM casus.c_session cs,casus.c_user cu where cs.session_id=tmpSessionID AND cs.user_id=cu.user_id;
     EXCEPTION
               WHEN NO_DATA_FOUND THEN
                     tmpStartDate := NULL;
                   tmpUserCreationDate := NULL;
     END;

     BEGIN
           select course_group_id INTO tmpCourseGroupID from (SELECT distinct cs.course_group_id FROM casus.C_SESSION_COURSE_GROUP cs where cs.session_id=tmpSessionID and course_id=tmpCourseID) where rownum=1;
           --SELECT cs.course_group_id INTO tmpCourseGroupID FROM casus.C_SESSION_COURSE_GROUP cs where cs.session_id=tmpSessionID and course_id=tmpCourseID;
     EXCEPTION
               WHEN NO_DATA_FOUND THEN
                     tmpCourseGroupID := 0;
     END;

      select count(session_id)  INTO tmpCount from casus.c_session_avg_success where session_id=tmpSessionID;
     IF tmpCount>0 THEN
          update casus.c_session_avg_success
         set SUM_TIME=tmpTime,AVG_SUCCESS=tmpSuccess,NET_HYPO_COUNT=tmpHypo,
         LAST_CALCULATED=SYSDATE,START_DATE=tmpStartDate ,
         USER_ID=tmpUserID,CASE_ID=tmpCaseID, COURSE_ID=tmpCourseID,
         COURSE_GROUP_ID=tmpCourseGroupID,END_OF_CASE=tmpEOC,CARDS=tmpCards,SESSION_MODIFICATION_DATE=tmpModDate,session_end_date=tmpEOCDate
         where session_id=tmpSessionID;
     ELSE

          INSERT INTO casus.c_session_avg_success
         (session_id,SUM_TIME,AVG_SUCCESS,NET_HYPO_COUNT,START_DATE,USER_CREATION_DATE,USER_ID,CASE_ID,COURSE_ID,COURSE_GROUP_ID,END_OF_CASE,CARDS,SESSION_MODIFICATION_DATE,session_end_date)
         VALUES (tmpSessionID,tmpTime,tmpSuccess,tmpHypo,tmpStartDate,tmpUserCreationDate,tmpUserID,tmpCaseID,tmpCourseID,tmpCourseGroupID,tmpEOC,tmpCards,tmpModDate,tmpEOCDate);
     END IF;



END;
/


--
-- VERSIONINGDOCLEAN  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.VersioningDoClean is
CURSOR RemoveCursor IS
select ov.new_id new_id,ov.old_id old_id from object_versions ov where depth = 0
    minus
select di.item_id new_id,di.org_data_item old_id from data_items di where di.org_data_item>0
and ((di.type='CASE' and (select child_type from cases where item_id = di.item_id)=1) 
    OR 
     (di.type='CARD' and di.item_id in (select card_id from cases_structure where case_id in (select item_id from cases where child_type=1))));
CURSOR AddCursor IS
select di.item_id new_id,di.org_data_item old_id from data_items di where di.org_data_item>0 
and ((di.type='CASE' and (select child_type from cases where item_id = di.item_id)=1) 
    OR 
     (di.type='CARD' and di.item_id in (select card_id from cases_structure where case_id in (select item_id from cases where child_type=1))))
minus
select ov.new_id new_id,ov.old_id old_id from object_versions ov where depth = 0;
CURSOR PathUpCursor(in_id NUMBER) IS
    select item_id from casus.data_items where org_data_item = in_id;
BEGIN    
    FOR c1_rec IN RemoveCursor LOOP
        casus.VersioningRemove(c1_rec.new_id, c1_rec.old_id, 1);
    END LOOP;
    
    FOR c1_rec IN AddCursor LOOP 
        casus.VersioningDoCleanWalkUp(c1_rec.new_id);
    END LOOP;
end;
/


--
-- VERSIONINGDOCLEANONECASE  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.VersioningDoCleanOneCase (in_case_id NUMBER) is
CURSOR RemoveCursor(in_case_id2 NUMBER) IS
select di.item_id new_id,di.org_data_item old_id from data_items di where di.org_data_item>0
and ((di.type='CASE' and di.item_id = in_case_id2) 
    OR 
     (di.type='CARD' and di.item_id in (select card_id from cases_structure where case_id in (in_case_id2))));
CURSOR AddCursor(in_case_id2 NUMBER) IS
select di.item_id new_id,di.org_data_item old_id from data_items di where di.org_data_item>0 
and ((di.type='CASE' and di.item_id = in_case_id2 and (select child_type from cases where item_id = di.item_id)=1) 
    OR 
     (di.type='CARD' and di.item_id in (select card_id from cases_structure where case_id in (in_case_id2) and (select child_type from cases where item_id = in_case_id2)=1)))
minus
select ov.new_id new_id,ov.old_id old_id from object_versions ov where depth = 0;
BEGIN    
    FOR c1_rec IN RemoveCursor(in_case_id) LOOP
        casus.VersioningRemove(c1_rec.new_id, c1_rec.old_id, 1);
    END LOOP;
    
    FOR c1_rec IN AddCursor(in_case_id) LOOP 
        casus.VersioningDoCleanWalkUp(c1_rec.new_id);
    END LOOP;
end;
/


--
-- CASES_CARDNUMBER  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_CARDNUMBER
(ITEM_ID, NUM_OF_CARDS)
AS 
SELECT Cases_view.Item_id, COUNT(Cases_structure.Case_id) FROM Cases_structure, Cases_view WHERE Cases_view.Item_id = Cases_structure.Case_id GROUP BY Cases_view.Item_id;


--
-- CASES_EVALUATION  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_EVALUATION
(CASE_ID, SESSION_ID, VARARRAY_COUNT, END_OF_CASE, USER_ID, 
 SUCCESS, CARDS_WITH_ANSWERS, TIME, NUM_OF_CARDS)
AS 
SELECT Casus.C_session.Case_id, Casus.C_session.Session_id, Casus.C_session.Vararray_count, Casus.C_session.End_of_case, Casus.C_session.User_id, AVG(Useranswer_va.Success), COUNT(Useranswer_va.Card_id), SUM(Useranswer_va.Handling_time), Cases_cardnumber.Num_of_cards FROM Cases_cardnumber, Cards, Useranswer_va, Casus.C_session, Casus.C_user WHERE Useranswer_va.Card_id = Cards.Item_id AND Casus.C_session.Session_id = Useranswer_va.Parent_id AND Casus.C_session.Case_id = Cases_cardnumber.Item_id  AND Casus.C_user.User_id = Casus.C_session.User_id AND Cards.Answerid <> 0 GROUP BY Casus.C_session.Case_id, Casus.C_session.Session_id, Casus.C_session.Vararray_count, Casus.C_session.End_of_case, Casus.C_session.User_id, Cases_cardnumber.Num_of_cards;


--
-- CASES_EVALUATION_HELPER  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_EVALUATION_HELPER
(MATNR, CASE_ID, TOTAL_NUMBER_OF_CARDS, SESSION_ID, VARARRAY_COUNT)
AS 
SELECT Casus.Stud.Matnr, Casus.C_session.Case_id, COUNT(Cases_structure.Case_id), Casus.C_session.Session_id, Casus.C_session.Vararray_count FROM Cases_structure, Casus.C_session, Casus.C_user, Casus.Stud WHERE Casus.C_session.Case_id = Cases_structure.Case_id AND Casus.C_user.User_id = Casus.C_session.User_id AND Casus.Stud.Matnr = Casus.C_user.Matr_num AND Casus.C_session.Case_id = 8415 AND Casus.Stud.Term = 'WS99/2000' GROUP BY Casus.Stud.Matnr, Casus.C_session.Case_id, Casus.C_session.Session_id, Casus.C_session.Vararray_count;


--
-- CASES_STRUCTURE_ALLTEXTS  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CASES_STRUCTURE_ALLTEXTS
(CASE_ID, CARD_ID, TEXT_ID, TEXT_TYPE, PARENT_ID)
AS 
SELECT cs.case_id,
           cs.card_id,
           cst.text_id,
           cst.text_type,
           -1
      FROM casus.cases_structure cs, CASUS.CASES_STRUCTURE_TEXTS cst
     WHERE cs.card_id = cst.card_id
     union
     select csht.CASE_ID,csht.CARD_ID,csht.TEXT_ID,csht.TEXT_TYPE,csht.parent_id from CASES_STRUCTURE_HLTEXTS csht;

COMMENT ON COLUMN CASUS.CASES_STRUCTURE_ALLTEXTS.TEXT_TYPE IS '1=info,2=question,3=expert,4=answercomment,10=hyperlinks';


--
-- COURSE_EVALUATION3  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_EVALUATION3
(ID, TUTOR, STUDENT_ID, LOGIN, NAME, 
 FIRSTNAME, MATR_NUM, GROUP_NR, COMPUTER_NR, CLIENT, 
 VERSION, LAST_ANSWERED_CARD_ID, SESSION_ID, START_DATE, CASE_ID, 
 VARARRAY_COUNT, END_OF_CASE, NUM_OF_CARDS, SUCCESS, HANDLING_TIME)
AS 
SELECT Course.Id, Course.Tutor, Course_student_ref.Student_id, C_user.Login, C_user.Name, C_user.Firstname, C_user.Matr_num, Course_student_ref.Group_nr, Course_student_ref.Computer_nr, C_session.client, C_session.version, C_session.last_answered_card_id,C_session.Session_id, C_session.Start_date, C_session.Case_id, C_session.Vararray_count, C_session.End_of_case, Cases_structure_table.Num_of_cards, Casus.Useranswer_va_success.Success, Casus.Useranswer_va_time.Handling_time FROM Cases_structure_table, C_user, Course, Course_student_ref, Casus.Useranswer_va_success, Casus.Useranswer_va_time, C_session WHERE Course_student_ref.Course_id = Course.Id  AND Course_student_ref.Student_id = C_user.User_id  AND C_session.Session_id = Casus.Useranswer_va_time.Parent_id  AND C_session.Session_id = Casus.Useranswer_va_success.Parent_id  AND C_session.User_id = Course_student_ref.Student_id  AND C_session.Case_id = Cases_structure_table.Case_id;


--
-- COURSE_EVALUATION4  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.COURSE_EVALUATION4
(ID, TUTOR, STUDENT_ID, LOGIN, NAME, 
 FIRSTNAME, MATR_NUM, GROUP_NR, COMPUTER_NR, CLIENT, 
 VERSION, LAST_ANSWERED_CARD_ID, SESSION_ID, START_DATE, CASE_ID, 
 VARARRAY_COUNT, END_OF_CASE, SUCCESS, STUD_CARDS, TIME, 
 NUM_OF_CARDS, CASE_ORDER_NR)
AS 
SELECT Course_evaluation3.Id, Course_evaluation3.Tutor, Course_evaluation3.Student_id, Course_evaluation3.Login, Course_evaluation3.Name, Course_evaluation3.Firstname, Course_evaluation3.Matr_num, Course_evaluation3.Group_nr, Course_evaluation3.Computer_nr, Course_evaluation3.client, Course_evaluation3.version, Course_evaluation3.last_answered_card_id, Course_evaluation3.Session_id, Course_evaluation3.Start_date, Course_evaluation3.Case_id, Course_evaluation3.Vararray_count, Course_evaluation3.End_of_case, Course_evaluation3.Success, Course_evaluation3.Vararray_count/Course_evaluation3.Num_of_cards, Course_evaluation3.handling_Time, Course_evaluation3.Num_of_cards, Course_case_ref.Order_nr FROM Course_case_ref, Course_evaluation3 WHERE Course_evaluation3.Id = Course_case_ref.Course_id  AND Course_evaluation3.case_id = Course_case_ref.case_id;


--
-- CS_HL_HTMD_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CS_HL_HTMD_VIEW
(CASE_ID, CARD_ID, MEDIAHEADER_ID, TYPE, PARENT_ID)
AS 
SELECT csmt.case_id,
           csmt.card_id,
           mh.item_id,
           10,
           li.parent_id
      FROM mediaheader mh, CASES_STRUCTURE_ALLTEXTS csmt, Lists li
     WHERE     csmt.text_id = li.parent_id
           AND li.order_nr = 1
           AND li.item_id = mh.item_id;


--
-- CS_HL_MH_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CS_HL_MH_VIEW
(CASE_ID, CARD_ID, MEDIAHEADER_ID, TYPE, PARENT_ID)
AS 
SELECT csmh.case_id, csmh.card_id, mh2.item_id,3,mh.item_id
      FROM mediaheader      mh,
           CS_MAIN_MH_VIEW  csmh,
           picturehllist    phlb,
           mediaheader      mh2
     WHERE     mh.item_id = csmh.mediaheader_id
           AND mh.hyperlink_id > 0
           AND mh.hyperlink_id = phlb.parent_id
           AND phlb.target_id > 0
           AND phlb.target_id = mh2.item_id;


--
-- TEST_MY_CURSOR  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.test_my_cursor(mycourseid NUMBER) is
myMinDate Date;
myMaxDate Date;
myCount   Number;
CURSOR MyCursor(PARAM1 DATE,PARAM2 DATE,mycourseid NUMBER) IS
	   select cs.session_id
	   from casus.c_session cs
	   where cs.modification_date > PARAM1 and cs.modification_date <= PARAM2 and cs.case_id in (select case_id from casus.course_case_ref where course_id = mycourseid);
BEGIN
dbms_output.put('test_my_cursor start (');
dbms_output.put(mycourseid);
dbms_output.put_line(')');

myMaxDate := SYSDATE;
BEGIN
SELECT LAST_UPDATE INTO myMinDate
from CASUS.C_COURSE_LASTUPDATE where COURSE_ID = mycourseid;
dbms_output.put('myMinDate=');
dbms_output.put_line(myMinDate);

if myMinDate=NULL then
myMinDate := to_date('01-01-1970');
INSERT INTO CASUS.C_COURSE_LASTUPDATE values (mycourseid,myMaxDate);
dbms_output.put_line('myMinDate=NULL');
else
UPDATE CASUS.C_COURSE_LASTUPDATE set LAST_UPDATE=myMaxDate where COURSE_ID = mycourseid;
dbms_output.put_line('myMinDate<>NULL');
end if;


EXCEPTION
		 WHEN NO_DATA_FOUND THEN myMinDate := to_date('01-01-1970','DD-MM-YYYY');
		 dbms_output.put_line('NO_DATA_FOUND will insert CASUS.C_COURSE_LASTUPDATE values');
		 INSERT INTO CASUS.C_COURSE_LASTUPDATE values (mycourseid,myMaxDate);
END;

dbms_output.put('myMinDate=');
dbms_output.put_line(myMinDate);
dbms_output.put('myMaxDate=');
dbms_output.put_line(myMaxDate);

myCount := 0;
if myMinDate < myMaxDate then

	FOR c1_rec IN MyCursor(myMinDate,myMaxDate,mycourseid) LOOP
	      casus.update_session_avgs(c1_rec.session_id);
		  myCount := myCount +1;
	END LOOP;
END IF;

dbms_output.put('myCount=');
dbms_output.put_line(myCount);
EXCEPTION
		 WHEN NO_DATA_FOUND THEN myCount := 0;
END; 
/


--
-- UPDATE_COURSE  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.update_course is
myCourseID   Number;
myCount   Number;
CURSOR MyCursor IS
    select id 
    from casus.course c 
    where c.DELETE_FLAG <> 1 
    and (c.START_DATE is not null and c.START_DATE < SYSDATE) 
    and (c.END_DATE is not null and  (SYSDATE - 1) < c.END_DATE) 
    and is_archive = 0 
    order by id;
BEGIN
myCount:=0;
INSERT INTO CASUS.COURSE_UPDATES_LOG (id) values (0);
COMMIT;

 FOR c1_rec IN MyCursor() LOOP
   myCourseID := c1_rec.id;
     dbms_output.put('myCourseID=');
   dbms_output.put_line(myCourseID); 
   --if (myCourseID = 6220) then
   INSERT INTO CASUS.COURSE_UPDATES_LOG (id) values (myCourseID);
   COMMIT;
   
   --end if; 
   casus.test_my_cursor(myCourseID);   
   myCount:= myCount + 1; 
 END LOOP;
dbms_output.put('myCount=');
dbms_output.put_line(myCount);    
END; 
/


--
-- UPDATE_C_SESSION_AVG_SUCCESS  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.update_c_session_avg_success(mymin NUMBER,mymax NUMBER, courseid NUMBER) is
myCount   Number;
CURSOR MyCursor(PARAM1 NUMBER,PARAM2 NUMBER) IS
       select csa.session_id
       from casus.c_session_avg_success csa
       where csa.session_id>=PARAM1 and csa.session_id<PARAM2 and csa.cards=-1;
BEGIN
myCount := 0;

if myMin < myMax then
    FOR c1_rec IN MyCursor(mymin,mymax) LOOP
          casus.update_session_avgs(c1_rec.session_id);
    END LOOP;
END IF;
EXCEPTION
         WHEN NO_DATA_FOUND THEN myCount := 0;
END; 
/


--
-- CS_ALL_MH_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CS_ALL_MH_VIEW
(CASE_ID, CARD_ID, MEDIAHEADER_ID, TYPE, PARENT_ID)
AS 
SELECT cs1.case_id, cs1.card_id, cs1.mediaheader_id, cs1.type, cs1.parent_id FROM cs_hl_mh_view cs1
    UNION
    SELECT cs2.case_id, cs2.card_id, cs2.mediaheader_id, cs2.type,-1 FROM cs_main_mh_view cs2
    UNION
    SELECT cs3.case_id, cs3.card_id, cs3.mediaheader_id, cs3.type, cs3.parent_id FROM cs_hl_htmd_view cs3
    UNION
    SELECT -1, -1, c.course_icon,  30, -1 FROM course c where c.course_icon > 0
    UNION
    SELECT cm.case_id, -1, cm.pat_icon_id,  40, -1 FROM CASE_METADATA cm where cm.pat_icon_id > 0
    UNION
    SELECT csa.case_id, csa.card_id, roi.media_id,  5, roi.item_id FROM casus.cases_structure_answers csa, casus.roi_answer roi where roi.media_id > 0;


--
-- INIT_ALL_COURSES  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CASUS.init_all_courses(myMinID NUMBER,myMaxID NUMBER) is
myCount   Number;
CURSOR MyCursor (PARAM1 NUMBER,PARAM2 NUMBER) IS
	   select c.id
	   from casus.course c where c.id > PARAM1 and c.id <= PARAM2;
BEGIN
dbms_output.put_line('init_all_courses');
myCount := 0;
FOR c1_rec IN MyCursor(myMinID,myMaxID) LOOP
 	dbms_output.put('->casus.test_my_cursor(');
     dbms_output.put(c1_rec.id);
     dbms_output.put_line(')');
      casus.test_my_cursor(c1_rec.id);

   myCount := myCount +1;
END LOOP;

dbms_output.put('myCount=');
dbms_output.put_line(myCount);
dbms_output.put_line('init_all_courses done!');
EXCEPTION
		 WHEN NO_DATA_FOUND THEN myCount := 0;
END;

/


--
-- CS_ALL_MH_NAMES_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CASUS.CS_ALL_MH_NAMES_VIEW
(CASE_ID, CASE_NAME, CASE_USER_ID, CASE_GROUP_ID, CARD_ID, 
 CARD_NAME, TYPE, MEDIAHEADER_ID, PARENT_ID)
AS 
SELECT cs.case_id,
           di1.name,
           di1.user_id,
           di1.group_id,
           cs.card_id,
           di2.name,
           cs.TYPE,
           cs.mediaheader_id,
           cs.parent_id
      FROM cs_all_mh_view cs, data_items di1, data_items di2
     WHERE cs.case_id = di1.item_id AND cs.card_id = di2.item_id;


-- 
-- Non Foreign Key Constraints for Table ACCESS_URL 
-- 
ALTER TABLE CASUS.ACCESS_URL ADD (
  CONSTRAINT PK_ACCESS_URL
  PRIMARY KEY
  (PIN)
  USING INDEX CASUS.PK_ACCESS_URL
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table AICC_SESS_PLUGINS_URLS 
-- 
ALTER TABLE CASUS.AICC_SESS_PLUGINS_URLS ADD (
  CONSTRAINT AICC_SESS_PLUGINS_URLS_PK
  PRIMARY KEY
  (PLUGIN_ID, URL)
  USING INDEX CASUS.AICC_SESS_PLUGINS_URLS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table ANNO_SUMMARYFEEDBACKSTATEMENT 
-- 
ALTER TABLE CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT ADD (
  CONSTRAINT ANNO_SUMMARYFEEDBACKSTATEME_PK
  PRIMARY KEY
  (ANNOTATION_ID)
  USING INDEX CASUS.ANNO_SUMMARYFEEDBACKSTATEME_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table ANS_DETAILS 
-- 
ALTER TABLE CASUS.ANS_DETAILS ADD (
  CONSTRAINT PK_ANS_DETAILS
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.PK_ANS_DETAILS
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CARDADD_BOX 
-- 
ALTER TABLE CASUS.CARDADD_BOX ADD (
  CONSTRAINT CARDADD_BOX_PK
  PRIMARY KEY
  (ID)
  USING INDEX CASUS.CARDADD_BOX_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CARD_NAV 
-- 
ALTER TABLE CASUS.CARD_NAV ADD (
  CONSTRAINT CARD_NAV_ID_PK
  PRIMARY KEY
  (ID)
  USING INDEX CASUS.CARD_NAV_ID_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CASE_ENG_SETTING 
-- 
ALTER TABLE CASUS.CASE_ENG_SETTING ADD (
  CONSTRAINT CASE_ENG_SETTING_PK
  PRIMARY KEY
  (CASE_ID)
  USING INDEX CASUS.CASE_ENG_SETTING_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CASE_METADATA 
-- 
ALTER TABLE CASUS.CASE_METADATA ADD (
  CONSTRAINT CASE_ID_PK
  PRIMARY KEY
  (CASE_ID)
  USING INDEX CASUS.CASE_ID_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CASE_RATING_SUM 
-- 
ALTER TABLE CASUS.CASE_RATING_SUM ADD (
  CONSTRAINT CASE_RATING_SUM_PK
  PRIMARY KEY
  (CASE_ID)
  USING INDEX CASUS.CASE_RATING_SUM_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CASE_REVIEW_REF 
-- 
ALTER TABLE CASUS.CASE_REVIEW_REF ADD (
  CONSTRAINT CASE_REVIEW_REF_PK
  PRIMARY KEY
  (INTERNAL_ID)
  USING INDEX CASUS.CASE_REVIEW_REF_PK_IDX
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CASES_VIEW_TABLE 
-- 
ALTER TABLE CASUS.CASES_VIEW_TABLE ADD (
  CONSTRAINT CASES_VIEW_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.CASES_VIEW_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table C_COURSE_LASTUPDATE 
-- 
ALTER TABLE CASUS.C_COURSE_LASTUPDATE ADD (
  CONSTRAINT PK_C_COURSE_LASTUPDATE
  PRIMARY KEY
  (COURSE_ID)
  USING INDEX CASUS.PK_C_COURSE_LASTUPDATE
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table C_GROUP 
-- 
ALTER TABLE CASUS.C_GROUP ADD (
  CONSTRAINT PK_C_GROUP
  PRIMARY KEY
  (GROUP_ID)
  USING INDEX CASUS.PK_C_GROUP
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CG_TUTORS_MY_STUDENTS 
-- 
ALTER TABLE CASUS.CG_TUTORS_MY_STUDENTS ADD (
  CONSTRAINT COURSE_GROUP_TUTORS_MY_STUD_PK
  PRIMARY KEY
  (INTERNAL_ID)
  USING INDEX CASUS.COURSE_GROUP_TUTORS_MY_STUD_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CG_TUTORS_NAMED_LISTS 
-- 
ALTER TABLE CASUS.CG_TUTORS_NAMED_LISTS ADD (
  CONSTRAINT CG_TUTORS_NAMED_LISTS_PK
  PRIMARY KEY
  (INTERNAL_ID)
  USING INDEX CASUS.CG_TUTORS_NAMED_LISTS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CODES 
-- 
ALTER TABLE CASUS.CODES ADD (
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table COURSE 
-- 
ALTER TABLE CASUS.COURSE ADD (
  CONSTRAINT COURSE_PK
  PRIMARY KEY
  (ID)
  USING INDEX CASUS.COURSE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table COURSE_GROUPS 
-- 
ALTER TABLE CASUS.COURSE_GROUPS ADD (
  CONSTRAINT CG_PK
  PRIMARY KEY
  (COURSE_ID, GROUP_NR)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  DISABLE NOVALIDATE);


-- 
-- Non Foreign Key Constraints for Table COURSE_SHIBBOLETH_PROFILE_REF 
-- 
ALTER TABLE CASUS.COURSE_SHIBBOLETH_PROFILE_REF ADD (
  CONSTRAINT CSPR_PK_SEQ
  PRIMARY KEY
  (COURSE_ID, PROFILE_ID)
  USING INDEX CASUS.CSPR_PK_SEQ
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table C_PERMISSION 
-- 
ALTER TABLE CASUS.C_PERMISSION ADD (
  CONSTRAINT C_PERMISSION_PK
  PRIMARY KEY
  (PERM_ID)
  USING INDEX CASUS.C_PERMISSION_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table C_ROLE 
-- 
ALTER TABLE CASUS.C_ROLE ADD (
  CONSTRAINT C_ROLE_PK
  PRIMARY KEY
  (ROLE_ID)
  USING INDEX CASUS.C_ROLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table C_SESSION_ACTION 
-- 
ALTER TABLE CASUS.C_SESSION_ACTION ADD (
  CHECK (SESSION_ID IS NOT NULL)
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table C_USER_ARCHIVE_HELPER 
-- 
ALTER TABLE CASUS.C_USER_ARCHIVE_HELPER ADD (
  CONSTRAINT PK_C_USER_ARCHIVE_HELPER
  PRIMARY KEY
  (USER_ID)
  USING INDEX CASUS.PK_C_USER_ARCHIVE_HELPER
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table DATA_ITEMS 
-- 
ALTER TABLE CASUS.DATA_ITEMS ADD (
  CONSTRAINT DATA_ITEMS_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.DATA_ITEMS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table DR$USER_TEXT_INDEX$R 
-- 
ALTER TABLE CASUS.DR$USER_TEXT_INDEX$R ADD (
  CONSTRAINT DRC$USER_TEXT_INDEX$R
  PRIMARY KEY
  (ROW_NO)
  USING INDEX CASUS.DRC$USER_TEXT_INDEX$R
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table DUS 
-- 
ALTER TABLE CASUS.DUS ADD (
  CONSTRAINT DU_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.DU_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table DUS2 
-- 
ALTER TABLE CASUS.DUS2 ADD (
  CONSTRAINT DU2_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.DU2_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table EDUCATION 
-- 
ALTER TABLE CASUS.EDUCATION ADD (
  CONSTRAINT EDUCATION_PK
  PRIMARY KEY
  (NR, STATUS_NR, LANG)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  DISABLE NOVALIDATE);


-- 
-- Non Foreign Key Constraints for Table EXT_SESSION 
-- 
ALTER TABLE CASUS.EXT_SESSION ADD (
  CONSTRAINT EXTSESSION_PK
  PRIMARY KEY
  (SESSION_ID)
  USING INDEX CASUS.EXTSESSION_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table EXT_TOOL 
-- 
ALTER TABLE CASUS.EXT_TOOL ADD (
  CONSTRAINT EXTTOOL_PK
  PRIMARY KEY
  (TOOL_ID)
  USING INDEX CASUS.EXTTOOL_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table FINDINGS 
-- 
ALTER TABLE CASUS.FINDINGS ADD (
  CONSTRAINT FINDING_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.FINDING_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table FTANSWER 
-- 
ALTER TABLE CASUS.FTANSWER ADD (
  CONSTRAINT FTANSWER_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.FTANSWER_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table FTANSWER_DATA 
-- 
ALTER TABLE CASUS.FTANSWER_DATA ADD (
  CONSTRAINT FTANSWER_TEXT_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.FTANSWER_TEXT_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table GIFF 
-- 
ALTER TABLE CASUS.GIFF ADD (
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table HTMD 
-- 
ALTER TABLE CASUS.HTMD ADD (
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table HTMD_VS 
-- 
ALTER TABLE CASUS.HTMD_VS ADD (
  CONSTRAINT HTMD_VS_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  DISABLE NOVALIDATE);


-- 
-- Non Foreign Key Constraints for Table ID_TABLE 
-- 
ALTER TABLE CASUS.ID_TABLE ADD (
  CONSTRAINT ID_TABLE_PK
  PRIMARY KEY
  (ID_TABLE_ID)
  USING INDEX CASUS.ID_TABLE_PK
  ENABLE VALIDATE);

ALTER TABLE CASUS.ID_TABLE ADD (
  UNIQUE (TABLE_NAME)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table INDEX_META 
-- 
ALTER TABLE CASUS.INDEX_META ADD (
  CONSTRAINT INDEX_META_PK
  PRIMARY KEY
  (TYPE, TABLE_NAME, COLUMN_NAME)
  USING INDEX CASUS.INDEX_META_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table INDEX_REF 
-- 
ALTER TABLE CASUS.INDEX_REF ADD (
  CONSTRAINT INDEX_REF_PK
  PRIMARY KEY
  (WORD_ID, ITEM_ID)
  USING INDEX CASUS.INDEX_REF_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table INDEX_WORDS 
-- 
ALTER TABLE CASUS.INDEX_WORDS ADD (
  CONSTRAINT INDEX_WORDS_PK
  PRIMARY KEY
  (ID)
  USING INDEX CASUS.INDEX_WORDS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table JPEG 
-- 
ALTER TABLE CASUS.JPEG ADD (
  PRIMARY KEY
  (ITEM_ID, ORDER_NR)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table LISTS 
-- 
ALTER TABLE CASUS.LISTS ADD (
  CONSTRAINT LISTS_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR, INDEX_NR)
  USING INDEX CASUS.LISTS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table LONGMENU_HEADER 
-- 
ALTER TABLE CASUS.LONGMENU_HEADER ADD (
  CONSTRAINT PK_LONGMENU_HEADER
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.PK_LONGMENU_HEADER
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table LONGMENU_ITEMS 
-- 
ALTER TABLE CASUS.LONGMENU_ITEMS ADD (
  CHECK (PARENT_ID IS NOT NULL)
  ENABLE VALIDATE);

ALTER TABLE CASUS.LONGMENU_ITEMS ADD (
  CHECK (LANG IS NOT NULL)
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table LPCT 
-- 
ALTER TABLE CASUS.LPCT ADD (
  CONSTRAINT LPCT_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.LPCT_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table LRS 
-- 
ALTER TABLE CASUS.LRS ADD (
  CONSTRAINT LRS_PK
  PRIMARY KEY
  (ID)
  USING INDEX CASUS.LRS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MATRIX_ANSWER 
-- 
ALTER TABLE CASUS.MATRIX_ANSWER ADD (
  CONSTRAINT MATRIX_ANSWER_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.MATRIX_ANSWER_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MATRIX_ANSWER_COLS 
-- 
ALTER TABLE CASUS.MATRIX_ANSWER_COLS ADD (
  CONSTRAINT MXANSWER_COLS_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.MXANSWER_COLS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MATRIX_ANSWER_VALUES 
-- 
ALTER TABLE CASUS.MATRIX_ANSWER_VALUES ADD (
  CONSTRAINT MXANSWER_VALS_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.MXANSWER_VALS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MCANSWER 
-- 
ALTER TABLE CASUS.MCANSWER ADD (
  CONSTRAINT MCANSWER_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.MCANSWER_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MCANSWER_VA 
-- 
ALTER TABLE CASUS.MCANSWER_VA ADD (
  CONSTRAINT MCANSWER_TABLE_VA_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.MCANSWER_TABLE_VA_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MEDIAHEADER 
-- 
ALTER TABLE CASUS.MEDIAHEADER ADD (
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MEDIAHEADER_CONVERT_RESULTS 
-- 
ALTER TABLE CASUS.MEDIAHEADER_CONVERT_RESULTS ADD (
  PRIMARY KEY
  (PATH, ITEM_ID)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MEDIA_METADATA 
-- 
ALTER TABLE CASUS.MEDIA_METADATA ADD (
  CONSTRAINT MEDIA_METADATA_PK
  PRIMARY KEY
  (MEDIAID)
  USING INDEX CASUS.MEDIA_METADATA_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MEDICAL_FIELD 
-- 
ALTER TABLE CASUS.MEDICAL_FIELD ADD (
  CONSTRAINT MEDICAL_FIELD_PK
  PRIMARY KEY
  (NAME)
  USING INDEX CASUS.MEDICAL_FIELD_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MEDICAL_SUBFIELD 
-- 
ALTER TABLE CASUS.MEDICAL_SUBFIELD ADD (
  CONSTRAINT MEDICAL_SUBFIELD_PK
  PRIMARY KEY
  (NAME)
  USING INDEX CASUS.MEDICAL_SUBFIELD_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table META_INHERIT 
-- 
ALTER TABLE CASUS.META_INHERIT ADD (
  CONSTRAINT PK_META_INHERIT
  PRIMARY KEY
  (IH_TYPE, IH_TABLE)
  USING INDEX CASUS.PK_META_INHERIT
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table META_REF 
-- 
ALTER TABLE CASUS.META_REF ADD (
  CONSTRAINT PK_META_REF
  PRIMARY KEY
  (REF_TYPE, REF_ORDER)
  USING INDEX CASUS.PK_META_REF
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MM_TABLE 
-- 
ALTER TABLE CASUS.MM_TABLE ADD (
  CONSTRAINT MM_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.MM_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table MOOV 
-- 
ALTER TABLE CASUS.MOOV ADD (
  PRIMARY KEY
  (ITEM_ID, ORDER_NR)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table NCANSWER 
-- 
ALTER TABLE CASUS.NCANSWER ADD (
  CONSTRAINT NCANSWER_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.NCANSWER_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table NCANSWER_TEXT 
-- 
ALTER TABLE CASUS.NCANSWER_TEXT ADD (
  CONSTRAINT NCANSWER_TEXT_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.NCANSWER_TEXT_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table NETELMS_LIST 
-- 
ALTER TABLE CASUS.NETELMS_LIST ADD (
  CONSTRAINT NETELMS_LIST_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.NETELMS_LIST_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table NETELMS_THPS 
-- 
ALTER TABLE CASUS.NETELMS_THPS ADD (
  CONSTRAINT NETELMS_THPS_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.NETELMS_THPS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table NET_LISTS 
-- 
ALTER TABLE CASUS.NET_LISTS ADD (
  CONSTRAINT NET_LISTS_LISTS_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR, INDEX_NR)
  USING INDEX CASUS.NET_LISTS_LISTS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table NETS 
-- 
ALTER TABLE CASUS.NETS ADD (
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table PATIENTS 
-- 
ALTER TABLE CASUS.PATIENTS ADD (
  CONSTRAINT PATIENTS_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.PATIENTS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table PICT 
-- 
ALTER TABLE CASUS.PICT ADD (
  PRIMARY KEY
  (ITEM_ID, ORDER_NR)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table PICTUREHLBASE 
-- 
ALTER TABLE CASUS.PICTUREHLBASE ADD (
  CONSTRAINT PICTUREHLBASE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.PICTUREHLBASE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table PICTUREHLLIST 
-- 
ALTER TABLE CASUS.PICTUREHLLIST ADD (
  CHECK ("PARENT_ID" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHLLIST ADD (
  CHECK ("ORDER_NR" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHLLIST ADD (
  CONSTRAINT PICTUREHLLIST_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  DISABLE NOVALIDATE);


-- 
-- Non Foreign Key Constraints for Table PICTUREHL_POLYGON 
-- 
ALTER TABLE CASUS.PICTUREHL_POLYGON ADD (
  CHECK ("PARENT_ID" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_POLYGON ADD (
  CHECK ("ORDER_NR" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_POLYGON ADD (
  CHECK ("PT_NR" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_POLYGON ADD (
  CONSTRAINT PICTUREHL_POLYGON_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR, PT_NR)
  DISABLE NOVALIDATE);


-- 
-- Non Foreign Key Constraints for Table PICTUREHL_POSTEXT 
-- 
ALTER TABLE CASUS.PICTUREHL_POSTEXT ADD (
  CHECK ("PARENT_ID" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_POSTEXT ADD (
  CHECK ("ORDER_NR" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_POSTEXT ADD (
  CONSTRAINT PICTUREHL_POSTEXT_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  DISABLE NOVALIDATE);


-- 
-- Non Foreign Key Constraints for Table PINS_EXAM 
-- 
ALTER TABLE CASUS.PINS_EXAM ADD (
  PRIMARY KEY
  (PIN)
  USING INDEX
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table RDF 
-- 
ALTER TABLE CASUS.RDF ADD (
  CONSTRAINT RDF_PK
  PRIMARY KEY
  (RDF_ID)
  USING INDEX CASUS.RDF_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table REFERENCE_TABLE 
-- 
ALTER TABLE CASUS.REFERENCE_TABLE ADD (
  CONSTRAINT REFERENCE_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.REFERENCE_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table ROI_ANSWER 
-- 
ALTER TABLE CASUS.ROI_ANSWER ADD (
  CONSTRAINT ROI_ANSWER_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.ROI_ANSWER_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table ROLEPERMISSION_REF 
-- 
ALTER TABLE CASUS.ROLEPERMISSION_REF ADD (
  CONSTRAINT ROLEPERM_REF_PK
  PRIMARY KEY
  (RP_ID)
  USING INDEX CASUS.ROLEPERM_REF_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table SHIBBOLETH_ACCESS_PROFILE 
-- 
ALTER TABLE CASUS.SHIBBOLETH_ACCESS_PROFILE ADD (
  CONSTRAINT SHIBBOLETH_ACCESS_PROFILE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.SHIBBOLETH_ACCESS_PROFILE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table SHIBBOLETH_ACCESS_PROFILE_ACC 
-- 
ALTER TABLE CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC ADD (
  CONSTRAINT SHIBBOLETH_ACCESS_PROFILE_A_PK
  PRIMARY KEY
  (ITEM_ID, ORDER_NR)
  USING INDEX CASUS.SHIBBOLETH_ACCESS_PROFILE_A_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table SHIBBOLETH_FEDERATION 
-- 
ALTER TABLE CASUS.SHIBBOLETH_FEDERATION ADD (
  CONSTRAINT SHIB_FED_PK
  PRIMARY KEY
  (FEDERATION_ID)
  USING INDEX CASUS.SHIB_FED_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table SIMPLE_TABLE 
-- 
ALTER TABLE CASUS.SIMPLE_TABLE ADD (
  CONSTRAINT SIMPLE_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.SIMPLE_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table SLIDER_ANSWER 
-- 
ALTER TABLE CASUS.SLIDER_ANSWER ADD (
  CONSTRAINT SLIDER_ANSWER_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.SLIDER_ANSWER_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table SNOENDUNG 
-- 
ALTER TABLE CASUS.SNOENDUNG ADD (
  PRIMARY KEY
  (TEXT)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table SNOMED 
-- 
ALTER TABLE CASUS.SNOMED ADD (
  PRIMARY KEY
  (NUMMER)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table SNOVERWEIS 
-- 
ALTER TABLE CASUS.SNOVERWEIS ADD (
  PRIMARY KEY
  (BLOCK, VERWEISNR)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table SNOWORTREL 
-- 
ALTER TABLE CASUS.SNOWORTREL ADD (
  PRIMARY KEY
  (NUMMER, POS, WORTNR)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table SOCIALNET_CLICKS 
-- 
ALTER TABLE CASUS.SOCIALNET_CLICKS ADD (
  CONSTRAINT SOCIALNET_CLICKS_PK
  PRIMARY KEY
  (ID)
  USING INDEX CASUS.SOCIALNET_CLICKS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table STATUS 
-- 
ALTER TABLE CASUS.STATUS ADD (
  CONSTRAINT STATUS_PK
  PRIMARY KEY
  (NR, LANG)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  DISABLE NOVALIDATE);


-- 
-- Non Foreign Key Constraints for Table TESTITEM 
-- 
ALTER TABLE CASUS.TESTITEM ADD (
  CONSTRAINT TESTITEM_PK
  PRIMARY KEY
  (NOITEM_ID)
  USING INDEX CASUS.TESTITEM_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table TEXT 
-- 
ALTER TABLE CASUS.TEXT ADD (
  CONSTRAINT TEXT_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.TEXT_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table TXTD 
-- 
ALTER TABLE CASUS.TXTD ADD (
  CONSTRAINT TXTD_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.TXTD_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table UA_PEER_GROUP_PEER_HEADER 
-- 
ALTER TABLE CASUS.UA_PEER_GROUP_PEER_HEADER ADD (
  CONSTRAINT PEERGRP_HD_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.PEERGRP_HD_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table UID_GROUPS 
-- 
ALTER TABLE CASUS.UID_GROUPS ADD (
  CONSTRAINT PK_UID_GROUPS
  PRIMARY KEY
  (PARENT_UID, CHILD_UID)
  USING INDEX CASUS.PK_UID_GROUPS
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table ULANSWER 
-- 
ALTER TABLE CASUS.ULANSWER ADD (
  CONSTRAINT ULANSWER_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.ULANSWER_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table ULANSWER_TEXT 
-- 
ALTER TABLE CASUS.ULANSWER_TEXT ADD (
  CONSTRAINT ULANSWER_HLTEXT_TABLE_VA_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.ULANSWER_HLTEXT_TABLE_VA_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table ULANSWER_VA 
-- 
ALTER TABLE CASUS.ULANSWER_VA ADD (
  CONSTRAINT ULANSWER_VA_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.ULANSWER_VA_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table USERANSWER_VA_RELATIONAL 
-- 
ALTER TABLE CASUS.USERANSWER_VA_RELATIONAL ADD (
  PRIMARY KEY
  (PARENT_ID, CARD_ID, INDEX_NR, MODIFICATION_DATE)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table USER_NET 
-- 
ALTER TABLE CASUS.USER_NET ADD (
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table USER_NET_LINKS 
-- 
ALTER TABLE CASUS.USER_NET_LINKS ADD (
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table USER_NET_LISTS 
-- 
ALTER TABLE CASUS.USER_NET_LISTS ADD (
  CONSTRAINT USER_NET_LISTS_LISTS_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR, INDEX_NR)
  DISABLE NOVALIDATE);


-- 
-- Non Foreign Key Constraints for Table USERPERMISSION_REF 
-- 
ALTER TABLE CASUS.USERPERMISSION_REF ADD (
  CONSTRAINT USERPERM_REF_PK
  PRIMARY KEY
  (UP_ID)
  USING INDEX CASUS.USERPERM_REF_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table USER_SUMMARY_STATEMENTS 
-- 
ALTER TABLE CASUS.USER_SUMMARY_STATEMENTS ADD (
  CONSTRAINT USER_SUMM_STMT_PK
  PRIMARY KEY
  (ID)
  USING INDEX CASUS.USER_SUMM_STMT_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table USRANS_CHGLOG 
-- 
ALTER TABLE CASUS.USRANS_CHGLOG ADD (
  CONSTRAINT USRANS_CHGLOG_PK
  PRIMARY KEY
  (INTERNAL_ID)
  USING INDEX CASUS.USRANS_CHGLOG_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table VARARRAY_TABLE 
-- 
ALTER TABLE CASUS.VARARRAY_TABLE ADD (
  CONSTRAINT VARARRAY_TABLE_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.VARARRAY_TABLE_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table VARARRAY_TABLE_VA 
-- 
ALTER TABLE CASUS.VARARRAY_TABLE_VA ADD (
  CONSTRAINT VARARRAY_TABLE_VA_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.VARARRAY_TABLE_VA_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table AIFF 
-- 
ALTER TABLE CASUS.AIFF ADD (
  PRIMARY KEY
  (ITEM_ID, ORDER_NR)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table ANSWER_COMMENT 
-- 
ALTER TABLE CASUS.ANSWER_COMMENT ADD (
  CONSTRAINT ANSWER_COMMENT_TABLE_VA_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.ANSWER_COMMENT_TABLE_VA_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CARDS 
-- 
ALTER TABLE CASUS.CARDS ADD (
  CONSTRAINT CARDS_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.CARDS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CASES 
-- 
ALTER TABLE CASUS.CASES ADD (
  CONSTRAINT CASES_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.CASES_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CASES_BACKUP 
-- 
ALTER TABLE CASUS.CASES_BACKUP ADD (
  CONSTRAINT CASES_BACKUP_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.CASES_BACKUP_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table CASES_TEST 
-- 
ALTER TABLE CASUS.CASES_TEST ADD (
  CONSTRAINT CASES_TEST_PK
  PRIMARY KEY
  (ITEM_ID)
  USING INDEX CASUS.CASES_TEST_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table C_USER 
-- 
ALTER TABLE CASUS.C_USER ADD (
  CONSTRAINT C_USER_PK
  PRIMARY KEY
  (USER_ID)
  USING INDEX CASUS.C_USER_PK
  ENABLE VALIDATE);

ALTER TABLE CASUS.C_USER ADD (
  UNIQUE (LOGIN)
  USING INDEX
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table NETELMS_FDGS 
-- 
ALTER TABLE CASUS.NETELMS_FDGS ADD (
  CONSTRAINT NETELMS_FDGS_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.NETELMS_FDGS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table NETELMS_HYPOS 
-- 
ALTER TABLE CASUS.NETELMS_HYPOS ADD (
  CONSTRAINT NETELMS_HYPOS_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.NETELMS_HYPOS_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table NETELMS_LINK_HYPO_FDG 
-- 
ALTER TABLE CASUS.NETELMS_LINK_HYPO_FDG ADD (
  CONSTRAINT NETELMS_LINK_HYPO_FDG_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.NETELMS_LINK_HYPO_FDG_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table NETELMS_LINK_HYPO_THP 
-- 
ALTER TABLE CASUS.NETELMS_LINK_HYPO_THP ADD (
  CONSTRAINT NETELMS_LINK_HYPO_THP_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  USING INDEX CASUS.NETELMS_LINK_HYPO_THP_PK
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table PICTUREHL_ARROW 
-- 
ALTER TABLE CASUS.PICTUREHL_ARROW ADD (
  CHECK ("PARENT_ID" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_ARROW ADD (
  CHECK ("ORDER_NR" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_ARROW ADD (
  CONSTRAINT PICTUREHL_ARROW_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  DISABLE NOVALIDATE);


-- 
-- Non Foreign Key Constraints for Table PICTUREHL_ICON 
-- 
ALTER TABLE CASUS.PICTUREHL_ICON ADD (
  CHECK ("PARENT_ID" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_ICON ADD (
  CHECK ("ORDER_NR" IS NOT NULL)
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_ICON ADD (
  CONSTRAINT PICTUREHL_ICON_PK
  PRIMARY KEY
  (PARENT_ID, ORDER_NR)
  DISABLE NOVALIDATE);


-- 
-- Non Foreign Key Constraints for Table C_SESSION 
-- 
ALTER TABLE CASUS.C_SESSION ADD (
  CONSTRAINT C_SESSION_PK
  PRIMARY KEY
  (SESSION_ID)
  USING INDEX CASUS.C_SESSION_ID_IDX
  ENABLE VALIDATE);


-- 
-- Non Foreign Key Constraints for Table USERANSWER_VA 
-- 
ALTER TABLE CASUS.USERANSWER_VA ADD (
  CONSTRAINT USERANSWER_VA_PK
  PRIMARY KEY
  (PARENT_ID, CARD_ID)
  USING INDEX CASUS.USERANSWER_VA_PK
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table COURSE_GROUP_TUTORS 
-- 
ALTER TABLE CASUS.COURSE_GROUP_TUTORS ADD (
  CONSTRAINT CGT_FK 
  FOREIGN KEY (COURSE_ID, GROUP_NR) 
  REFERENCES CASUS.COURSE_GROUPS (COURSE_ID,GROUP_NR)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);


-- 
-- Foreign Key Constraints for Table DUS 
-- 
ALTER TABLE CASUS.DUS ADD (
  CONSTRAINT DU_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table DUS2 
-- 
ALTER TABLE CASUS.DUS2 ADD (
  CONSTRAINT DU2_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table FINDINGS 
-- 
ALTER TABLE CASUS.FINDINGS ADD (
  CONSTRAINT FINDING_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table FTANSWER 
-- 
ALTER TABLE CASUS.FTANSWER ADD (
  CONSTRAINT FTANSWER_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table FTANSWER_DATA 
-- 
ALTER TABLE CASUS.FTANSWER_DATA ADD (
  CONSTRAINT FTANSWER_TEXT_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table GIFF 
-- 
ALTER TABLE CASUS.GIFF ADD (
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table HTMD 
-- 
ALTER TABLE CASUS.HTMD ADD (
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table HTMD_VS 
-- 
ALTER TABLE CASUS.HTMD_VS ADD (
  CONSTRAINT HTMD_VS_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table INDEX_REF 
-- 
ALTER TABLE CASUS.INDEX_REF ADD (
  CONSTRAINT INDEX_REF_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table JPEG 
-- 
ALTER TABLE CASUS.JPEG ADD (
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table LISTS 
-- 
ALTER TABLE CASUS.LISTS ADD (
  CONSTRAINT LISTS_PK_FK 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table LPCT 
-- 
ALTER TABLE CASUS.LPCT ADD (
  CONSTRAINT LPCT_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table MATRIX_ANSWER 
-- 
ALTER TABLE CASUS.MATRIX_ANSWER ADD (
  CONSTRAINT MATRIX_ANSWER_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table MATRIX_ANSWER_COLS 
-- 
ALTER TABLE CASUS.MATRIX_ANSWER_COLS ADD (
  CONSTRAINT MXANSWER_COLS_FK 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table MATRIX_ANSWER_VALUES 
-- 
ALTER TABLE CASUS.MATRIX_ANSWER_VALUES ADD (
  CONSTRAINT MXANSWER_VALS_FK 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table MCANSWER 
-- 
ALTER TABLE CASUS.MCANSWER ADD (
  CONSTRAINT MCANSWER_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table MCANSWER_VA 
-- 
ALTER TABLE CASUS.MCANSWER_VA ADD (
  CONSTRAINT MCANSWER_TABLE_VA_FK 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table MEDIAHEADER 
-- 
ALTER TABLE CASUS.MEDIAHEADER ADD (
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table MEDICAL_SUBFIELD 
-- 
ALTER TABLE CASUS.MEDICAL_SUBFIELD ADD (
  CONSTRAINT MEDICAL_SUBFIELD_FK 
  FOREIGN KEY (FIELD) 
  REFERENCES CASUS.MEDICAL_FIELD (NAME)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table MM_TABLE 
-- 
ALTER TABLE CASUS.MM_TABLE ADD (
  CONSTRAINT MM_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table MOOV 
-- 
ALTER TABLE CASUS.MOOV ADD (
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table NCANSWER 
-- 
ALTER TABLE CASUS.NCANSWER ADD (
  CONSTRAINT NCANSWER_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table NCANSWER_TEXT 
-- 
ALTER TABLE CASUS.NCANSWER_TEXT ADD (
  CONSTRAINT NCANSWER_TEXT_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table NETELMS_THPS 
-- 
ALTER TABLE CASUS.NETELMS_THPS ADD (
  CONSTRAINT NETELMS_THPS_FK2 
  FOREIGN KEY (PARENT_ID, ORDER_NR) 
  REFERENCES CASUS.NETELMS_LIST (PARENT_ID,ORDER_NR)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table NETS 
-- 
ALTER TABLE CASUS.NETS ADD (
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table PATIENTS 
-- 
ALTER TABLE CASUS.PATIENTS ADD (
  CONSTRAINT PATIENTS_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table PICT 
-- 
ALTER TABLE CASUS.PICT ADD (
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table PICTUREHLBASE 
-- 
ALTER TABLE CASUS.PICTUREHLBASE ADD (
  CONSTRAINT PICTUREHLBASE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table PICTUREHLLIST 
-- 
ALTER TABLE CASUS.PICTUREHLLIST ADD (
  CONSTRAINT PICTUREHLLIST_FK 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.PICTUREHLBASE (ITEM_ID)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);


-- 
-- Foreign Key Constraints for Table PICTUREHL_POLYGON 
-- 
ALTER TABLE CASUS.PICTUREHL_POLYGON ADD (
  CONSTRAINT PICTUREHL_POLYGON_FK1 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.PICTUREHLBASE (ITEM_ID)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_POLYGON ADD (
  CONSTRAINT PICTUREHL_POLYGON_FK2 
  FOREIGN KEY (PARENT_ID, ORDER_NR) 
  REFERENCES CASUS.PICTUREHLLIST (PARENT_ID,ORDER_NR)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);


-- 
-- Foreign Key Constraints for Table PICTUREHL_POSTEXT 
-- 
ALTER TABLE CASUS.PICTUREHL_POSTEXT ADD (
  CONSTRAINT PICTUREHL_POSTEXT_FK1 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.PICTUREHLBASE (ITEM_ID)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_POSTEXT ADD (
  CONSTRAINT PICTUREHL_POSTEXT_FK2 
  FOREIGN KEY (PARENT_ID, ORDER_NR) 
  REFERENCES CASUS.PICTUREHLLIST (PARENT_ID,ORDER_NR)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);


-- 
-- Foreign Key Constraints for Table REFERENCE_TABLE 
-- 
ALTER TABLE CASUS.REFERENCE_TABLE ADD (
  CONSTRAINT REFERENCE_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table ROI_ANSWER 
-- 
ALTER TABLE CASUS.ROI_ANSWER ADD (
  CONSTRAINT ROI_ANSWER_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table SIMPLE_TABLE 
-- 
ALTER TABLE CASUS.SIMPLE_TABLE ADD (
  CONSTRAINT SIMPLE_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table SLIDER_ANSWER 
-- 
ALTER TABLE CASUS.SLIDER_ANSWER ADD (
  CONSTRAINT SLIDER_ANSWER_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table SNOWORTREL 
-- 
ALTER TABLE CASUS.SNOWORTREL ADD (
  FOREIGN KEY (NUMMER) 
  REFERENCES CASUS.SNOMED (NUMMER)
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table TEXT 
-- 
ALTER TABLE CASUS.TEXT ADD (
  CONSTRAINT TEXT_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table TXTD 
-- 
ALTER TABLE CASUS.TXTD ADD (
  CONSTRAINT TXTD_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table UA_PEER_GROUP_PREPROCESSED 
-- 
ALTER TABLE CASUS.UA_PEER_GROUP_PREPROCESSED ADD (
  CONSTRAINT PEERGRP_DAT_FK 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.UA_PEER_GROUP_PEER_HEADER (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table ULANSWER 
-- 
ALTER TABLE CASUS.ULANSWER ADD (
  CONSTRAINT ULANSWER_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table ULANSWER_TEXT 
-- 
ALTER TABLE CASUS.ULANSWER_TEXT ADD (
  CONSTRAINT ULANSWER_HLTEXT_TABLE_VA_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table ULANSWER_VA 
-- 
ALTER TABLE CASUS.ULANSWER_VA ADD (
  CONSTRAINT ULANSWER_VA_FK 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table VARARRAY_TABLE 
-- 
ALTER TABLE CASUS.VARARRAY_TABLE ADD (
  CONSTRAINT VARARRAY_TABLE_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table VARARRAY_TABLE_VA 
-- 
ALTER TABLE CASUS.VARARRAY_TABLE_VA ADD (
  CONSTRAINT VARARRAY_TABLE_VA_FK 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table AIFF 
-- 
ALTER TABLE CASUS.AIFF ADD (
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table ANSWER_COMMENT 
-- 
ALTER TABLE CASUS.ANSWER_COMMENT ADD (
  CONSTRAINT ANSWER_COMMENT_TABLE_VA_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table CARDS 
-- 
ALTER TABLE CASUS.CARDS ADD (
  CONSTRAINT CARDS_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table CASES 
-- 
ALTER TABLE CASUS.CASES ADD (
  CONSTRAINT CASES_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table CASES_BACKUP 
-- 
ALTER TABLE CASUS.CASES_BACKUP ADD (
  CONSTRAINT CASES_BACKUP_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table CASES_TEST 
-- 
ALTER TABLE CASUS.CASES_TEST ADD (
  CONSTRAINT CASES_TEST_FK 
  FOREIGN KEY (ITEM_ID) 
  REFERENCES CASUS.DATA_ITEMS (ITEM_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table COURSE_GROUP_DOMAINS 
-- 
ALTER TABLE CASUS.COURSE_GROUP_DOMAINS ADD (
  CONSTRAINT CGD_FK 
  FOREIGN KEY (COURSE_ID, GROUP_NR) 
  REFERENCES CASUS.COURSE_GROUPS (COURSE_ID,GROUP_NR)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);


-- 
-- Foreign Key Constraints for Table C_USER 
-- 
ALTER TABLE CASUS.C_USER ADD (
  CONSTRAINT C_USER_FK2 
  FOREIGN KEY (EDUCATION, STATUS, LANG) 
  REFERENCES CASUS.EDUCATION (NR,STATUS_NR,LANG)
  DISABLE NOVALIDATE);


-- 
-- Foreign Key Constraints for Table NETELMS_FDGS 
-- 
ALTER TABLE CASUS.NETELMS_FDGS ADD (
  CONSTRAINT NETELMS_FDGS_FK2 
  FOREIGN KEY (PARENT_ID, ORDER_NR) 
  REFERENCES CASUS.NETELMS_LIST (PARENT_ID,ORDER_NR)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table NETELMS_HYPOS 
-- 
ALTER TABLE CASUS.NETELMS_HYPOS ADD (
  CONSTRAINT NETELMS_HYPOS_FK2 
  FOREIGN KEY (PARENT_ID, ORDER_NR) 
  REFERENCES CASUS.NETELMS_LIST (PARENT_ID,ORDER_NR)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table NETELMS_LINK_HYPO_FDG 
-- 
ALTER TABLE CASUS.NETELMS_LINK_HYPO_FDG ADD (
  CONSTRAINT NETELMS_LINK_HYPO_FDG_FK2 
  FOREIGN KEY (PARENT_ID, ORDER_NR) 
  REFERENCES CASUS.NETELMS_LIST (PARENT_ID,ORDER_NR)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table NETELMS_LINK_HYPO_THP 
-- 
ALTER TABLE CASUS.NETELMS_LINK_HYPO_THP ADD (
  CONSTRAINT NETELMS_LINK_HYPO_THP_FK2 
  FOREIGN KEY (PARENT_ID, ORDER_NR) 
  REFERENCES CASUS.NETELMS_LIST (PARENT_ID,ORDER_NR)
  ON DELETE CASCADE
  ENABLE VALIDATE);


-- 
-- Foreign Key Constraints for Table PICTUREHL_ARROW 
-- 
ALTER TABLE CASUS.PICTUREHL_ARROW ADD (
  CONSTRAINT PICTUREHL_ARROW_FK1 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.PICTUREHLBASE (ITEM_ID)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_ARROW ADD (
  CONSTRAINT PICTUREHL_ARROW_FK2 
  FOREIGN KEY (PARENT_ID, ORDER_NR) 
  REFERENCES CASUS.PICTUREHLLIST (PARENT_ID,ORDER_NR)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);


-- 
-- Foreign Key Constraints for Table PICTUREHL_ICON 
-- 
ALTER TABLE CASUS.PICTUREHL_ICON ADD (
  CONSTRAINT PICTUREHL_ICON_FK1 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.PICTUREHLBASE (ITEM_ID)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.PICTUREHL_ICON ADD (
  CONSTRAINT PICTUREHL_ICON_FK2 
  FOREIGN KEY (PARENT_ID, ORDER_NR) 
  REFERENCES CASUS.PICTUREHLLIST (PARENT_ID,ORDER_NR)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);


-- 
-- Foreign Key Constraints for Table C_SESSION 
-- 
ALTER TABLE CASUS.C_SESSION ADD (
  CONSTRAINT C_SESSION_FK1 
  FOREIGN KEY (USER_ID) 
  REFERENCES CASUS.C_USER (USER_ID)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.C_SESSION ADD (
  CONSTRAINT C_SESSION_FK2 
  FOREIGN KEY (CASE_ID) 
  REFERENCES CASUS.CASES (ITEM_ID)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);


-- 
-- Foreign Key Constraints for Table USERANSWER_VA 
-- 
ALTER TABLE CASUS.USERANSWER_VA ADD (
  CONSTRAINT USERANSWER_VA_FK1 
  FOREIGN KEY (PARENT_ID) 
  REFERENCES CASUS.C_SESSION (SESSION_ID)
  ON DELETE CASCADE
  DISABLE NOVALIDATE);

ALTER TABLE CASUS.USERANSWER_VA ADD (
  CONSTRAINT USERANSWER_VA_FK2 
  FOREIGN KEY (CARD_ID) 
  REFERENCES CASUS.CARDS (ITEM_ID)
  DISABLE NOVALIDATE);


GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ACCESS_URL TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ADDCARD_CLINREASON TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.ADDCARD_CLINREAS_REAL_ID TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ADDCARD_MOV_CNT TO CASUS_ADMIN;

GRANT INSERT ON CASUS.ADMIN_LOG TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.AICC_SESS_PLUGIN TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ANNO_REFS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_ADMIN;

GRANT SELECT ON CASUS.ANNOTATION_ID_SEQ TO CASUS_ADMIN;

GRANT INSERT, SELECT ON CASUS.ANNOTATIONS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ANS_DETAILS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ANSWER_EXPLANATION TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ASSOC_PARENT TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.AUTHORING_MENUS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.BATCHINITNEWCSESSION_STATUS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARDADD TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARDADD_BOX TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARDADD_COSTS TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.CARDADD_ID_SEQ TO CASUS_ADMIN;

GRANT INSERT, SELECT ON CASUS.CARD_CHG TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARD_NAV TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARD_RULES TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CARD_RULES_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARD_RULES_SPEC TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CARD_RULES_SPEC_SEQ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_ACC TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_DEPENDENCIES TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_ENG_SETTING TO CASUS_ADMIN;

GRANT INSERT, SELECT, UPDATE ON CASUS.CASE_FLAGS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_INTERNET TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT ON CASUS.CASE_LM_LISTS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_METADATA TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_METADATA_ADD TO CASUS_ADMIN;

GRANT INSERT, SELECT, UPDATE ON CASUS.CASE_RADIO TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_RATING TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.CASERATING_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_RATING_SUM TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASE_RESOURCES_VIEW TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASEREVIEWER_ID_SEQ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_REVIEW_REF TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_SUMM_COMP TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_SUMM_CONF TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.CASESUMM_ID_SEQ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_TARGET_GROUP TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CERTIFICATE TO CASUS_ADMIN;

GRANT SELECT ON CASUS.C_GROUP TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_GROUP_EMAILDOM TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_GROUP_SUBGROUPS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.C_GROUP_USERS TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CGT_NAMEDLIST_ID_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CLICKS_ID_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CLINREASON_RATE TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CME_CASE_REF TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.COU_EXT_COURSE_BOOKINGS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_ACC TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT ON CASUS.COURSE_CASE_REF TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_CASES_RULES TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT ON CASUS.COURSE_CONFERENCING TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_CR_SETTINGS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_GROUP_NAME_VIEW TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_GROUPS TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.COURSEGROUP_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_GROUP_TUTORS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_ID_SEQ TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSENAME_CASE_USER_VIEW TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC_VIEW TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_VIEW TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_PERMISSION TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_ROLE TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CSA_DETAILS_SEQ TO CASUS_ADMIN;

GRANT INSERT, SELECT ON CASUS.C_SESSION_ACTION TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_ADMIN;

GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW TO CASUS_ADMIN;

GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW2 TO CASUS_ADMIN;

GRANT SELECT ON CASUS.C_SESSION_ACTION_RANK_VIEW TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_ACTIVE TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_ADMIN;

GRANT INSERT, SELECT ON CASUS.C_SESSION_DELETE TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_LOG TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_LOG_CHG TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_PERMUTATION TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT ON CASUS.C_SESSION_STATS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_STATS2 TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT ON CASUS.C_SESSION_2_COURSE TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_ADMIN;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_USER_CHG TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_USER_ROLES TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.DATA_ITEMS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.DATA_ITEMS_CHG TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.DUS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.DYNAMIC_CARDS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.EDUCATION TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.EVAL_MAIN_SEQ TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.EXPL_SEQ TO CASUS_ADMIN;

GRANT SELECT ON CASUS.FIELD TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.FINDINGS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.FTANSWER TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.FTANSWER_DATA TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.FTANSWER_ITEM TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.GROUP_ACC TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.GROUP_ACC2 TO CASUS_ADMIN;

GRANT SELECT ON CASUS.GROUP_ID_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.GROUP_LMHEADER TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.GROUP_SUBSCR TO CASUS_ADMIN;

GRANT SELECT ON CASUS.GUEST_ID_SEQ TO CASUS_ADMIN;

GRANT SELECT ON CASUS.HL_ID_SEQ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.HTMD TO CASUS_ADMIN;

GRANT SELECT ON CASUS.HTMD_LAST_CHG_VIEW TO CASUS_ADMIN;

GRANT INSERT, SELECT, UPDATE ON CASUS.IMPPADITION TO CASUS_ADMIN;

GRANT SELECT ON CASUS.IMPPQUESTIONS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.INDEX_META TO CASUS_ADMIN;

GRANT SELECT ON CASUS.INDEX_REF TO CASUS_ADMIN;

GRANT SELECT ON CASUS.INDEX_WORDS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.ITEM_ID_SEQ TO CASUS_ADMIN;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.LAB_SUBLISTS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LISTS TO CASUS_ADMIN;

GRANT INSERT ON CASUS.LISTS_CHG TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_CATALOG TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_CATALOGDESCR TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_CATALOG_HAMB TO CASUS_ADMIN;

GRANT SELECT ON CASUS.LOCKS TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.LO_CON_SEQ TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.LO_EDGE_ID_SEQ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_ENDTERMS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENT TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENT_ACC TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENT_OBJ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENT_ORDER TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_GROUP TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_GROUP_CATALOG TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_MAPPING TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_MAT_ACC TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LONGMENU_HEADER TO CASUS_ADMIN;

GRANT SELECT ON CASUS.LONGMENU_HEADER_ID_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LONGMENU_ITEMS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.LONGMENU_ITEMS_ID_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_OBJECTIVE TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_RESOURCES TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.LO_SEQ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_STARTTERMS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_USER TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_USER_ROLE TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.LO_USER_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_VERBS TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.LO2_SEQ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LPCT TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LRS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.LRS_ID_SEQ TO CASUS_ADMIN;

GRANT INSERT, SELECT ON CASUS.MAIL_MESSAGE TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.MAIL_MESSAGE_ID_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MAPPINGANSWER TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MAPPINGANSWER_CNX TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.MATRIX_ANSWER TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.MATRIX_ANSWER_COLS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.MCANSWER TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.MCANSWER_VA TO CASUS_ADMIN;

GRANT INSERT, SELECT ON CASUS.MCANSWER_VA_CHG TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.MEDIAHEADER TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.MEDIA_MANAGER_ITEM TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MEDIA_METADATA TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.METADATA_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MM_TABLE TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NCANSWER TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NCANSWER_TEXT TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_LIST TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_THPS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.NET_ID_SEQ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETS TO CASUS_ADMIN;

GRANT ALTER, SELECT ON CASUS.NET2_ID_SEQ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.OBJECT_MAPPING TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.OBJECT_VERSIONS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PATIENTS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2B TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHLBASE TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHLLIST TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHL_POLYGON TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHL_POSTEXT TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.PINS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.PINS_EXAM TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.RECALC_SCORE TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT ON CASUS.REPORTS_TMP TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ROI_ANSWER TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ROLEPERMISSION_REF TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.SEQ_AND_SITE TO CASUS_ADMIN;

GRANT SELECT ON CASUS.SESSION_ID_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SLIDER_ANSWER TO CASUS_ADMIN;

GRANT INSERT, SELECT ON CASUS.SOCIALNET_CLICKS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.STATUS TO CASUS_ADMIN;

GRANT INSERT ON CASUS.STREAMING_MM_ACTIONS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_ADMIN;

GRANT SELECT ON CASUS.SUBFIELD TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SUBSCRIPTION TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_ADMIN;

GRANT SELECT ON CASUS.SUBSCR_PROJ TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.SUBSCR_TUTORS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SUPPORTREQUEST TO CASUS_ADMIN;

GRANT INSERT ON CASUS.SWITCH_TEST TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.TEXT TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.TXTD TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ULANSWER TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ULANSWER_TEXT TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ULANSWER_VA TO CASUS_ADMIN;

GRANT SELECT ON CASUS.UNIQUE_CASE_IDENTIFIER_1 TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.UPDATE_USER_RULE TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.URL_TOKEN TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_ADMIN;

GRANT SELECT ON CASUS.URL_TOKEN_SEQ TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.USERANSWERS_SUMMARY TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT ON CASUS.USERANSWER_VA_RESET TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_EMAILOPT TO CASUS_ADMIN;

GRANT SELECT ON CASUS.USER_ID_SEQ TO CASUS_ADMIN;

GRANT SELECT ON CASUS.USER_NET_HYPOS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.USER_NET_LISTS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.USERPERMISSION_REF TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.USRANS_CHGLOG TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.VERSIONINGCREATEPATHS TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANWALKUP TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.VERSIONINGREMOVE TO CASUS_ADMIN;

GRANT INSERT, SELECT, UPDATE ON CASUS.ACCESS_URL TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ADDCARD_CLINREASON TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.ADDCARD_CLINREAS_REAL_ID TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ADDCARD_MOV_CNT TO CASUS_AUTHOR;

GRANT INSERT ON CASUS.ADMIN_LOG TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.AICC_SESS_PLUGIN TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ANNO_REFS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.ANNOTATION_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ANNOTATIONS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ANNOTATIONS_CASE_REF TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ANS_DETAILS TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ANSWER_EXPLANATION TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.ASSOC_PARENT TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.AUTHORING_MENUS TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARDADD TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARDADD_BOX TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CARDADD_COSTS TO CASUS_AUTHOR;

GRANT ALTER, SELECT ON CASUS.CARDADD_ID_SEQ TO CASUS_AUTHOR;

GRANT INSERT, SELECT ON CASUS.CARD_CHG TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARD_NAV TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARD_RULES TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CARD_RULES_SEQ TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARD_RULES_SPEC TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CARD_RULES_SPEC_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT ON CASUS.CASE_ACC TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_CODES TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.CASE_COMMENTS TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.CASE_DEPENDENCIES TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_ENG_SETTING TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.CASE_FLAGS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASE_INFO_LIST TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_INTERNET TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT ON CASUS.CASE_LM_LISTS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_METADATA TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT ON CASUS.CASE_METADATA_ADD TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_PROPERTIES TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.CASE_RADIO TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_RATING TO CASUS_AUTHOR;

GRANT ALTER, SELECT ON CASUS.CASERATING_SEQ TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_RATING_SUM TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.CASE_RESOURCES TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASE_RESOURCES_VIEW TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASEREVIEWER_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_REVIEW_REF TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_SUMM_COMP TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_SUMM_CONF TO CASUS_AUTHOR;

GRANT ALTER, SELECT ON CASUS.CASESUMM_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_TARGET_GROUP TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.CERTIFICATE TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_GROUP TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_GROUP_EMAILDOM TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_GROUP_SUBGROUPS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.C_GROUP_USERS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CGT_NAMEDLIST_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CLICKS_ID_SEQ TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CLINREASON_RATE TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CME_CASE_REF TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CODES TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.COU_EXT_COURSE_BOOKINGS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_ACC TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_CASE_REF TO CASUS_AUTHOR;

GRANT INSERT, SELECT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_CASES_RULES TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_CHG TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT ON CASUS.COURSE_CONFERENCING TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_CR_SETTINGS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_GROUP_NAME_VIEW TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_GROUPS TO CASUS_AUTHOR;

GRANT ALTER, SELECT ON CASUS.COURSEGROUP_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_GROUP_TUTORS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_ID_SEQ TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSENAME_CASE_USER_VIEW TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC_VIEW TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_STUDENT_REF TO CASUS_AUTHOR;

GRANT INSERT, SELECT ON CASUS.COURSE_STUDENT_REF_CHG TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_VIEW TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_PERMISSION TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_ROLE TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CSA_DETAILS_SEQ TO CASUS_AUTHOR;

GRANT INSERT, SELECT ON CASUS.C_SESSION_ACTION TO CASUS_AUTHOR;

GRANT INSERT, SELECT ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW2 TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.C_SESSION_ACTION_RANK_VIEW TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT ON CASUS.C_SESSION_ACTIVE TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_AVG_SUCCESS TO CASUS_AUTHOR;

GRANT INSERT, SELECT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_AVG_SUCCESS_TEST TO CASUS_AUTHOR;

GRANT INSERT, SELECT ON CASUS.C_SESSION_DELETE TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_SESSION_LOG TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_SESSION_LOG_CHG TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_PERMUTATION TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.C_SESSION_STATS TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.C_SESSION_STATS2 TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_2_COURSE TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_USER_CHG TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_USER_ROLES TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.DATA_ITEMS TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.DATA_ITEMS_CHG TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.DUS TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.DYNAMIC_CARDS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.EDUCATION TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.EVAL_MAIN_SEQ TO CASUS_AUTHOR;

GRANT ALTER, SELECT ON CASUS.EXPL_SEQ TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.FIELD TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.FINDINGS TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.FTANSWER TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.FTANSWER_DATA TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.FTANSWER_ITEM TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.GROUP_ACC TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.GROUP_ACC2 TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.GROUP_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.GROUP_LMHEADER TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.GROUP_SUBSCR TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.GUEST_ID_SEQ TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.HL_ID_SEQ TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.HTMD TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.HTMD_LAST_CHG_VIEW TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.IMPPADITION TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.IMPPQUESTIONS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.INDEX_META TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.INDEX_REF TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.INDEX_WORDS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.ITEM_ID_SEQ TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.LAB_SUBLISTS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LISTS TO CASUS_AUTHOR;

GRANT INSERT ON CASUS.LISTS_CHG TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LO_CATALOG TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LO_CATALOGDESCR TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LO_CATALOG_HAMB TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LOCKS TO CASUS_AUTHOR;

GRANT ALTER, SELECT ON CASUS.LO_CON_SEQ TO CASUS_AUTHOR;

GRANT ALTER, SELECT ON CASUS.LO_EDGE_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_ENDTERMS TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.LO_EVENT TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENT_ACC TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENT_OBJ TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.LO_EVENT_ORDER TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LO_GROUP TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LO_GROUP_CATALOG TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LO_MAPPING TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_MAT_ACC TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LONGMENU_HEADER TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LONGMENU_HEADER_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LONGMENU_ITEMS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LONGMENU_ITEMS_ID_SEQ TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.LO_OBJECTIVE TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LO_RESOURCES TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LO_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_STARTTERMS TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.LO_USER TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_USER_ROLE TO CASUS_AUTHOR;

GRANT ALTER, SELECT ON CASUS.LO_USER_SEQ TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LO_VERBS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LO2_SEQ TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.LPCT TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LRS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LRS_ID_SEQ TO CASUS_AUTHOR;

GRANT INSERT, SELECT ON CASUS.MAIL_MESSAGE TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.MAIL_MESSAGE_ID_SEQ TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT ON CASUS.MAPPINGANSWER TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MAPPINGANSWER_CNX TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.MATRIX_ANSWER TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.MATRIX_ANSWER_COLS TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.MCANSWER TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.MCANSWER_VA TO CASUS_AUTHOR;

GRANT INSERT, SELECT ON CASUS.MCANSWER_VA_CHG TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.MEDIAHEADER TO CASUS_AUTHOR;

GRANT ALTER, DELETE, SELECT, UPDATE ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.MEDIA_MANAGER_ITEM TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MEDIA_METADATA TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MM_TABLE TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.NCANSWER TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.NCANSWER_TEXT TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NET_ELEMS_CNX TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NET_ELEMS2 TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_LIST TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_THPS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.NET_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NET_LISTS TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.NETS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETS2 TO CASUS_AUTHOR;

GRANT ALTER, SELECT ON CASUS.NET2_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.OBJECT_MAPPING TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.OBJECT_VERSIONS TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.PATIENTS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2B TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.PICTUREHLBASE TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHLLIST TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHL_POLYGON TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHL_POSTEXT TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.PINS TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.PINS_EXAM TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.RECALC_SCORE TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT ON CASUS.REPORTS_TMP TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.ROI_ANSWER TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT ON CASUS.ROLEPERMISSION_REF TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.SEQ_AND_SITE TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.SESSION_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SLIDER_ANSWER TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.SNOENDUNG TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.SNOMED TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.SNOVERWEIS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.SNOWORT TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.SNOWORTREL TO CASUS_AUTHOR;

GRANT INSERT, SELECT ON CASUS.SOCIALNET_CLICKS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.STATUS TO CASUS_AUTHOR;

GRANT INSERT ON CASUS.STREAMING_MM_ACTIONS TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.SUBFIELD TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SUBSCRIPTION TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.SUBSCR_PROJ TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.SUBSCR_TUTORS TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.SUPPORTREQUEST TO CASUS_AUTHOR;

GRANT INSERT ON CASUS.SWITCH_TEST TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.TEXT TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.TXTD TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.ULANSWER TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.ULANSWER_TEXT TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ULANSWER_VA TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.UNIQUE_CASE_IDENTIFIER_1 TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.UPDATE_USER_RULE TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, UPDATE ON CASUS.URL_TOKEN TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.URL_TOKEN_SEQ TO CASUS_AUTHOR;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.USERANSWERS_SUMMARY TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT ON CASUS.USERANSWER_VA_RESET TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_EMAILOPT TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.USER_ID_SEQ TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_NET TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_NET_HYPOS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_NET_LINKS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_NET_LIST TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_NET_LISTS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USERPERMISSION_REF TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_AUTHOR;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.USRANS_CHGLOG TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.VERSIONINGCREATEPATHS TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANWALKUP TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.VERSIONINGREMOVE TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.ADDCARD_CLINREAS_REAL_ID TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.ANNOTATION_ID_SEQ TO CASUS_COURSE_SU;

GRANT INSERT, SELECT ON CASUS.ANNOTATIONS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.AUTHORING_MENUS TO CASUS_COURSE_SU;

GRANT INSERT, SELECT ON CASUS.CARD_CHG TO CASUS_COURSE_SU;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.CASE_DEPENDENCIES TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.CASE_RESOURCES_VIEW TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.CASEREVIEWER_ID_SEQ TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.CASE_REVIEW_REF TO CASUS_COURSE_SU;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_GROUP TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.C_GROUP_SUBGROUPS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.C_GROUP_USERS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.CGT_NAMEDLIST_ID_SEQ TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.COU_EXT_COURSE_BOOKINGS TO CASUS_COURSE_SU;

GRANT INSERT, SELECT, UPDATE ON CASUS.COURSE_CASE_REF TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_GROUP_NAME_VIEW TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_GROUPS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC_VIEW TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_VIEW TO CASUS_COURSE_SU;

GRANT INSERT, SELECT ON CASUS.C_SESSION_ACTION TO CASUS_COURSE_SU;

GRANT INSERT, SELECT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_COURSE_SU;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_2_COURSE TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.C_USER_ROLES TO CASUS_COURSE_SU;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.DYNAMIC_CARDS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.EVAL_MAIN_SEQ TO CASUS_COURSE_SU;

GRANT INSERT ON CASUS.LISTS_CHG TO CASUS_COURSE_SU;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LOCKS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.LONGMENU_HEADER TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.LONGMENU_ITEMS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2B TO CASUS_COURSE_SU;

GRANT INSERT ON CASUS.SWITCH_TEST TO CASUS_COURSE_SU;

GRANT DELETE, INSERT, SELECT ON CASUS.USERANSWER_VA_RESET TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.USER_NET_HYPOS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.USER_NET_LISTS TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.ADDCARD_CLINREAS_REAL_ID TO CASUS_EVAL;

GRANT SELECT ON CASUS.ANNOTATION_ID_SEQ TO CASUS_EVAL;

GRANT INSERT ON CASUS.ANNOTATIONS TO CASUS_EVAL;

GRANT SELECT ON CASUS.AUTHORING_MENUS TO CASUS_EVAL;

GRANT INSERT, SELECT ON CASUS.CARD_CHG TO CASUS_EVAL;

GRANT SELECT ON CASUS.CASE_RESOURCES_VIEW TO CASUS_EVAL;

GRANT SELECT ON CASUS.CASEREVIEWER_ID_SEQ TO CASUS_EVAL;

GRANT SELECT ON CASUS.CASE_REVIEW_REF TO CASUS_EVAL;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_GROUP TO CASUS_EVAL;

GRANT SELECT ON CASUS.C_GROUP_SUBGROUPS TO CASUS_EVAL;

GRANT SELECT ON CASUS.C_GROUP_USERS TO CASUS_EVAL;

GRANT SELECT ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_EVAL;

GRANT SELECT ON CASUS.CGT_NAMEDLIST_ID_SEQ TO CASUS_EVAL;

GRANT SELECT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_EVAL;

GRANT EXECUTE ON CASUS.COU_EXT_COURSE_BOOKINGS TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_CASE_REF TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_GROUP_NAME_VIEW TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_GROUPS TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC_VIEW TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_VIEW TO CASUS_EVAL;

GRANT INSERT, SELECT ON CASUS.C_SESSION_ACTION TO CASUS_EVAL;

GRANT INSERT, SELECT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_EVAL;

GRANT SELECT ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_EVAL;

GRANT SELECT ON CASUS.C_SESSION_2_COURSE TO CASUS_EVAL;

GRANT SELECT ON CASUS.C_USER_ROLES TO CASUS_EVAL;

GRANT SELECT ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_EVAL;

GRANT SELECT ON CASUS.EVAL_MAIN_SEQ TO CASUS_EVAL;

GRANT SELECT ON CASUS.LISTS TO CASUS_EVAL;

GRANT INSERT ON CASUS.LISTS_CHG TO CASUS_EVAL;

GRANT SELECT ON CASUS.LONGMENU_HEADER TO CASUS_EVAL;

GRANT SELECT ON CASUS.LONGMENU_ITEMS TO CASUS_EVAL;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2B TO CASUS_EVAL;

GRANT SELECT ON CASUS.SEQ_AND_SITE TO CASUS_EVAL;

GRANT INSERT ON CASUS.SWITCH_TEST TO CASUS_EVAL;

GRANT DELETE, INSERT, SELECT ON CASUS.USERANSWER_VA_RESET TO CASUS_EVAL;

GRANT SELECT ON CASUS.USER_NET_HYPOS TO CASUS_EVAL;

GRANT SELECT ON CASUS.USER_NET_LISTS TO CASUS_EVAL;

GRANT SELECT ON CASUS.ACCESS_URL TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ADDCARD_CLINREASON TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.ADDCARD_CLINREAS_REAL_ID TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ADDCARD_MOV_CNT TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.AICC_SESS_PLUGIN TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ANNO_REFS TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_PLAYER;

GRANT SELECT ON CASUS.ANNOTATION_ID_SEQ TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ANNOTATIONS TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ANNOTATIONS_CASE_REF TO CASUS_PLAYER;

GRANT SELECT ON CASUS.ANS_DETAILS TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.ANSWER_EXPLANATION TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.ASSOC_PARENT TO CASUS_PLAYER;

GRANT SELECT ON CASUS.AUTHORING_MENUS TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARDADD TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARDADD_BOX TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CARDADD_COSTS TO CASUS_PLAYER;

GRANT ALTER, SELECT ON CASUS.CARDADD_ID_SEQ TO CASUS_PLAYER;

GRANT INSERT, SELECT ON CASUS.CARD_CHG TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CARD_NAV TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARD_RULES TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CARD_RULES_SEQ TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CARD_RULES_SPEC TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CARD_RULES_SPEC_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_ACC TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_CODES TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_COMMENTS TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.CASE_DEPENDENCIES TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_ENG_SETTING TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_FLAGS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_INFO_LIST TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_INTERNET TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_LM_LISTS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_METADATA TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_METADATA_ADD TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_PROPERTIES TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_RADIO TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_RATING TO CASUS_PLAYER;

GRANT ALTER, SELECT ON CASUS.CASERATING_SEQ TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_RATING_SUM TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_RESOURCES TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_RESOURCES_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASEREVIEWER_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_REVIEW_REF TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_NET_STRUCTURE_TABLE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_NET_STRUCTURE3 TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_SUMM_COMP TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CASE_SUMM_CONF TO CASUS_PLAYER;

GRANT ALTER, SELECT ON CASUS.CASESUMM_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_TARGET_GROUP TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.CERTIFICATE TO CASUS_PLAYER;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_GROUP TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_GROUP_EMAILDOM TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_GROUP_SUBGROUPS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_GROUP_USERS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CGT_NAMEDLIST_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CLICKS_ID_SEQ TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.CLINREASON_RATE TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.CME_CASE_REF TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.COU_EXT_COURSE_BOOKINGS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_ACC TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_CASE_REF TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_CASES_RULES TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_CHG TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_CONFERENCING TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_CR_SETTINGS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_GROUP_NAME_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_GROUPS TO CASUS_PLAYER;

GRANT ALTER, SELECT ON CASUS.COURSEGROUP_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSENAME_CASE_USER_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC_VIEW TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_STUDENT_REF TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CSA_DETAILS_SEQ TO CASUS_PLAYER;

GRANT INSERT, SELECT ON CASUS.C_SESSION_ACTION TO CASUS_PLAYER;

GRANT INSERT, SELECT ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW2 TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_SESSION_ACTION_RANK_VIEW TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_AVG_SUCCESS TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_AVG_SUCCESS_TEST TO CASUS_PLAYER;

GRANT INSERT, SELECT ON CASUS.C_SESSION_DELETE TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_LOG TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_LOG_CHG TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_PERMUTATION TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_SESSION_STATS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_SESSION_STATS2 TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION_2_COURSE TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_PLAYER;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_USER_CHG TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_USER_ROLES TO CASUS_PLAYER;

GRANT INSERT, SELECT, UPDATE ON CASUS.DATA_ITEMS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.DATA_ITEMS_CHG TO CASUS_PLAYER;

GRANT SELECT ON CASUS.DUS TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.DYNAMIC_CARDS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.EDUCATION TO CASUS_PLAYER;

GRANT SELECT ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.EVAL_MAIN_SEQ TO CASUS_PLAYER;

GRANT ALTER, SELECT ON CASUS.EXPL_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.FIELD TO CASUS_PLAYER;

GRANT SELECT ON CASUS.FINDINGS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.FTANSWER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.FTANSWER_DATA TO CASUS_PLAYER;

GRANT SELECT ON CASUS.FTANSWER_ITEM TO CASUS_PLAYER;

GRANT SELECT ON CASUS.GROUP_ID_SEQ TO CASUS_PLAYER;

GRANT INSERT, SELECT, UPDATE ON CASUS.GROUP_LMHEADER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.GUEST_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.HL_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.HTMD TO CASUS_PLAYER;

GRANT SELECT ON CASUS.HTMD_LAST_CHG_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.INDEX_META TO CASUS_PLAYER;

GRANT SELECT ON CASUS.INDEX_REF TO CASUS_PLAYER;

GRANT SELECT ON CASUS.INDEX_WORDS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.ITEM_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LAB_SUBLISTS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LISTS TO CASUS_PLAYER;

GRANT INSERT ON CASUS.LISTS_CHG TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_CATALOG TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_CATALOGDESCR TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_CATALOG_HAMB TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.LOCKS TO CASUS_PLAYER;

GRANT ALTER, SELECT ON CASUS.LO_EDGE_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_ENDTERMS TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.LO_EVENT TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENT_ACC TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_EVENT_OBJ TO CASUS_PLAYER;

GRANT INSERT, SELECT, UPDATE ON CASUS.LO_EVENT_ORDER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_GROUP TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_GROUP_CATALOG TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_MAPPING TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_MAT_ACC TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LONGMENU_HEADER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LONGMENU_HEADER_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LONGMENU_ITEMS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LONGMENU_ITEMS_ID_SEQ TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.LO_OBJECTIVE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_RESOURCES TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_STARTTERMS TO CASUS_PLAYER;

GRANT INSERT, SELECT, UPDATE ON CASUS.LO_USER TO CASUS_PLAYER;

GRANT DELETE, SELECT ON CASUS.LO_USER_ROLE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LO_VERBS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LPCT TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LRS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LRS_ID_SEQ TO CASUS_PLAYER;

GRANT INSERT, SELECT ON CASUS.MAIL_MESSAGE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MAIL_MESSAGE_ID_SEQ TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.MAPPINGANSWER TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.MAPPINGANSWER_CNX TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MATRIX_ANSWER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MATRIX_ANSWER_COLS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MCANSWER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MCANSWER_VA TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MEDIAHEADER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MEDIA_MANAGER_ITEM TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.MEDIA_METADATA TO CASUS_PLAYER;

GRANT SELECT ON CASUS.MM_TABLE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.NCANSWER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.NCANSWER_TEXT TO CASUS_PLAYER;

GRANT SELECT ON CASUS.NET_ELEMS_CNX TO CASUS_PLAYER;

GRANT SELECT ON CASUS.NET_ELEMS2 TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_LIST TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_THPS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.NET_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.NET_LISTS TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.NETS2 TO CASUS_PLAYER;

GRANT SELECT ON CASUS.OBJECT_VERSIONS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PATIENTS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2B TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PICTUREHLBASE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PICTUREHLLIST TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PICTUREHL_POLYGON TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PICTUREHL_POSTEXT TO CASUS_PLAYER;

GRANT ALTER, SELECT, UPDATE ON CASUS.PINS TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.PINS_EXAM TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.RECALC_SCORE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.REFERENCE_TABLE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.REPORTS_TMP TO CASUS_PLAYER;

GRANT SELECT ON CASUS.ROI_ANSWER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.SEQ_AND_SITE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.SESSION_ID_SEQ TO CASUS_PLAYER;

GRANT SELECT ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_PLAYER;

GRANT SELECT ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_PLAYER;

GRANT SELECT ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_PLAYER;

GRANT SELECT ON CASUS.SIMPLE_TABLE TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.SLIDER_ANSWER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.STATUS TO CASUS_PLAYER;

GRANT INSERT ON CASUS.STREAMING_MM_ACTIONS TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_PLAYER;

GRANT SELECT ON CASUS.SUBFIELD TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_PLAYER;

GRANT INSERT, SELECT, UPDATE ON CASUS.SUBSCR_TUTORS TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.SUPPORTREQUEST TO CASUS_PLAYER;

GRANT INSERT ON CASUS.SWITCH_TEST TO CASUS_PLAYER;

GRANT SELECT ON CASUS.TEXT TO CASUS_PLAYER;

GRANT SELECT ON CASUS.TXTD TO CASUS_PLAYER;

GRANT SELECT ON CASUS.ULANSWER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.ULANSWER_TEXT TO CASUS_PLAYER;

GRANT SELECT ON CASUS.ULANSWER_VA TO CASUS_PLAYER;

GRANT SELECT ON CASUS.UNIQUE_CASE_IDENTIFIER_1 TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.UPDATE_USER_RULE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.URL_TOKEN TO CASUS_PLAYER;

GRANT SELECT ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_PLAYER;

GRANT SELECT ON CASUS.URL_TOKEN_SEQ TO CASUS_PLAYER;

GRANT ALTER, INSERT, SELECT, UPDATE ON CASUS.USERANSWERS_SUMMARY TO CASUS_PLAYER;

GRANT SELECT ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT ON CASUS.USERANSWER_VA_RESET TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_EMAILOPT TO CASUS_PLAYER;

GRANT SELECT ON CASUS.USER_ID_SEQ TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_NET TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_NET_HYPOS TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_NET_LINKS TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_NET_LIST TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_NET_LISTS TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_PLAYER;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.USRANS_CHGLOG TO CASUS_PLAYER;

GRANT SELECT ON CASUS.VARARRAY_TABLE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.VARARRAY_TABLE_VA TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.VERSIONINGCREATEPATHS TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANWALKUP TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.VERSIONINGREMOVE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.DATA_ITEMS TO EVAL;

GRANT SELECT ON CASUS.DUS TO EVAL;

GRANT READ, WRITE ON DIRECTORY DATA_PUMP_DIR TO EXP_FULL_DATABASE;

GRANT READ, WRITE ON DIRECTORY DATA_PUMP_DIR TO IMP_FULL_DATABASE;

GRANT READ, WRITE ON DIRECTORY ORACLE_OCM_CONFIG_DIR TO ORACLE_OCM;

GRANT READ, WRITE ON DIRECTORY ORACLE_OCM_CONFIG_DIR2 TO ORACLE_OCM;

GRANT SELECT ON CASUS.COURSE_CASE_REF TO PUBLIC;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.ANSWER_COMMENT TO CASUS_ADMIN;

GRANT SELECT ON CASUS.AUTHOR_USERS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CARDS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASE_ACC_VIEW TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASES TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASES_HIB_VIEW TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASES_STRUCTURE_ACS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASES_STRUCTURE_TEXTS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASES_VIEW TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_ACC_CUSER_VIEW TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_CASE_CHILD_VIEW_REF TO CASUS_ADMIN;

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW2 TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_USER_LOGIN_VIEW TO CASUS_ADMIN;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_USER TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION_FUNCTION TO CASUS_ADMIN;

GRANT SELECT ON CASUS.LOG_DATA_ACCESS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_FDGS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_HYPOS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_ADMIN;

GRANT SELECT ON CASUS.PEERGROUP_VIEW3 TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHL_ARROW TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHL_ICON TO CASUS_ADMIN;

GRANT SELECT ON CASUS.PLAYER_USERS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.STUDENT_SESSION_OVER_VIEW TO CASUS_ADMIN;

GRANT SELECT ON CASUS.TUTOR_STUDENT_ACCESS_VIEW TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.UPDATE_CASEMODIFICATION TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.UPDHYPERLINKCOUNTER TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.UPDMEDIACOUNTER TO CASUS_ADMIN;

GRANT INSERT, SELECT, UPDATE ON CASUS.ANSWER_COMMENT TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.AUTHOR_USERS TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.CARDS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASE_ACC_VIEW TO CASUS_AUTHOR;

GRANT INSERT, SELECT, UPDATE ON CASUS.CASES TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASES_HIB_VIEW TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASES_STRUCTURE_ACS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASES_STRUCTURE_TEXTS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASES_VIEW TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_ACC_CUSER_VIEW TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_CASE_CHILD_VIEW_REF TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW2 TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_USER_LOGIN_VIEW TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_USER TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION_FUNCTION TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.LOG_DATA_ACCESS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_FDGS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_HYPOS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.PEERGROUP_VIEW3 TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHL_ARROW TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.PICTUREHL_ICON TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.PLAYER_USERS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.STUDENT_SESSION_OVER_VIEW TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.TUTOR_STUDENT_ACCESS_VIEW TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.UPDATE_CASEMODIFICATION TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.UPDHYPERLINKCOUNTER TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.UPDMEDIACOUNTER TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.AUTHOR_USERS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.CASE_ACC_VIEW TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_ACC_CUSER_VIEW TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW2 TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.COURSE_USER_LOGIN_VIEW TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION_FUNCTION TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.LOG_DATA_ACCESS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.PLAYER_USERS TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.STUDENT_SESSION_OVER_VIEW TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.TUTOR_STUDENT_ACCESS_VIEW TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.UPDATE_CASEMODIFICATION TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.UPDHYPERLINKCOUNTER TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.UPDMEDIACOUNTER TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.AUTHOR_USERS TO CASUS_EVAL;

GRANT SELECT ON CASUS.CASE_ACC_VIEW TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_ACC_CUSER_VIEW TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW2 TO CASUS_EVAL;

GRANT SELECT ON CASUS.COURSE_USER_LOGIN_VIEW TO CASUS_EVAL;

GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION_FUNCTION TO CASUS_EVAL;

GRANT SELECT ON CASUS.LOG_DATA_ACCESS TO CASUS_EVAL;

GRANT SELECT ON CASUS.PLAYER_USERS TO CASUS_EVAL;

GRANT SELECT ON CASUS.TUTOR_STUDENT_ACCESS_VIEW TO CASUS_EVAL;

GRANT EXECUTE ON CASUS.UPDATE_CASEMODIFICATION TO CASUS_EVAL;

GRANT EXECUTE ON CASUS.UPDHYPERLINKCOUNTER TO CASUS_EVAL;

GRANT EXECUTE ON CASUS.UPDMEDIACOUNTER TO CASUS_EVAL;

GRANT SELECT ON CASUS.ANSWER_COMMENT TO CASUS_PLAYER;

GRANT SELECT ON CASUS.AUTHOR_USERS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CARDS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASE_ACC_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.CASES_HIB_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_STRUCTURE_ACS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_STRUCTURE_TEXTS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_ACC_CUSER_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_CASE_CHILD_VIEW_REF TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW2 TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_USER_LOGIN_VIEW TO CASUS_PLAYER;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_USER TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION_FUNCTION TO CASUS_PLAYER;

GRANT SELECT ON CASUS.LOG_DATA_ACCESS TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_FDGS TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_HYPOS TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PEERGROUP_VIEW3 TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PICTUREHL_ARROW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PICTUREHL_ICON TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PLAYER_USERS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.STUDENT_SESSION_OVER_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.TUTOR_STUDENT_ACCESS_VIEW TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.UPDATE_CASEMODIFICATION TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_STRUCTURE TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASES_STRUCTURE_ANSWERS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASES_STRUCTURE_HLTEXTS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_CARDNUM TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_WN TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_EVALUATION TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_EVALUATION_DETAILS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_EVALUATION2 TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION TO CASUS_ADMIN;

GRANT SELECT ON CASUS.C_SESSION_INFO TO CASUS_ADMIN;

GRANT SELECT ON CASUS.C_SESSION_INFO2 TO CASUS_ADMIN;

GRANT SELECT ON CASUS.C_SESSION_TIMES TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CS_MAIN_MH_VIEW TO CASUS_ADMIN;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2 TO CASUS_ADMIN;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2A TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.RESET_SESSION TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.RESET_SESSION2 TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.SELECTRECENTACTIVITIES TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.UPDATE_ENGSCORE_AND_DETAILS TO CASUS_ADMIN;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USERANSWER_VA TO CASUS_ADMIN;

GRANT SELECT ON CASUS.USERANSWER_VA_SUCCESS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.USERANSWER_VA_TIME TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASES_STRUCTURE TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASES_STRUCTURE_ANSWERS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASES_STRUCTURE_HLTEXTS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_CARDNUM TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_WN TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_EVALUATION TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_EVALUATION_DETAILS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_EVALUATION2 TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.C_SESSION TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.C_SESSION_INFO TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.C_SESSION_INFO2 TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.C_SESSION_TIMES TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CS_MAIN_MH_VIEW TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2 TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2A TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.RESET_SESSION TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.RESET_SESSION2 TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.SELECTRECENTACTIVITIES TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.UPDATE_ENGSCORE_AND_DETAILS TO CASUS_AUTHOR;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USERANSWER_VA TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.USERANSWER_VA_SUCCESS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.USERANSWER_VA_TIME TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_WN TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.C_SESSION_INFO TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.C_SESSION_INFO2 TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2A TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.RESET_SESSION TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.RESET_SESSION2 TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.SELECTRECENTACTIVITIES TO CASUS_COURSE_SU;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER TO CASUS_EVAL;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_WN TO CASUS_EVAL;

GRANT SELECT ON CASUS.C_SESSION_INFO TO CASUS_EVAL;

GRANT SELECT ON CASUS.C_SESSION_INFO2 TO CASUS_EVAL;

GRANT SELECT ON CASUS.C_SESSION_TIMES TO CASUS_EVAL;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2A TO CASUS_EVAL;

GRANT EXECUTE ON CASUS.RESET_SESSION TO CASUS_EVAL;

GRANT EXECUTE ON CASUS.RESET_SESSION2 TO CASUS_EVAL;

GRANT EXECUTE ON CASUS.SELECTRECENTACTIVITIES TO CASUS_EVAL;

GRANT SELECT ON CASUS.CASES_STRUCTURE TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_STRUCTURE_ANSWERS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_STRUCTURE_HLTEXTS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_CARDNUM TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_WN TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_EVALUATION TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_EVALUATION_DETAILS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_EVALUATION2 TO CASUS_PLAYER;

GRANT INSERT, SELECT, UPDATE ON CASUS.C_SESSION TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_SESSION_INFO TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_SESSION_INFO2 TO CASUS_PLAYER;

GRANT SELECT ON CASUS.C_SESSION_TIMES TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CS_MAIN_MH_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2 TO CASUS_PLAYER;

GRANT SELECT ON CASUS.PEERGROUP_VIEW2A TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.RESET_SESSION TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.RESET_SESSION2 TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.SELECTRECENTACTIVITIES TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.UPDATE_ENGSCORE_AND_DETAILS TO CASUS_PLAYER;

GRANT DELETE, INSERT, SELECT, UPDATE ON CASUS.USERANSWER_VA TO CASUS_PLAYER;

GRANT SELECT ON CASUS.USERANSWER_VA_SUCCESS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.USERANSWER_VA_TIME TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CASES_STRUCTURE_ALLTEXTS TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_EVALUATION3 TO CASUS_ADMIN;

GRANT SELECT ON CASUS.COURSE_EVALUATION4 TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CS_HL_HTMD_VIEW TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CS_HL_MH_VIEW TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.VERSIONINGDOCLEAN TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANONECASE TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CASES_STRUCTURE_ALLTEXTS TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_EVALUATION3 TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.COURSE_EVALUATION4 TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CS_HL_HTMD_VIEW TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CS_HL_MH_VIEW TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.VERSIONINGDOCLEAN TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANONECASE TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CASUS_EVAL;

GRANT SELECT ON CASUS.CASES_STRUCTURE_ALLTEXTS TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_EVALUATION3 TO CASUS_PLAYER;

GRANT SELECT ON CASUS.COURSE_EVALUATION4 TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CS_HL_HTMD_VIEW TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CS_HL_MH_VIEW TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.VERSIONINGDOCLEAN TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANONECASE TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CONNECT;

GRANT SELECT ON CASUS.CS_ALL_MH_VIEW TO CASUS_ADMIN;

GRANT EXECUTE ON CASUS.TEST_MY_CURSOR TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CS_ALL_MH_VIEW TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.TEST_MY_CURSOR TO CASUS_AUTHOR;

GRANT EXECUTE ON CASUS.TEST_MY_CURSOR TO CASUS_COURSE_SU;

GRANT EXECUTE ON CASUS.TEST_MY_CURSOR TO CASUS_EVAL;

GRANT SELECT ON CASUS.CS_ALL_MH_VIEW TO CASUS_PLAYER;

GRANT EXECUTE ON CASUS.TEST_MY_CURSOR TO CASUS_PLAYER;

GRANT SELECT ON CASUS.CS_ALL_MH_NAMES_VIEW TO CASUS_ADMIN;

GRANT SELECT ON CASUS.CS_ALL_MH_NAMES_VIEW TO CASUS_AUTHOR;

GRANT SELECT ON CASUS.CS_ALL_MH_NAMES_VIEW TO CASUS_PLAYER;

GRANT ALTER ON CASUS.ACCESS_URL TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ACCESS_URL TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ACCESS_URL TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ACCESS_URL TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ACCESS_URL TO CASUS_ADMIN;
GRANT ALTER ON CASUS.ADDCARD_CLINREASON TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ADDCARD_CLINREASON TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ADDCARD_CLINREASON TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ADDCARD_CLINREASON TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ADDCARD_CLINREASON TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.ADDCARD_CLINREAS_REAL_ID TO CASUS_ADMIN;
GRANT ALTER ON CASUS.ADDCARD_MOV_CNT TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ADDCARD_MOV_CNT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ADDCARD_MOV_CNT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ADDCARD_MOV_CNT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ADDCARD_MOV_CNT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ADMIN_LOG TO CASUS_ADMIN;
GRANT ALTER ON CASUS.AICC_SESS_PLUGIN TO CASUS_ADMIN;
GRANT DELETE ON CASUS.AICC_SESS_PLUGIN TO CASUS_ADMIN;
GRANT INSERT ON CASUS.AICC_SESS_PLUGIN TO CASUS_ADMIN;
GRANT SELECT ON CASUS.AICC_SESS_PLUGIN TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.AICC_SESS_PLUGIN TO CASUS_ADMIN;
GRANT ALTER ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.ANNO_REFS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ANNO_REFS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ANNO_REFS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ANNO_REFS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ANNO_REFS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ANNOTATION_ID_SEQ TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ANNOTATIONS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ANNOTATIONS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.ANS_DETAILS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ANS_DETAILS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ANS_DETAILS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ANS_DETAILS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ANS_DETAILS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ANSWER_COMMENT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ANSWER_COMMENT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ANSWER_COMMENT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ANSWER_COMMENT TO CASUS_ADMIN;
GRANT ALTER ON CASUS.ANSWER_EXPLANATION TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ANSWER_EXPLANATION TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ANSWER_EXPLANATION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ANSWER_EXPLANATION TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ANSWER_EXPLANATION TO CASUS_ADMIN;
GRANT ALTER ON CASUS.ASSOC_PARENT TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ASSOC_PARENT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ASSOC_PARENT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ASSOC_PARENT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ASSOC_PARENT TO CASUS_ADMIN;
GRANT DELETE ON CASUS.AUTHORING_MENUS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.AUTHORING_MENUS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.AUTHORING_MENUS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.AUTHORING_MENUS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.AUTHOR_USERS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.BATCHINITNEWCSESSION_STATUS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.BATCHINITNEWCSESSION_STATUS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.BATCHINITNEWCSESSION_STATUS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.BATCHINITNEWCSESSION_STATUS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.BATCHINITNEWCSESSION_STATUS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CARDADD TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CARDADD TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CARDADD TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARDADD TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CARDADD TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CARDADD_BOX TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CARDADD_BOX TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CARDADD_BOX TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARDADD_BOX TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CARDADD_BOX TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CARDADD_COSTS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CARDADD_COSTS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CARDADD_COSTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARDADD_COSTS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CARDADD_COSTS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CARDADD_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARDADD_ID_SEQ TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CARD_CHG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARD_CHG TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CARD_NAV TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CARD_NAV TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CARD_NAV TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARD_NAV TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CARD_NAV TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CARD_RULES TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CARD_RULES TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CARD_RULES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARD_RULES TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CARD_RULES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARD_RULES_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CARD_RULES_SPEC TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CARD_RULES_SPEC TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CARD_RULES_SPEC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARD_RULES_SPEC TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CARD_RULES_SPEC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARD_RULES_SPEC_SEQ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CARDS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CARDS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CARDS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CARDS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_ACC TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_ACC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_ACC TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_ACC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_ACC_VIEW TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CASE_DEPENDENCIES TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_DEPENDENCIES TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_DEPENDENCIES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_DEPENDENCIES TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_DEPENDENCIES TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CASE_ENG_SETTING TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_ENG_SETTING TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_ENG_SETTING TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_ENG_SETTING TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_ENG_SETTING TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_FLAGS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_FLAGS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_FLAGS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_INTERNET TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_INTERNET TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_INTERNET TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_INTERNET TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CASE_LM_LISTS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_LM_LISTS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_LM_LISTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_LM_LISTS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_METADATA TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_METADATA TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_METADATA TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_METADATA TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_METADATA_ADD TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_METADATA_ADD TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_METADATA_ADD TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_METADATA_ADD TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_RADIO TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_RADIO TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_RADIO TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CASE_RATING TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_RATING TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_RATING TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_RATING TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_RATING TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CASERATING_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASERATING_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CASE_RATING_SUM TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_RATING_SUM TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_RATING_SUM TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_RATING_SUM TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_RATING_SUM TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_RESOURCES_VIEW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASEREVIEWER_ID_SEQ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_REVIEW_REF TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_REVIEW_REF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_REVIEW_REF TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_REVIEW_REF TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASES TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASES TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASES_HIB_VIEW TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASES_HIB_VIEW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_HIB_VIEW TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASES_HIB_VIEW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_STRUCTURE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_STRUCTURE_ACS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_STRUCTURE_ALLTEXTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_STRUCTURE_ANSWERS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_STRUCTURE_HLTEXTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_CARDNUM TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_WN TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_STRUCTURE_TEXTS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CASE_SUMM_COMP TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_SUMM_COMP TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_SUMM_COMP TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_SUMM_COMP TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_SUMM_COMP TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CASE_SUMM_CONF TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_SUMM_CONF TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_SUMM_CONF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_SUMM_CONF TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_SUMM_CONF TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CASESUMM_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASESUMM_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASES_VIEW TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CASE_TARGET_GROUP TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CASE_TARGET_GROUP TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CASE_TARGET_GROUP TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CASE_TARGET_GROUP TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CERTIFICATE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CERTIFICATE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CERTIFICATE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CERTIFICATE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CERTIFICATE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_GROUP TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_GROUP_EMAILDOM TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_GROUP_EMAILDOM TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_GROUP_EMAILDOM TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_GROUP_EMAILDOM TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_GROUP_EMAILDOM TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_GROUP_SUBGROUPS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_GROUP_SUBGROUPS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_GROUP_SUBGROUPS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_GROUP_SUBGROUPS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_GROUP_USERS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CGT_NAMEDLIST_ID_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CLICKS_ID_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CLINREASON_RATE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CLINREASON_RATE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CLINREASON_RATE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CLINREASON_RATE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CLINREASON_RATE TO CASUS_ADMIN;
GRANT ALTER ON CASUS.CME_CASE_REF TO CASUS_ADMIN;
GRANT DELETE ON CASUS.CME_CASE_REF TO CASUS_ADMIN;
GRANT INSERT ON CASUS.CME_CASE_REF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CME_CASE_REF TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.CME_CASE_REF TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.COU_EXT_COURSE_BOOKINGS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.COURSE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.COURSE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.COURSE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.COURSE_ACC TO CASUS_ADMIN;
GRANT INSERT ON CASUS.COURSE_ACC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_ACC TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.COURSE_ACC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_ACC_CUSER_VIEW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_CASE_CHILD_VIEW_REF TO CASUS_ADMIN;
GRANT DELETE ON CASUS.COURSE_CASE_REF TO CASUS_ADMIN;
GRANT INSERT ON CASUS.COURSE_CASE_REF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_CASE_REF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_CASES_RULES TO CASUS_ADMIN;
GRANT ALTER ON CASUS.COURSE_CONFERENCING TO CASUS_ADMIN;
GRANT DELETE ON CASUS.COURSE_CONFERENCING TO CASUS_ADMIN;
GRANT INSERT ON CASUS.COURSE_CONFERENCING TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_CONFERENCING TO CASUS_ADMIN;
GRANT ALTER ON CASUS.COURSE_CR_SETTINGS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.COURSE_CR_SETTINGS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.COURSE_CR_SETTINGS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_CR_SETTINGS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.COURSE_CR_SETTINGS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_EVALUATION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_EVALUATION_DETAILS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_EVALUATION2 TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_EVALUATION3 TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_EVALUATION4 TO CASUS_ADMIN;
GRANT ALTER ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_GROUP_NAME_VIEW TO CASUS_ADMIN;
GRANT ALTER ON CASUS.COURSE_GROUPS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.COURSE_GROUPS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.COURSE_GROUPS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_GROUPS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.COURSE_GROUPS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.COURSEGROUP_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSEGROUP_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.COURSE_GROUP_TUTORS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.COURSE_GROUP_TUTORS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.COURSE_GROUP_TUTORS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.COURSE_GROUP_TUTORS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW2 TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSENAME_CASE_USER_VIEW TO CASUS_ADMIN;
GRANT DELETE ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_ADMIN;
GRANT INSERT ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC_VIEW TO CASUS_ADMIN;
GRANT DELETE ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_ADMIN;
GRANT INSERT ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_USER_LOGIN_VIEW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.COURSE_VIEW TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_PERMISSION TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_PERMISSION TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_PERMISSION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_PERMISSION TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_PERMISSION TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_ROLE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_ROLE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_ROLE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_ROLE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_ROLE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CSA_DETAILS_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CS_ALL_MH_NAMES_VIEW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CS_ALL_MH_VIEW TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_SESSION TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_ACTION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_ACTION TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW2 TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_ACTION_RANK_VIEW TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_SESSION_ACTIVE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_ACTIVE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_ACTIVE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_ACTIVE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_SESSION_ACTIVE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_DELETE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_DELETE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_INFO TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_INFO2 TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_SESSION_LOG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_LOG TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_LOG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_LOG TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_SESSION_LOG TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_SESSION_LOG_CHG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_LOG_CHG TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_LOG_CHG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_LOG_CHG TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_SESSION_LOG_CHG TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_SESSION_PERMUTATION TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_PERMUTATION TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_PERMUTATION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_PERMUTATION TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_SESSION_PERMUTATION TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_SESSION_STATS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_STATS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_STATS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_STATS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_SESSION_STATS2 TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_STATS2 TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_STATS2 TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_STATS2 TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_SESSION_STATS2 TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_TIMES TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_SESSION_2_COURSE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_SESSION_2_COURSE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_SESSION_2_COURSE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CS_HL_HTMD_VIEW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CS_HL_MH_VIEW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.CS_MAIN_MH_VIEW TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_USER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_USER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_USER TO CASUS_ADMIN;
GRANT ALTER ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_USER_CHG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_USER_CHG TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_USER_CHG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.C_USER_ROLES TO CASUS_ADMIN;
GRANT INSERT ON CASUS.C_USER_ROLES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.C_USER_ROLES TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.C_USER_ROLES TO CASUS_ADMIN;
GRANT DELETE ON CASUS.DATA_ITEMS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.DATA_ITEMS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.DATA_ITEMS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.DATA_ITEMS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.DATA_ITEMS_CHG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.DATA_ITEMS_CHG TO CASUS_ADMIN;
GRANT INSERT ON CASUS.DATA_ITEMS_CHG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.DATA_ITEMS_CHG TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.DATA_ITEMS_CHG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.DUS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.DUS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.DUS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.DUS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.DYNAMIC_CARDS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.DYNAMIC_CARDS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.DYNAMIC_CARDS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.DYNAMIC_CARDS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.DYNAMIC_CARDS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.EDUCATION TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION TO CASUS_ADMIN;
GRANT DELETE ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION_FUNCTION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.EVAL_MAIN_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.EXPL_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.EXPL_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.FIELD TO CASUS_ADMIN;
GRANT DELETE ON CASUS.FINDINGS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.FINDINGS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.FINDINGS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.FINDINGS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.FTANSWER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.FTANSWER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.FTANSWER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.FTANSWER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.FTANSWER_DATA TO CASUS_ADMIN;
GRANT INSERT ON CASUS.FTANSWER_DATA TO CASUS_ADMIN;
GRANT SELECT ON CASUS.FTANSWER_DATA TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.FTANSWER_DATA TO CASUS_ADMIN;
GRANT DELETE ON CASUS.FTANSWER_ITEM TO CASUS_ADMIN;
GRANT INSERT ON CASUS.FTANSWER_ITEM TO CASUS_ADMIN;
GRANT SELECT ON CASUS.FTANSWER_ITEM TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.FTANSWER_ITEM TO CASUS_ADMIN;
GRANT DELETE ON CASUS.GROUP_ACC TO CASUS_ADMIN;
GRANT INSERT ON CASUS.GROUP_ACC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.GROUP_ACC TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.GROUP_ACC TO CASUS_ADMIN;
GRANT DELETE ON CASUS.GROUP_ACC2 TO CASUS_ADMIN;
GRANT INSERT ON CASUS.GROUP_ACC2 TO CASUS_ADMIN;
GRANT SELECT ON CASUS.GROUP_ACC2 TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.GROUP_ACC2 TO CASUS_ADMIN;
GRANT SELECT ON CASUS.GROUP_ID_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.GROUP_LMHEADER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.GROUP_LMHEADER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.GROUP_LMHEADER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.GROUP_LMHEADER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.GROUP_LMHEADER TO CASUS_ADMIN;
GRANT ALTER ON CASUS.GROUP_SUBSCR TO CASUS_ADMIN;
GRANT DELETE ON CASUS.GROUP_SUBSCR TO CASUS_ADMIN;
GRANT INSERT ON CASUS.GROUP_SUBSCR TO CASUS_ADMIN;
GRANT SELECT ON CASUS.GROUP_SUBSCR TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.GROUP_SUBSCR TO CASUS_ADMIN;
GRANT SELECT ON CASUS.GUEST_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.HL_ID_SEQ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.HTMD TO CASUS_ADMIN;
GRANT INSERT ON CASUS.HTMD TO CASUS_ADMIN;
GRANT SELECT ON CASUS.HTMD TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.HTMD TO CASUS_ADMIN;
GRANT SELECT ON CASUS.HTMD_LAST_CHG_VIEW TO CASUS_ADMIN;
GRANT INSERT ON CASUS.IMPPADITION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.IMPPADITION TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.IMPPADITION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.IMPPQUESTIONS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.INDEX_META TO CASUS_ADMIN;
GRANT SELECT ON CASUS.INDEX_REF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.INDEX_WORDS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ITEM_ID_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LAB_SUBLISTS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LAB_SUBLISTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LAB_SUBLISTS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LAB_SUBLISTS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LISTS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LISTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LISTS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LISTS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LISTS_CHG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_CATALOG TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_CATALOG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_CATALOG TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_CATALOG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_CATALOGDESCR TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_CATALOGDESCR TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_CATALOGDESCR TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_CATALOGDESCR TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_CATALOG_HAMB TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_CATALOG_HAMB TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_CATALOG_HAMB TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_CATALOG_HAMB TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LOCKS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_CON_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_CON_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_EDGE_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_EDGE_ID_SEQ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_ENDTERMS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_ENDTERMS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_ENDTERMS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_ENDTERMS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_EVENT TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_EVENT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_EVENT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_EVENT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_EVENT TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_EVENT_ACC TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_EVENT_ACC TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_EVENT_ACC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_EVENT_ACC TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_EVENT_ACC TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_EVENT_OBJ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_EVENT_OBJ TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_EVENT_OBJ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_EVENT_OBJ TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_EVENT_OBJ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_EVENT_ORDER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_EVENT_ORDER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_EVENT_ORDER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_EVENT_ORDER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LOG_DATA_ACCESS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_GROUP TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_GROUP TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_GROUP TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_GROUP TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_GROUP TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_GROUP_CATALOG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_GROUP_CATALOG TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_GROUP_CATALOG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_GROUP_CATALOG TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_GROUP_CATALOG TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_MAPPING TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_MAPPING TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_MAPPING TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_MAPPING TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_MAPPING TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_MAT_ACC TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_MAT_ACC TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_MAT_ACC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_MAT_ACC TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_MAT_ACC TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LONGMENU_HEADER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LONGMENU_HEADER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LONGMENU_HEADER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LONGMENU_HEADER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LONGMENU_HEADER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LONGMENU_HEADER_ID_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LONGMENU_ITEMS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LONGMENU_ITEMS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LONGMENU_ITEMS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LONGMENU_ITEMS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LONGMENU_ITEMS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LONGMENU_ITEMS_ID_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_OBJECTIVE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_OBJECTIVE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_OBJECTIVE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_OBJECTIVE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_OBJECTIVE TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_RESOURCES TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_RESOURCES TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_RESOURCES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_RESOURCES TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_RESOURCES TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_SEQ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_STARTTERMS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_STARTTERMS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_STARTTERMS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_STARTTERMS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_USER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_USER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_USER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_USER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_USER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_USER_ROLE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_USER_ROLE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_USER_ROLE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_USER_ROLE TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_USER_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_USER_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO_VERBS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LO_VERBS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LO_VERBS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO_VERBS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LO_VERBS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LO2_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LO2_SEQ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LPCT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LPCT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LPCT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LPCT TO CASUS_ADMIN;
GRANT ALTER ON CASUS.LRS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.LRS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.LRS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LRS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.LRS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.LRS_ID_SEQ TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MAIL_MESSAGE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MAIL_MESSAGE TO CASUS_ADMIN;
GRANT ALTER ON CASUS.MAIL_MESSAGE_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MAIL_MESSAGE_ID_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.MAPPINGANSWER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MAPPINGANSWER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MAPPINGANSWER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MAPPINGANSWER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MAPPINGANSWER TO CASUS_ADMIN;
GRANT ALTER ON CASUS.MAPPINGANSWER_CNX TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MAPPINGANSWER_CNX TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MAPPINGANSWER_CNX TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MAPPINGANSWER_CNX TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MAPPINGANSWER_CNX TO CASUS_ADMIN;
GRANT ALTER ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MATRIX_ANSWER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MATRIX_ANSWER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MATRIX_ANSWER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MATRIX_ANSWER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MATRIX_ANSWER_COLS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MATRIX_ANSWER_COLS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MATRIX_ANSWER_COLS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MATRIX_ANSWER_COLS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MCANSWER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MCANSWER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MCANSWER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MCANSWER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MCANSWER_VA TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MCANSWER_VA TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MCANSWER_VA TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MCANSWER_VA TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MCANSWER_VA_CHG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MCANSWER_VA_CHG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MEDIAHEADER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MEDIAHEADER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MEDIAHEADER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MEDIAHEADER TO CASUS_ADMIN;
GRANT ALTER ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MEDIA_MANAGER_ITEM TO CASUS_ADMIN;
GRANT ALTER ON CASUS.MEDIA_METADATA TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MEDIA_METADATA TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MEDIA_METADATA TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MEDIA_METADATA TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MEDIA_METADATA TO CASUS_ADMIN;
GRANT ALTER ON CASUS.METADATA_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.METADATA_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.MM_TABLE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.MM_TABLE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.MM_TABLE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.MM_TABLE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.MM_TABLE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.NCANSWER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.NCANSWER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NCANSWER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.NCANSWER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.NCANSWER_TEXT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.NCANSWER_TEXT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NCANSWER_TEXT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.NCANSWER_TEXT TO CASUS_ADMIN;
GRANT DELETE ON CASUS.NETELMS_FDGS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.NETELMS_FDGS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NETELMS_FDGS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.NETELMS_FDGS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.NETELMS_HYPOS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.NETELMS_HYPOS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NETELMS_HYPOS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.NETELMS_HYPOS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_ADMIN;
GRANT INSERT ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_ADMIN;
GRANT INSERT ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_ADMIN;
GRANT DELETE ON CASUS.NETELMS_LIST TO CASUS_ADMIN;
GRANT INSERT ON CASUS.NETELMS_LIST TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NETELMS_LIST TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.NETELMS_LIST TO CASUS_ADMIN;
GRANT DELETE ON CASUS.NETELMS_THPS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.NETELMS_THPS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NETELMS_THPS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.NETELMS_THPS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NET_ID_SEQ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.NETS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.NETS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NETS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.NETS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.NET2_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.NET2_ID_SEQ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.OBJECT_MAPPING TO CASUS_ADMIN;
GRANT INSERT ON CASUS.OBJECT_MAPPING TO CASUS_ADMIN;
GRANT SELECT ON CASUS.OBJECT_MAPPING TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.OBJECT_MAPPING TO CASUS_ADMIN;
GRANT ALTER ON CASUS.OBJECT_VERSIONS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.OBJECT_VERSIONS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.OBJECT_VERSIONS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.OBJECT_VERSIONS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.OBJECT_VERSIONS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.PATIENTS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.PATIENTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PATIENTS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.PATIENTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2 TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2A TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2B TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PEERGROUP_VIEW3 TO CASUS_ADMIN;
GRANT DELETE ON CASUS.PICTUREHL_ARROW TO CASUS_ADMIN;
GRANT INSERT ON CASUS.PICTUREHL_ARROW TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PICTUREHL_ARROW TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.PICTUREHL_ARROW TO CASUS_ADMIN;
GRANT DELETE ON CASUS.PICTUREHLBASE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.PICTUREHLBASE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PICTUREHLBASE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.PICTUREHLBASE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.PICTUREHL_ICON TO CASUS_ADMIN;
GRANT INSERT ON CASUS.PICTUREHL_ICON TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PICTUREHL_ICON TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.PICTUREHL_ICON TO CASUS_ADMIN;
GRANT DELETE ON CASUS.PICTUREHLLIST TO CASUS_ADMIN;
GRANT INSERT ON CASUS.PICTUREHLLIST TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PICTUREHLLIST TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.PICTUREHLLIST TO CASUS_ADMIN;
GRANT DELETE ON CASUS.PICTUREHL_POLYGON TO CASUS_ADMIN;
GRANT INSERT ON CASUS.PICTUREHL_POLYGON TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PICTUREHL_POLYGON TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.PICTUREHL_POLYGON TO CASUS_ADMIN;
GRANT DELETE ON CASUS.PICTUREHL_POSTEXT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.PICTUREHL_POSTEXT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PICTUREHL_POSTEXT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.PICTUREHL_POSTEXT TO CASUS_ADMIN;
GRANT ALTER ON CASUS.PINS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.PINS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.PINS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PINS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.PINS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.PINS_EXAM TO CASUS_ADMIN;
GRANT DELETE ON CASUS.PINS_EXAM TO CASUS_ADMIN;
GRANT INSERT ON CASUS.PINS_EXAM TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PINS_EXAM TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.PINS_EXAM TO CASUS_ADMIN;
GRANT SELECT ON CASUS.PLAYER_USERS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.RECALC_SCORE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.RECALC_SCORE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.RECALC_SCORE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.RECALC_SCORE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.RECALC_SCORE TO CASUS_ADMIN;
GRANT ALTER ON CASUS.REPORTS_TMP TO CASUS_ADMIN;
GRANT DELETE ON CASUS.REPORTS_TMP TO CASUS_ADMIN;
GRANT INSERT ON CASUS.REPORTS_TMP TO CASUS_ADMIN;
GRANT SELECT ON CASUS.REPORTS_TMP TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.RESET_SESSION TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.RESET_SESSION2 TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ROI_ANSWER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ROI_ANSWER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ROI_ANSWER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ROI_ANSWER TO CASUS_ADMIN;
GRANT ALTER ON CASUS.ROLEPERMISSION_REF TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ROLEPERMISSION_REF TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ROLEPERMISSION_REF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ROLEPERMISSION_REF TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ROLEPERMISSION_REF TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.SELECTRECENTACTIVITIES TO CASUS_ADMIN;
GRANT DELETE ON CASUS.SEQ_AND_SITE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SEQ_AND_SITE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SEQ_AND_SITE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.SEQ_AND_SITE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SESSION_ID_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_ADMIN;
GRANT ALTER ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_ADMIN;
GRANT DELETE ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_ADMIN;
GRANT ALTER ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_ADMIN;
GRANT DELETE ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_ADMIN;
GRANT ALTER ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_ADMIN;
GRANT DELETE ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_ADMIN;
GRANT ALTER ON CASUS.SLIDER_ANSWER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.SLIDER_ANSWER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SLIDER_ANSWER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SLIDER_ANSWER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.SLIDER_ANSWER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SOCIALNET_CLICKS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SOCIALNET_CLICKS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.STATUS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.STREAMING_MM_ACTIONS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.STUDENT_SESSION_OVER_VIEW TO CASUS_ADMIN;
GRANT ALTER ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_ADMIN;
GRANT DELETE ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_ADMIN;
GRANT INSERT ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_ADMIN;
GRANT SELECT ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SUBFIELD TO CASUS_ADMIN;
GRANT ALTER ON CASUS.SUBSCRIPTION TO CASUS_ADMIN;
GRANT DELETE ON CASUS.SUBSCRIPTION TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SUBSCRIPTION TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SUBSCRIPTION TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.SUBSCRIPTION TO CASUS_ADMIN;
GRANT ALTER ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SUBSCR_PROJ TO CASUS_ADMIN;
GRANT DELETE ON CASUS.SUBSCR_TUTORS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SUBSCR_TUTORS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SUBSCR_TUTORS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.SUBSCR_TUTORS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.SUPPORTREQUEST TO CASUS_ADMIN;
GRANT DELETE ON CASUS.SUPPORTREQUEST TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SUPPORTREQUEST TO CASUS_ADMIN;
GRANT SELECT ON CASUS.SUPPORTREQUEST TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.SUPPORTREQUEST TO CASUS_ADMIN;
GRANT INSERT ON CASUS.SWITCH_TEST TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.TEST_MY_CURSOR TO CASUS_ADMIN;
GRANT DELETE ON CASUS.TEXT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.TEXT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.TEXT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.TEXT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.TUTOR_STUDENT_ACCESS_VIEW TO CASUS_ADMIN;
GRANT DELETE ON CASUS.TXTD TO CASUS_ADMIN;
GRANT INSERT ON CASUS.TXTD TO CASUS_ADMIN;
GRANT SELECT ON CASUS.TXTD TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.TXTD TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ULANSWER TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ULANSWER TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ULANSWER TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ULANSWER TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ULANSWER_TEXT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ULANSWER_TEXT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ULANSWER_TEXT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ULANSWER_TEXT TO CASUS_ADMIN;
GRANT DELETE ON CASUS.ULANSWER_VA TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ULANSWER_VA TO CASUS_ADMIN;
GRANT SELECT ON CASUS.ULANSWER_VA TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.ULANSWER_VA TO CASUS_ADMIN;
GRANT SELECT ON CASUS.UNIQUE_CASE_IDENTIFIER_1 TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.UPDATE_CASEMODIFICATION TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.UPDATE_ENGSCORE_AND_DETAILS TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.UPDATE_USER_RULE TO CASUS_ADMIN;
GRANT DELETE ON CASUS.UPDATE_USER_RULE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.UPDATE_USER_RULE TO CASUS_ADMIN;
GRANT SELECT ON CASUS.UPDATE_USER_RULE TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.UPDATE_USER_RULE TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.UPDHYPERLINKCOUNTER TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.UPDMEDIACOUNTER TO CASUS_ADMIN;
GRANT ALTER ON CASUS.URL_TOKEN TO CASUS_ADMIN;
GRANT DELETE ON CASUS.URL_TOKEN TO CASUS_ADMIN;
GRANT INSERT ON CASUS.URL_TOKEN TO CASUS_ADMIN;
GRANT SELECT ON CASUS.URL_TOKEN TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.URL_TOKEN TO CASUS_ADMIN;
GRANT ALTER ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_ADMIN;
GRANT DELETE ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_ADMIN;
GRANT INSERT ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_ADMIN;
GRANT SELECT ON CASUS.URL_TOKEN_SEQ TO CASUS_ADMIN;
GRANT ALTER ON CASUS.USERANSWERS_SUMMARY TO CASUS_ADMIN;
GRANT DELETE ON CASUS.USERANSWERS_SUMMARY TO CASUS_ADMIN;
GRANT INSERT ON CASUS.USERANSWERS_SUMMARY TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USERANSWERS_SUMMARY TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.USERANSWERS_SUMMARY TO CASUS_ADMIN;
GRANT DELETE ON CASUS.USERANSWER_VA TO CASUS_ADMIN;
GRANT INSERT ON CASUS.USERANSWER_VA TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USERANSWER_VA TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.USERANSWER_VA TO CASUS_ADMIN;
GRANT DELETE ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_ADMIN;
GRANT INSERT ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_ADMIN;
GRANT DELETE ON CASUS.USERANSWER_VA_RESET TO CASUS_ADMIN;
GRANT INSERT ON CASUS.USERANSWER_VA_RESET TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USERANSWER_VA_RESET TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USERANSWER_VA_SUCCESS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USERANSWER_VA_TIME TO CASUS_ADMIN;
GRANT DELETE ON CASUS.USER_EMAILOPT TO CASUS_ADMIN;
GRANT INSERT ON CASUS.USER_EMAILOPT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USER_EMAILOPT TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.USER_EMAILOPT TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USER_ID_SEQ TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USER_NET_HYPOS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USER_NET_LISTS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.USERPERMISSION_REF TO CASUS_ADMIN;
GRANT DELETE ON CASUS.USERPERMISSION_REF TO CASUS_ADMIN;
GRANT INSERT ON CASUS.USERPERMISSION_REF TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USERPERMISSION_REF TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.USERPERMISSION_REF TO CASUS_ADMIN;
GRANT ALTER ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_ADMIN;
GRANT DELETE ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_ADMIN;
GRANT INSERT ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_ADMIN;
GRANT ALTER ON CASUS.USRANS_CHGLOG TO CASUS_ADMIN;
GRANT DELETE ON CASUS.USRANS_CHGLOG TO CASUS_ADMIN;
GRANT INSERT ON CASUS.USRANS_CHGLOG TO CASUS_ADMIN;
GRANT SELECT ON CASUS.USRANS_CHGLOG TO CASUS_ADMIN;
GRANT UPDATE ON CASUS.USRANS_CHGLOG TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.VERSIONINGCREATEPATHS TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.VERSIONINGDOCLEAN TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANONECASE TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANWALKUP TO CASUS_ADMIN;
GRANT EXECUTE ON CASUS.VERSIONINGREMOVE TO CASUS_ADMIN;
GRANT INSERT ON CASUS.ACCESS_URL TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ACCESS_URL TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ACCESS_URL TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.ADDCARD_CLINREASON TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.ADDCARD_CLINREASON TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ADDCARD_CLINREASON TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ADDCARD_CLINREASON TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ADDCARD_CLINREASON TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.ADDCARD_CLINREAS_REAL_ID TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.ADDCARD_MOV_CNT TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.ADDCARD_MOV_CNT TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ADDCARD_MOV_CNT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ADDCARD_MOV_CNT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ADDCARD_MOV_CNT TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ADMIN_LOG TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.AICC_SESS_PLUGIN TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.AICC_SESS_PLUGIN TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.AICC_SESS_PLUGIN TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.AICC_SESS_PLUGIN TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.AICC_SESS_PLUGIN TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.ANNO_REFS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.ANNO_REFS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ANNO_REFS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ANNO_REFS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ANNO_REFS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ANNOTATION_ID_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.ANNOTATIONS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ANNOTATIONS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ANNOTATIONS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ANNOTATIONS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.ANNOTATIONS_CASE_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ANNOTATIONS_CASE_REF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ANNOTATIONS_CASE_REF TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ANNOTATIONS_CASE_REF TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.ANS_DETAILS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ANS_DETAILS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ANS_DETAILS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ANS_DETAILS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ANSWER_COMMENT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ANSWER_COMMENT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ANSWER_COMMENT TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.ANSWER_EXPLANATION TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.ANSWER_EXPLANATION TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ANSWER_EXPLANATION TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ANSWER_EXPLANATION TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ANSWER_EXPLANATION TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.ASSOC_PARENT TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ASSOC_PARENT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ASSOC_PARENT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ASSOC_PARENT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.AUTHORING_MENUS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.AUTHOR_USERS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CARDADD TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CARDADD TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CARDADD TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARDADD TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CARDADD TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CARDADD_BOX TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CARDADD_BOX TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CARDADD_BOX TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARDADD_BOX TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CARDADD_BOX TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CARDADD_COSTS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CARDADD_COSTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARDADD_COSTS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CARDADD_COSTS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CARDADD_ID_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARDADD_ID_SEQ TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CARD_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARD_CHG TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CARD_NAV TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CARD_NAV TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CARD_NAV TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARD_NAV TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CARD_NAV TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CARD_RULES TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CARD_RULES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CARD_RULES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARD_RULES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CARD_RULES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARD_RULES_SEQ TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CARD_RULES_SPEC TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CARD_RULES_SPEC TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CARD_RULES_SPEC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARD_RULES_SPEC TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CARD_RULES_SPEC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARD_RULES_SPEC_SEQ TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CARDS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CARDS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CARDS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_ACC TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_ACC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_ACC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_ACC_VIEW TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_CODES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_CODES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_CODES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_CODES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_COMMENTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_COMMENTS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_COMMENTS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CASE_DEPENDENCIES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_DEPENDENCIES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_DEPENDENCIES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_DEPENDENCIES TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CASE_ENG_SETTING TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_ENG_SETTING TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_ENG_SETTING TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_ENG_SETTING TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_ENG_SETTING TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_FLAGS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_FLAGS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_FLAGS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_INFO_LIST TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_INTERNET TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_INTERNET TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_INTERNET TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_INTERNET TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CASE_LM_LISTS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_LM_LISTS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_LM_LISTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_LM_LISTS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_METADATA TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_METADATA TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_METADATA TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_METADATA TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_METADATA_ADD TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_METADATA_ADD TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_METADATA_ADD TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_PROPERTIES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_PROPERTIES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_PROPERTIES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_PROPERTIES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_RADIO TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_RADIO TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_RADIO TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CASE_RATING TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_RATING TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_RATING TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_RATING TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_RATING TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CASERATING_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASERATING_SEQ TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CASE_RATING_SUM TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_RATING_SUM TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_RATING_SUM TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_RATING_SUM TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_RATING_SUM TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_RESOURCES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_RESOURCES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_RESOURCES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_RESOURCES_VIEW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASEREVIEWER_ID_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_REVIEW_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_REVIEW_REF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_REVIEW_REF TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_REVIEW_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASES TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASES_HIB_VIEW TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASES_HIB_VIEW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_HIB_VIEW TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASES_HIB_VIEW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_STRUCTURE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_STRUCTURE_ACS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_STRUCTURE_ALLTEXTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_STRUCTURE_ANSWERS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_STRUCTURE_HLTEXTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_CARDNUM TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_WN TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_STRUCTURE_TEXTS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CASE_SUMM_COMP TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_SUMM_COMP TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_SUMM_COMP TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_SUMM_COMP TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_SUMM_COMP TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CASE_SUMM_CONF TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_SUMM_CONF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_SUMM_CONF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_SUMM_CONF TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_SUMM_CONF TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CASESUMM_ID_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASESUMM_ID_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASES_VIEW TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CASE_TARGET_GROUP TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CASE_TARGET_GROUP TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CASE_TARGET_GROUP TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CASE_TARGET_GROUP TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CERTIFICATE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CERTIFICATE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CERTIFICATE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CERTIFICATE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_GROUP TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_GROUP TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_GROUP TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_GROUP_EMAILDOM TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_GROUP_EMAILDOM TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_GROUP_EMAILDOM TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_GROUP_EMAILDOM TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_GROUP_SUBGROUPS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_GROUP_SUBGROUPS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_GROUP_SUBGROUPS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_GROUP_SUBGROUPS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_GROUP_USERS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CGT_NAMEDLIST_ID_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CLICKS_ID_SEQ TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CLINREASON_RATE TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CLINREASON_RATE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CLINREASON_RATE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CLINREASON_RATE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CLINREASON_RATE TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.CME_CASE_REF TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CME_CASE_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CME_CASE_REF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CME_CASE_REF TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CME_CASE_REF TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.CODES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.CODES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CODES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.CODES TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.COU_EXT_COURSE_BOOKINGS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_ACC TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_ACC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_ACC TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE_ACC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_ACC_CUSER_VIEW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_CASE_CHILD_VIEW_REF TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_CASE_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_CASE_REF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_CASE_REF TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE_CASE_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_CASES_RULES TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_CHG TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_CHG TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE_CHG TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_CONFERENCING TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_CONFERENCING TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_CONFERENCING TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.COURSE_CR_SETTINGS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_CR_SETTINGS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_CR_SETTINGS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_CR_SETTINGS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE_CR_SETTINGS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_EVALUATION TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_EVALUATION_DETAILS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_EVALUATION2 TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_EVALUATION3 TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_EVALUATION4 TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_GROUP_NAME_VIEW TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_GROUPS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_GROUPS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_GROUPS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE_GROUPS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.COURSEGROUP_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSEGROUP_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_GROUP_TUTORS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_GROUP_TUTORS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE_GROUP_TUTORS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW2 TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_ID_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSENAME_CASE_USER_VIEW TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC_VIEW TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.COURSE_STUDENT_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_STUDENT_REF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_STUDENT_REF TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.COURSE_STUDENT_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.COURSE_STUDENT_REF_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_STUDENT_REF_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_USER_LOGIN_VIEW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.COURSE_VIEW TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_PERMISSION TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_PERMISSION TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_PERMISSION TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_PERMISSION TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_ROLE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_ROLE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_ROLE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_ROLE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CSA_DETAILS_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CS_ALL_MH_NAMES_VIEW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CS_ALL_MH_VIEW TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_SESSION TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_SESSION TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_ACTION TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_ACTION TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_SESSION_ACTION_FAVOURITES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW2 TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_ACTION_RANK_VIEW TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_SESSION_ACTIVE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_ACTIVE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_ACTIVE TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_SESSION_AVG_SUCCESS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_AVG_SUCCESS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_AVG_SUCCESS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_SESSION_AVG_SUCCESS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_SESSION_AVG_SUCCESS_TEST TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_AVG_SUCCESS_TEST TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_AVG_SUCCESS_TEST TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_SESSION_AVG_SUCCESS_TEST TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_DELETE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_DELETE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_INFO TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_INFO2 TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_LOG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_LOG TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_SESSION_LOG TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_LOG_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_LOG_CHG TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_SESSION_LOG_CHG TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.C_SESSION_PERMUTATION TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_SESSION_PERMUTATION TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_PERMUTATION TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_PERMUTATION TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_SESSION_PERMUTATION TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_STATS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_STATS2 TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_TIMES TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_SESSION_2_COURSE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_SESSION_2_COURSE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_SESSION_2_COURSE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_SESSION_2_COURSE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CS_HL_HTMD_VIEW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CS_HL_MH_VIEW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.CS_MAIN_MH_VIEW TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_USER TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_USER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_USER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_USER TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_USER_CHG TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_USER_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_USER_CHG TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_USER_CHG TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.C_USER_ROLES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.C_USER_ROLES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.C_USER_ROLES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.C_USER_ROLES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.DATA_ITEMS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.DATA_ITEMS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.DATA_ITEMS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.DATA_ITEMS_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.DATA_ITEMS_CHG TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.DATA_ITEMS_CHG TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.DUS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.DUS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.DUS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.DYNAMIC_CARDS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.DYNAMIC_CARDS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.DYNAMIC_CARDS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.DYNAMIC_CARDS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.EDUCATION TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION_FUNCTION TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.EVAL_MAIN_SEQ TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.EXPL_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.EXPL_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.FIELD TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.FINDINGS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.FINDINGS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.FINDINGS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.FTANSWER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.FTANSWER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.FTANSWER TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.FTANSWER_DATA TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.FTANSWER_DATA TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.FTANSWER_DATA TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.FTANSWER_ITEM TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.FTANSWER_ITEM TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.FTANSWER_ITEM TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.FTANSWER_ITEM TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.GROUP_ACC TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.GROUP_ACC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.GROUP_ACC TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.GROUP_ACC TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.GROUP_ACC2 TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.GROUP_ACC2 TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.GROUP_ACC2 TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.GROUP_ACC2 TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.GROUP_ID_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.GROUP_LMHEADER TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.GROUP_LMHEADER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.GROUP_LMHEADER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.GROUP_LMHEADER TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.GROUP_SUBSCR TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.GROUP_SUBSCR TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.GROUP_SUBSCR TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.GROUP_SUBSCR TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.GROUP_SUBSCR TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.GUEST_ID_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.HL_ID_SEQ TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.HTMD TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.HTMD TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.HTMD TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.HTMD_LAST_CHG_VIEW TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.IMPPADITION TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.IMPPADITION TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.IMPPADITION TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.IMPPQUESTIONS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.IMPPQUESTIONS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.IMPPQUESTIONS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.INDEX_META TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.INDEX_REF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.INDEX_WORDS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ITEM_ID_SEQ TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LAB_SUBLISTS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LAB_SUBLISTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LAB_SUBLISTS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LAB_SUBLISTS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LISTS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LISTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LISTS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LISTS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LISTS_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_CATALOG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_CATALOGDESCR TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_CATALOG_HAMB TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LOCKS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LOCKS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LOCKS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LOCKS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_CON_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_CON_SEQ TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_EDGE_ID_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_EDGE_ID_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LO_ENDTERMS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_ENDTERMS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_ENDTERMS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_ENDTERMS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_EVENT TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_EVENT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_EVENT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_EVENT TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_EVENT_ACC TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LO_EVENT_ACC TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_EVENT_ACC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_EVENT_ACC TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_EVENT_ACC TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_EVENT_OBJ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LO_EVENT_OBJ TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_EVENT_OBJ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_EVENT_OBJ TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_EVENT_OBJ TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_EVENT_ORDER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_EVENT_ORDER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_EVENT_ORDER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LOG_DATA_ACCESS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_GROUP TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_GROUP_CATALOG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_MAPPING TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_MAT_ACC TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LO_MAT_ACC TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_MAT_ACC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_MAT_ACC TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_MAT_ACC TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LONGMENU_HEADER TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LONGMENU_HEADER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LONGMENU_HEADER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LONGMENU_HEADER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LONGMENU_HEADER_ID_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LONGMENU_ITEMS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LONGMENU_ITEMS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LONGMENU_ITEMS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LONGMENU_ITEMS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LONGMENU_ITEMS_ID_SEQ TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_OBJECTIVE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_OBJECTIVE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_OBJECTIVE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_OBJECTIVE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_RESOURCES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LO_STARTTERMS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_STARTTERMS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_STARTTERMS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_STARTTERMS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_USER TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_USER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_USER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_USER TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LO_USER_ROLE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LO_USER_ROLE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_USER_ROLE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LO_USER_ROLE TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LO_USER_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_USER_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO_VERBS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LO2_SEQ TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LPCT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LPCT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LPCT TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.LRS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.LRS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.LRS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LRS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.LRS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.LRS_ID_SEQ TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MAIL_MESSAGE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MAIL_MESSAGE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MAIL_MESSAGE_ID_SEQ TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.MAPPINGANSWER TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.MAPPINGANSWER TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MAPPINGANSWER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MAPPINGANSWER TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.MAPPINGANSWER_CNX TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.MAPPINGANSWER_CNX TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MAPPINGANSWER_CNX TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MAPPINGANSWER_CNX TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MAPPINGANSWER_CNX TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MATRIX_ANSWER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MATRIX_ANSWER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MATRIX_ANSWER TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MATRIX_ANSWER_COLS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MATRIX_ANSWER_COLS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MATRIX_ANSWER_COLS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MCANSWER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MCANSWER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MCANSWER TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.MCANSWER_VA TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MCANSWER_VA TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MCANSWER_VA TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MCANSWER_VA TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MCANSWER_VA_CHG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MCANSWER_VA_CHG TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MEDIAHEADER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MEDIAHEADER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MEDIAHEADER TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MEDIA_MANAGER_ITEM TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.MEDIA_METADATA TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.MEDIA_METADATA TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MEDIA_METADATA TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MEDIA_METADATA TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MEDIA_METADATA TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.MM_TABLE TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.MM_TABLE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.MM_TABLE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.MM_TABLE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.MM_TABLE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NCANSWER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NCANSWER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NCANSWER TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NCANSWER_TEXT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NCANSWER_TEXT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NCANSWER_TEXT TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.NET_ELEMS_CNX TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NET_ELEMS_CNX TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NET_ELEMS_CNX TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NET_ELEMS_CNX TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.NET_ELEMS2 TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NET_ELEMS2 TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NET_ELEMS2 TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NET_ELEMS2 TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.NETELMS_FDGS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NETELMS_FDGS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NETELMS_FDGS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NETELMS_FDGS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.NETELMS_HYPOS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NETELMS_HYPOS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NETELMS_HYPOS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NETELMS_HYPOS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.NETELMS_LIST TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NETELMS_LIST TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NETELMS_LIST TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NETELMS_LIST TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.NETELMS_THPS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NETELMS_THPS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NETELMS_THPS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NETELMS_THPS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NET_ID_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.NET_LISTS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NET_LISTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NET_LISTS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NET_LISTS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NETS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NETS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NETS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.NETS2 TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.NETS2 TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NETS2 TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.NETS2 TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.NET2_ID_SEQ TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.NET2_ID_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.OBJECT_MAPPING TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.OBJECT_MAPPING TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.OBJECT_MAPPING TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.OBJECT_MAPPING TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.OBJECT_VERSIONS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.OBJECT_VERSIONS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.OBJECT_VERSIONS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.OBJECT_VERSIONS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.OBJECT_VERSIONS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.PATIENTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PATIENTS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.PATIENTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2 TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2A TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2B TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PEERGROUP_VIEW3 TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.PICTUREHL_ARROW TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.PICTUREHL_ARROW TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PICTUREHL_ARROW TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.PICTUREHL_ARROW TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.PICTUREHLBASE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PICTUREHLBASE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.PICTUREHLBASE TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.PICTUREHL_ICON TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.PICTUREHL_ICON TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PICTUREHL_ICON TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.PICTUREHL_ICON TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.PICTUREHLLIST TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.PICTUREHLLIST TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PICTUREHLLIST TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.PICTUREHLLIST TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.PICTUREHL_POLYGON TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.PICTUREHL_POLYGON TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PICTUREHL_POLYGON TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.PICTUREHL_POLYGON TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.PICTUREHL_POSTEXT TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.PICTUREHL_POSTEXT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PICTUREHL_POSTEXT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.PICTUREHL_POSTEXT TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.PINS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.PINS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PINS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.PINS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.PINS_EXAM TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.PINS_EXAM TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PINS_EXAM TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.PINS_EXAM TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.PLAYER_USERS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.RECALC_SCORE TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.RECALC_SCORE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.RECALC_SCORE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.RECALC_SCORE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.RECALC_SCORE TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.REPORTS_TMP TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.REPORTS_TMP TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.REPORTS_TMP TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.RESET_SESSION TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.RESET_SESSION2 TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ROI_ANSWER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ROI_ANSWER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ROI_ANSWER TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.ROLEPERMISSION_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ROLEPERMISSION_REF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ROLEPERMISSION_REF TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.SELECTRECENTACTIVITIES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SEQ_AND_SITE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SESSION_ID_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.SLIDER_ANSWER TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.SLIDER_ANSWER TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SLIDER_ANSWER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SLIDER_ANSWER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.SLIDER_ANSWER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SNOENDUNG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SNOMED TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SNOVERWEIS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SNOWORT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SNOWORTREL TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SOCIALNET_CLICKS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SOCIALNET_CLICKS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.STATUS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.STREAMING_MM_ACTIONS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.STUDENT_SESSION_OVER_VIEW TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SUBFIELD TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.SUBSCRIPTION TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.SUBSCRIPTION TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SUBSCRIPTION TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SUBSCRIPTION TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.SUBSCRIPTION TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SUBSCR_PROJ TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SUBSCR_TUTORS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SUBSCR_TUTORS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.SUBSCR_TUTORS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.SUPPORTREQUEST TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SUPPORTREQUEST TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.SUPPORTREQUEST TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.SUPPORTREQUEST TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.SWITCH_TEST TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.TEST_MY_CURSOR TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.TEXT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.TEXT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.TEXT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.TUTOR_STUDENT_ACCESS_VIEW TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.TXTD TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.TXTD TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.TXTD TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ULANSWER TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ULANSWER TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ULANSWER TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ULANSWER_TEXT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ULANSWER_TEXT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ULANSWER_TEXT TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.ULANSWER_VA TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.ULANSWER_VA TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.ULANSWER_VA TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.ULANSWER_VA TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.UNIQUE_CASE_IDENTIFIER_1 TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.UPDATE_CASEMODIFICATION TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.UPDATE_ENGSCORE_AND_DETAILS TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.UPDATE_USER_RULE TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.UPDATE_USER_RULE TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.UPDATE_USER_RULE TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.UPDATE_USER_RULE TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.UPDATE_USER_RULE TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.UPDHYPERLINKCOUNTER TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.UPDMEDIACOUNTER TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.URL_TOKEN TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.URL_TOKEN TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.URL_TOKEN TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.URL_TOKEN TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.URL_TOKEN_SEQ TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.USERANSWERS_SUMMARY TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USERANSWERS_SUMMARY TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USERANSWERS_SUMMARY TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USERANSWERS_SUMMARY TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USERANSWER_VA TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USERANSWER_VA TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USERANSWER_VA TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USERANSWER_VA TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USERANSWER_VA_RESET TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USERANSWER_VA_RESET TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USERANSWER_VA_RESET TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USERANSWER_VA_SUCCESS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USERANSWER_VA_TIME TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USER_EMAILOPT TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USER_EMAILOPT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USER_EMAILOPT TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USER_EMAILOPT TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USER_ID_SEQ TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USER_NET TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USER_NET TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USER_NET TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USER_NET TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USER_NET_HYPOS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USER_NET_HYPOS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USER_NET_HYPOS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USER_NET_HYPOS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USER_NET_LINKS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USER_NET_LINKS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USER_NET_LINKS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USER_NET_LINKS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USER_NET_LIST TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USER_NET_LIST TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USER_NET_LIST TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USER_NET_LIST TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USER_NET_LISTS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USER_NET_LISTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USER_NET_LISTS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USER_NET_LISTS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USERPERMISSION_REF TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USERPERMISSION_REF TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USERPERMISSION_REF TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USERPERMISSION_REF TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_AUTHOR;
GRANT ALTER ON CASUS.USRANS_CHGLOG TO CASUS_AUTHOR;
GRANT DELETE ON CASUS.USRANS_CHGLOG TO CASUS_AUTHOR;
GRANT INSERT ON CASUS.USRANS_CHGLOG TO CASUS_AUTHOR;
GRANT SELECT ON CASUS.USRANS_CHGLOG TO CASUS_AUTHOR;
GRANT UPDATE ON CASUS.USRANS_CHGLOG TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.VERSIONINGCREATEPATHS TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.VERSIONINGDOCLEAN TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANONECASE TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANWALKUP TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.VERSIONINGREMOVE TO CASUS_AUTHOR;
GRANT EXECUTE ON CASUS.ADDCARD_CLINREAS_REAL_ID TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.ANNOTATION_ID_SEQ TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.ANNOTATIONS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.ANNOTATIONS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.AUTHORING_MENUS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.AUTHOR_USERS TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.CARD_CHG TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CARD_CHG TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CASE_ACC_VIEW TO CASUS_COURSE_SU;
GRANT ALTER ON CASUS.CASE_DEPENDENCIES TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.CASE_DEPENDENCIES TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CASE_DEPENDENCIES TO CASUS_COURSE_SU;
GRANT UPDATE ON CASUS.CASE_DEPENDENCIES TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CASE_RESOURCES_VIEW TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CASEREVIEWER_ID_SEQ TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CASE_REVIEW_REF TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_WN TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.C_GROUP TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.C_GROUP TO CASUS_COURSE_SU;
GRANT UPDATE ON CASUS.C_GROUP TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.C_GROUP_SUBGROUPS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.C_GROUP_USERS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CGT_NAMEDLIST_ID_SEQ TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.COU_EXT_COURSE_BOOKINGS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_ACC_CUSER_VIEW TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.COURSE_CASE_REF TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_CASE_REF TO CASUS_COURSE_SU;
GRANT UPDATE ON CASUS.COURSE_CASE_REF TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_GROUP_NAME_VIEW TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_GROUPS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW2 TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC_VIEW TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_USER_LOGIN_VIEW TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.COURSE_VIEW TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.C_SESSION_ACTION TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.C_SESSION_ACTION TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.C_SESSION_INFO TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.C_SESSION_INFO2 TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_COURSE_SU;
GRANT DELETE ON CASUS.C_SESSION_2_COURSE TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.C_SESSION_2_COURSE TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.C_SESSION_2_COURSE TO CASUS_COURSE_SU;
GRANT UPDATE ON CASUS.C_SESSION_2_COURSE TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.C_USER_ROLES TO CASUS_COURSE_SU;
GRANT ALTER ON CASUS.DYNAMIC_CARDS TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.DYNAMIC_CARDS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.DYNAMIC_CARDS TO CASUS_COURSE_SU;
GRANT UPDATE ON CASUS.DYNAMIC_CARDS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION_FUNCTION TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.EVAL_MAIN_SEQ TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.LISTS_CHG TO CASUS_COURSE_SU;
GRANT DELETE ON CASUS.LOCKS TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.LOCKS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.LOCKS TO CASUS_COURSE_SU;
GRANT UPDATE ON CASUS.LOCKS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.LOG_DATA_ACCESS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.LONGMENU_HEADER TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.LONGMENU_ITEMS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2A TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2B TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.PLAYER_USERS TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.RESET_SESSION TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.RESET_SESSION2 TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.SELECTRECENTACTIVITIES TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.STUDENT_SESSION_OVER_VIEW TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.SWITCH_TEST TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.TEST_MY_CURSOR TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.TUTOR_STUDENT_ACCESS_VIEW TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.UPDATE_CASEMODIFICATION TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.UPDHYPERLINKCOUNTER TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.UPDMEDIACOUNTER TO CASUS_COURSE_SU;
GRANT DELETE ON CASUS.USERANSWER_VA_RESET TO CASUS_COURSE_SU;
GRANT INSERT ON CASUS.USERANSWER_VA_RESET TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.USERANSWER_VA_RESET TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.USER_NET_HYPOS TO CASUS_COURSE_SU;
GRANT SELECT ON CASUS.USER_NET_LISTS TO CASUS_COURSE_SU;
GRANT EXECUTE ON CASUS.ADDCARD_CLINREAS_REAL_ID TO CASUS_EVAL;
GRANT SELECT ON CASUS.ANNOTATION_ID_SEQ TO CASUS_EVAL;
GRANT INSERT ON CASUS.ANNOTATIONS TO CASUS_EVAL;
GRANT SELECT ON CASUS.AUTHORING_MENUS TO CASUS_EVAL;
GRANT SELECT ON CASUS.AUTHOR_USERS TO CASUS_EVAL;
GRANT INSERT ON CASUS.CARD_CHG TO CASUS_EVAL;
GRANT SELECT ON CASUS.CARD_CHG TO CASUS_EVAL;
GRANT SELECT ON CASUS.CASE_ACC_VIEW TO CASUS_EVAL;
GRANT SELECT ON CASUS.CASE_RESOURCES_VIEW TO CASUS_EVAL;
GRANT SELECT ON CASUS.CASEREVIEWER_ID_SEQ TO CASUS_EVAL;
GRANT SELECT ON CASUS.CASE_REVIEW_REF TO CASUS_EVAL;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER TO CASUS_EVAL;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_WN TO CASUS_EVAL;
GRANT INSERT ON CASUS.C_GROUP TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_GROUP TO CASUS_EVAL;
GRANT UPDATE ON CASUS.C_GROUP TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_GROUP_SUBGROUPS TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_GROUP_USERS TO CASUS_EVAL;
GRANT SELECT ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_EVAL;
GRANT SELECT ON CASUS.CGT_NAMEDLIST_ID_SEQ TO CASUS_EVAL;
GRANT SELECT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_EVAL;
GRANT EXECUTE ON CASUS.COU_EXT_COURSE_BOOKINGS TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_ACC_CUSER_VIEW TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_CASE_REF TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_GROUP_NAME_VIEW TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_GROUPS TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW2 TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC_VIEW TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_USER_LOGIN_VIEW TO CASUS_EVAL;
GRANT SELECT ON CASUS.COURSE_VIEW TO CASUS_EVAL;
GRANT INSERT ON CASUS.C_SESSION_ACTION TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_SESSION_ACTION TO CASUS_EVAL;
GRANT INSERT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_SESSION_AVG_SUCCESS_CHG TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_SESSION_INFO TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_SESSION_INFO2 TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_SESSION_TIMES TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_SESSION_2_COURSE TO CASUS_EVAL;
GRANT SELECT ON CASUS.C_USER_ROLES TO CASUS_EVAL;
GRANT SELECT ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_EVAL;
GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION_FUNCTION TO CASUS_EVAL;
GRANT SELECT ON CASUS.EVAL_MAIN_SEQ TO CASUS_EVAL;
GRANT SELECT ON CASUS.LISTS TO CASUS_EVAL;
GRANT INSERT ON CASUS.LISTS_CHG TO CASUS_EVAL;
GRANT SELECT ON CASUS.LOG_DATA_ACCESS TO CASUS_EVAL;
GRANT SELECT ON CASUS.LONGMENU_HEADER TO CASUS_EVAL;
GRANT SELECT ON CASUS.LONGMENU_ITEMS TO CASUS_EVAL;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2A TO CASUS_EVAL;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2B TO CASUS_EVAL;
GRANT SELECT ON CASUS.PLAYER_USERS TO CASUS_EVAL;
GRANT EXECUTE ON CASUS.RESET_SESSION TO CASUS_EVAL;
GRANT EXECUTE ON CASUS.RESET_SESSION2 TO CASUS_EVAL;
GRANT EXECUTE ON CASUS.SELECTRECENTACTIVITIES TO CASUS_EVAL;
GRANT SELECT ON CASUS.SEQ_AND_SITE TO CASUS_EVAL;
GRANT INSERT ON CASUS.SWITCH_TEST TO CASUS_EVAL;
GRANT EXECUTE ON CASUS.TEST_MY_CURSOR TO CASUS_EVAL;
GRANT SELECT ON CASUS.TUTOR_STUDENT_ACCESS_VIEW TO CASUS_EVAL;
GRANT EXECUTE ON CASUS.UPDATE_CASEMODIFICATION TO CASUS_EVAL;
GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CASUS_EVAL;
GRANT EXECUTE ON CASUS.UPDHYPERLINKCOUNTER TO CASUS_EVAL;
GRANT EXECUTE ON CASUS.UPDMEDIACOUNTER TO CASUS_EVAL;
GRANT DELETE ON CASUS.USERANSWER_VA_RESET TO CASUS_EVAL;
GRANT INSERT ON CASUS.USERANSWER_VA_RESET TO CASUS_EVAL;
GRANT SELECT ON CASUS.USERANSWER_VA_RESET TO CASUS_EVAL;
GRANT SELECT ON CASUS.USER_NET_HYPOS TO CASUS_EVAL;
GRANT SELECT ON CASUS.USER_NET_LISTS TO CASUS_EVAL;
GRANT SELECT ON CASUS.ACCESS_URL TO CASUS_PLAYER;
GRANT ALTER ON CASUS.ADDCARD_CLINREASON TO CASUS_PLAYER;
GRANT DELETE ON CASUS.ADDCARD_CLINREASON TO CASUS_PLAYER;
GRANT INSERT ON CASUS.ADDCARD_CLINREASON TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ADDCARD_CLINREASON TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.ADDCARD_CLINREASON TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.ADDCARD_CLINREAS_REAL_ID TO CASUS_PLAYER;
GRANT ALTER ON CASUS.ADDCARD_MOV_CNT TO CASUS_PLAYER;
GRANT DELETE ON CASUS.ADDCARD_MOV_CNT TO CASUS_PLAYER;
GRANT INSERT ON CASUS.ADDCARD_MOV_CNT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ADDCARD_MOV_CNT TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.ADDCARD_MOV_CNT TO CASUS_PLAYER;
GRANT ALTER ON CASUS.AICC_SESS_PLUGIN TO CASUS_PLAYER;
GRANT DELETE ON CASUS.AICC_SESS_PLUGIN TO CASUS_PLAYER;
GRANT INSERT ON CASUS.AICC_SESS_PLUGIN TO CASUS_PLAYER;
GRANT SELECT ON CASUS.AICC_SESS_PLUGIN TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.AICC_SESS_PLUGIN TO CASUS_PLAYER;
GRANT ALTER ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.AICC_SESS_PLUGINS_URLS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.ANNO_REFS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.ANNO_REFS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.ANNO_REFS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ANNO_REFS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.ANNO_REFS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_PLAYER;
GRANT INSERT ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.ANNO_SUMMARYFEEDBACKSTATEMENT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ANNOTATION_ID_SEQ TO CASUS_PLAYER;
GRANT DELETE ON CASUS.ANNOTATIONS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.ANNOTATIONS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ANNOTATIONS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.ANNOTATIONS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.ANNOTATIONS_CASE_REF TO CASUS_PLAYER;
GRANT INSERT ON CASUS.ANNOTATIONS_CASE_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ANNOTATIONS_CASE_REF TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.ANNOTATIONS_CASE_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ANS_DETAILS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ANSWER_COMMENT TO CASUS_PLAYER;
GRANT ALTER ON CASUS.ANSWER_EXPLANATION TO CASUS_PLAYER;
GRANT DELETE ON CASUS.ANSWER_EXPLANATION TO CASUS_PLAYER;
GRANT INSERT ON CASUS.ANSWER_EXPLANATION TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ANSWER_EXPLANATION TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.ANSWER_EXPLANATION TO CASUS_PLAYER;
GRANT ALTER ON CASUS.ASSOC_PARENT TO CASUS_PLAYER;
GRANT INSERT ON CASUS.ASSOC_PARENT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ASSOC_PARENT TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.ASSOC_PARENT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.AUTHORING_MENUS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.AUTHOR_USERS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CARDADD TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CARDADD TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CARDADD TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARDADD TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CARDADD TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CARDADD_BOX TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CARDADD_BOX TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CARDADD_BOX TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARDADD_BOX TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CARDADD_BOX TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARDADD_COSTS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CARDADD_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARDADD_ID_SEQ TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CARD_CHG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARD_CHG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARD_NAV TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CARD_RULES TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CARD_RULES TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CARD_RULES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARD_RULES TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CARD_RULES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARD_RULES_SEQ TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CARD_RULES_SPEC TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CARD_RULES_SPEC TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CARD_RULES_SPEC TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARD_RULES_SPEC TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CARD_RULES_SPEC TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARD_RULES_SPEC_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CARDS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_ACC TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_ACC_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_CODES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_COMMENTS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CASE_DEPENDENCIES TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CASE_DEPENDENCIES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_DEPENDENCIES TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CASE_DEPENDENCIES TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CASE_ENG_SETTING TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CASE_ENG_SETTING TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CASE_ENG_SETTING TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_ENG_SETTING TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CASE_ENG_SETTING TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_FLAGS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_INFO_LIST TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_INTERNET TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_LM_LISTS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_METADATA TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_METADATA_ADD TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_PROPERTIES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_RADIO TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CASE_RATING TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CASE_RATING TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CASE_RATING TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_RATING TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CASE_RATING TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CASERATING_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASERATING_SEQ TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CASE_RATING_SUM TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CASE_RATING_SUM TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CASE_RATING_SUM TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_RATING_SUM TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CASE_RATING_SUM TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_RESOURCES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_RESOURCES_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASEREVIEWER_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_REVIEW_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CASES_HIB_VIEW TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CASES_HIB_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_HIB_VIEW TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CASES_HIB_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_NET_STRUCTURE_TABLE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_NET_STRUCTURE3 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_STRUCTURE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_STRUCTURE_ACS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_STRUCTURE_ALLTEXTS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_STRUCTURE_ANSWERS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_STRUCTURE_HLTEXTS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_CARDNUM TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_STRUCTURE_PLAYER_WN TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_STRUCTURE_TEXTS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CASE_SUMM_COMP TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CASE_SUMM_COMP TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CASE_SUMM_COMP TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_SUMM_COMP TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CASE_SUMM_COMP TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CASE_SUMM_CONF TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CASE_SUMM_CONF TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CASE_SUMM_CONF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_SUMM_CONF TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CASE_SUMM_CONF TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CASESUMM_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASESUMM_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASES_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CASE_TARGET_GROUP TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CERTIFICATE TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CERTIFICATE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CERTIFICATE TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CERTIFICATE TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_GROUP TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_GROUP TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_GROUP TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_GROUP_EMAILDOM TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_GROUP_SUBGROUPS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_GROUP_USERS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CGT_MY_STUDENTS_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CGT_NAMEDLIST_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CG_TUTORS_MY_STUDENTS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CLICKS_ID_SEQ TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CLINREASON_RATE TO CASUS_PLAYER;
GRANT DELETE ON CASUS.CLINREASON_RATE TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CLINREASON_RATE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CLINREASON_RATE TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CLINREASON_RATE TO CASUS_PLAYER;
GRANT ALTER ON CASUS.CME_CASE_REF TO CASUS_PLAYER;
GRANT INSERT ON CASUS.CME_CASE_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CME_CASE_REF TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.CME_CASE_REF TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.COU_EXT_COURSE_BOOKINGS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_ACC TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_ACC_CUSER_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_CASE_CHILD_VIEW_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_CASE_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_CASE_REF_CHG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_CASES_RULES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_CHG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_CONFERENCING TO CASUS_PLAYER;
GRANT ALTER ON CASUS.COURSE_CR_SETTINGS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.COURSE_CR_SETTINGS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.COURSE_CR_SETTINGS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_CR_SETTINGS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.COURSE_CR_SETTINGS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_EVALUATION TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_EVALUATION_DETAILS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_EVALUATION2 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_EVALUATION3 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_EVALUATION4 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_GROUP_DOMAINS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_GROUP_NAME_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_GROUPS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.COURSEGROUP_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSEGROUP_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_GROUP_TUTORS_VIEW2 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSENAME_CASE_USER_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_ACC_VIEW TO CASUS_PLAYER;
GRANT DELETE ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_PLAYER;
GRANT INSERT ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.COURSE_SHIBBOLETH_PROFILE_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_STUDENT_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_USER_LOGIN_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.COURSE_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CSA_DETAILS_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CS_ALL_MH_NAMES_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CS_ALL_MH_VIEW TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_SESSION TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION_ACTION TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_ACTION TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_ACTION_DETAILS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_ACTION_FAV_VIEW2 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_ACTION_RANK_VIEW TO CASUS_PLAYER;
GRANT DELETE ON CASUS.C_SESSION_AVG_SUCCESS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION_AVG_SUCCESS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_AVG_SUCCESS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_SESSION_AVG_SUCCESS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.C_SESSION_AVG_SUCCESS_TEST TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION_AVG_SUCCESS_TEST TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_AVG_SUCCESS_TEST TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_SESSION_AVG_SUCCESS_TEST TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION_DELETE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_DELETE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_INFO TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_INFO2 TO CASUS_PLAYER;
GRANT ALTER ON CASUS.C_SESSION_LOG TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION_LOG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_LOG TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_SESSION_LOG TO CASUS_PLAYER;
GRANT ALTER ON CASUS.C_SESSION_LOG_CHG TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION_LOG_CHG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_LOG_CHG TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_SESSION_LOG_CHG TO CASUS_PLAYER;
GRANT DELETE ON CASUS.C_SESSION_PERMUTATION TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION_PERMUTATION TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_PERMUTATION TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_SESSION_PERMUTATION TO CASUS_PLAYER;
GRANT DELETE ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_SESSION_PERMUTATION_ENTRY TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_STATS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_STATS_SETTINGS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_STATS2 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_TIMES TO CASUS_PLAYER;
GRANT DELETE ON CASUS.C_SESSION_2_COURSE TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_SESSION_2_COURSE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_SESSION_2_COURSE TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_SESSION_2_COURSE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CS_HL_HTMD_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CS_HL_MH_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.CS_MAIN_MH_VIEW TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_USER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_USER TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_USER TO CASUS_PLAYER;
GRANT ALTER ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_USER_ADMIN_GROUPS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.C_USER_CHG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_USER_CHG TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.C_USER_CHG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.C_USER_ROLES TO CASUS_PLAYER;
GRANT INSERT ON CASUS.DATA_ITEMS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.DATA_ITEMS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.DATA_ITEMS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.DATA_ITEMS_CHG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.DUS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.DYNAMIC_CARDS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.DYNAMIC_CARDS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.DYNAMIC_CARDS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.DYNAMIC_CARDS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.EDUCATION TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION TO CASUS_PLAYER;
GRANT SELECT ON CASUS.EMAIL_REGISTRATION_DOMAINS TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.EMAIL_REGISTRATION_FUNCTION TO CASUS_PLAYER;
GRANT SELECT ON CASUS.EVAL_MAIN_SEQ TO CASUS_PLAYER;
GRANT ALTER ON CASUS.EXPL_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.EXPL_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.FIELD TO CASUS_PLAYER;
GRANT SELECT ON CASUS.FINDINGS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.FTANSWER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.FTANSWER_DATA TO CASUS_PLAYER;
GRANT SELECT ON CASUS.FTANSWER_ITEM TO CASUS_PLAYER;
GRANT SELECT ON CASUS.GROUP_ID_SEQ TO CASUS_PLAYER;
GRANT INSERT ON CASUS.GROUP_LMHEADER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.GROUP_LMHEADER TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.GROUP_LMHEADER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.GUEST_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.HL_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.HTMD TO CASUS_PLAYER;
GRANT SELECT ON CASUS.HTMD_LAST_CHG_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.INDEX_META TO CASUS_PLAYER;
GRANT SELECT ON CASUS.INDEX_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.INDEX_WORDS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ITEM_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LAB_SUBLISTS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LISTS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LISTS_CHG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_CATALOG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_CATALOGDESCR TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_CATALOG_HAMB TO CASUS_PLAYER;
GRANT DELETE ON CASUS.LOCKS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LOCKS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LOCKS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.LOCKS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.LO_EDGE_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_EDGE_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_ENDTERMS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.LO_EVENT TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LO_EVENT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_EVENT TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.LO_EVENT TO CASUS_PLAYER;
GRANT ALTER ON CASUS.LO_EVENT_ACC TO CASUS_PLAYER;
GRANT DELETE ON CASUS.LO_EVENT_ACC TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LO_EVENT_ACC TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_EVENT_ACC TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.LO_EVENT_ACC TO CASUS_PLAYER;
GRANT ALTER ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_PLAYER;
GRANT DELETE ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.LO_EVENTLO_CONNPARAM TO CASUS_PLAYER;
GRANT ALTER ON CASUS.LO_EVENT_OBJ TO CASUS_PLAYER;
GRANT DELETE ON CASUS.LO_EVENT_OBJ TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LO_EVENT_OBJ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_EVENT_OBJ TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.LO_EVENT_OBJ TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LO_EVENT_ORDER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_EVENT_ORDER TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.LO_EVENT_ORDER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LOG_DATA_ACCESS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_GROUP TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_GROUP_CATALOG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_MAPPING TO CASUS_PLAYER;
GRANT ALTER ON CASUS.LO_MAT_ACC TO CASUS_PLAYER;
GRANT DELETE ON CASUS.LO_MAT_ACC TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LO_MAT_ACC TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_MAT_ACC TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.LO_MAT_ACC TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LONGMENU_HEADER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LONGMENU_HEADER_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LONGMENU_ITEMS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LONGMENU_ITEMS_ID_SEQ TO CASUS_PLAYER;
GRANT ALTER ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_PLAYER;
GRANT DELETE ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.LO_OBJ_CATALOGENTRY TO CASUS_PLAYER;
GRANT ALTER ON CASUS.LO_OBJECTIVE TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LO_OBJECTIVE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_OBJECTIVE TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.LO_OBJECTIVE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_RESOURCES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_STARTTERMS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.LO_USER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_USER TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.LO_USER TO CASUS_PLAYER;
GRANT DELETE ON CASUS.LO_USER_ROLE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_USER_ROLE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LO_VERBS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LPCT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LRS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.LRS_ID_SEQ TO CASUS_PLAYER;
GRANT INSERT ON CASUS.MAIL_MESSAGE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MAIL_MESSAGE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MAIL_MESSAGE_ID_SEQ TO CASUS_PLAYER;
GRANT ALTER ON CASUS.MAPPINGANSWER TO CASUS_PLAYER;
GRANT INSERT ON CASUS.MAPPINGANSWER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MAPPINGANSWER TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.MAPPINGANSWER TO CASUS_PLAYER;
GRANT ALTER ON CASUS.MAPPINGANSWER_CNX TO CASUS_PLAYER;
GRANT INSERT ON CASUS.MAPPINGANSWER_CNX TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MAPPINGANSWER_CNX TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.MAPPINGANSWER_CNX TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MAPPINGANSWER_ITEMS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MATRIX_ANSWER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MATRIX_ANSWER_COLS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MATRIX_ANSWER_VALUES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MCANSWER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MCANSWER_VA TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MEDIAHEADER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MEDIAHEADER_CONVERT_RESULTS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MEDIA_MANAGER_ITEM TO CASUS_PLAYER;
GRANT ALTER ON CASUS.MEDIA_METADATA TO CASUS_PLAYER;
GRANT DELETE ON CASUS.MEDIA_METADATA TO CASUS_PLAYER;
GRANT INSERT ON CASUS.MEDIA_METADATA TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MEDIA_METADATA TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.MEDIA_METADATA TO CASUS_PLAYER;
GRANT SELECT ON CASUS.MM_TABLE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NCANSWER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NCANSWER_TEXT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NET_ELEMS_CNX TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NET_ELEMS2 TO CASUS_PLAYER;
GRANT DELETE ON CASUS.NETELMS_FDGS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.NETELMS_FDGS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NETELMS_FDGS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.NETELMS_FDGS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.NETELMS_HYPOS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.NETELMS_HYPOS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NETELMS_HYPOS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.NETELMS_HYPOS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_PLAYER;
GRANT INSERT ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.NETELMS_LINK_HYPO_FDG TO CASUS_PLAYER;
GRANT DELETE ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_PLAYER;
GRANT INSERT ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.NETELMS_LINK_HYPO_THP TO CASUS_PLAYER;
GRANT DELETE ON CASUS.NETELMS_LIST TO CASUS_PLAYER;
GRANT INSERT ON CASUS.NETELMS_LIST TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NETELMS_LIST TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.NETELMS_LIST TO CASUS_PLAYER;
GRANT DELETE ON CASUS.NETELMS_THPS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.NETELMS_THPS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NETELMS_THPS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.NETELMS_THPS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NET_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NET_LISTS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.NETS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.NETS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NETS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.NETS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.NETS2 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.OBJECT_VERSIONS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PATIENTS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2A TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PEERGROUP_VIEW2B TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PEERGROUP_VIEW3 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PICTUREHL_ARROW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PICTUREHLBASE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PICTUREHL_ICON TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PICTUREHLLIST TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PICTUREHL_POLYGON TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PICTUREHL_POSTEXT TO CASUS_PLAYER;
GRANT ALTER ON CASUS.PINS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PINS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.PINS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.PINS_EXAM TO CASUS_PLAYER;
GRANT INSERT ON CASUS.PINS_EXAM TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PINS_EXAM TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.PINS_EXAM TO CASUS_PLAYER;
GRANT SELECT ON CASUS.PLAYER_USERS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.RECALC_SCORE TO CASUS_PLAYER;
GRANT DELETE ON CASUS.RECALC_SCORE TO CASUS_PLAYER;
GRANT INSERT ON CASUS.RECALC_SCORE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.RECALC_SCORE TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.RECALC_SCORE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.REFERENCE_TABLE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.REPORTS_TMP TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.RESET_SESSION TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.RESET_SESSION2 TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ROI_ANSWER TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.SELECTRECENTACTIVITIES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SEQ_AND_SITE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SESSION_ID_SEQ TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SHIBBOLETH_ACCESS_PROFILE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SHIBBOLETH_ACCESS_PROFILE_ACC TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SHIBBOLETH_FEDERATION TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SHIBBOLETH_FED_GROUP_REF TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SIMPLE_TABLE TO CASUS_PLAYER;
GRANT ALTER ON CASUS.SLIDER_ANSWER TO CASUS_PLAYER;
GRANT DELETE ON CASUS.SLIDER_ANSWER TO CASUS_PLAYER;
GRANT INSERT ON CASUS.SLIDER_ANSWER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SLIDER_ANSWER TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.SLIDER_ANSWER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.STATUS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.STREAMING_MM_ACTIONS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.STUDENT_SESSION_OVER_VIEW TO CASUS_PLAYER;
GRANT ALTER ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_PLAYER;
GRANT DELETE ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_PLAYER;
GRANT INSERT ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_PLAYER;
GRANT SELECT ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.STUDY_LMU_SLIDER_ADD TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SUBFIELD TO CASUS_PLAYER;
GRANT ALTER ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_PLAYER;
GRANT INSERT ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.SUBSCRIPTION_ERROCODE TO CASUS_PLAYER;
GRANT INSERT ON CASUS.SUBSCR_TUTORS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SUBSCR_TUTORS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.SUBSCR_TUTORS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.SUPPORTREQUEST TO CASUS_PLAYER;
GRANT INSERT ON CASUS.SUPPORTREQUEST TO CASUS_PLAYER;
GRANT SELECT ON CASUS.SUPPORTREQUEST TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.SUPPORTREQUEST TO CASUS_PLAYER;
GRANT INSERT ON CASUS.SWITCH_TEST TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.TEST_MY_CURSOR TO CASUS_PLAYER;
GRANT SELECT ON CASUS.TEXT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.TUTOR_STUDENT_ACCESS_VIEW TO CASUS_PLAYER;
GRANT SELECT ON CASUS.TXTD TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ULANSWER TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ULANSWER_TEXT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.ULANSWER_VA TO CASUS_PLAYER;
GRANT SELECT ON CASUS.UNIQUE_CASE_IDENTIFIER_1 TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.UPDATE_CASEMODIFICATION TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.UPDATE_ENGSCORE_AND_DETAILS TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.UPDATE_USER_RULE TO CASUS_PLAYER;
GRANT INSERT ON CASUS.UPDATE_USER_RULE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.UPDATE_USER_RULE TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.UPDATE_USER_RULE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.URL_TOKEN TO CASUS_PLAYER;
GRANT SELECT ON CASUS.URL_TOKEN_PROPERTIES TO CASUS_PLAYER;
GRANT SELECT ON CASUS.URL_TOKEN_SEQ TO CASUS_PLAYER;
GRANT ALTER ON CASUS.USERANSWERS_SUMMARY TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USERANSWERS_SUMMARY TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USERANSWERS_SUMMARY TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.USERANSWERS_SUMMARY TO CASUS_PLAYER;
GRANT DELETE ON CASUS.USERANSWER_VA TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USERANSWER_VA TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USERANSWER_VA TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.USERANSWER_VA TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USERANSWER_VA_RELATIONAL TO CASUS_PLAYER;
GRANT DELETE ON CASUS.USERANSWER_VA_RESET TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USERANSWER_VA_RESET TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USERANSWER_VA_RESET TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USERANSWER_VA_SUCCESS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USERANSWER_VA_TIME TO CASUS_PLAYER;
GRANT DELETE ON CASUS.USER_EMAILOPT TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USER_EMAILOPT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USER_EMAILOPT TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.USER_EMAILOPT TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USER_ID_SEQ TO CASUS_PLAYER;
GRANT DELETE ON CASUS.USER_NET TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USER_NET TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USER_NET TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.USER_NET TO CASUS_PLAYER;
GRANT DELETE ON CASUS.USER_NET_HYPOS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USER_NET_HYPOS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USER_NET_HYPOS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.USER_NET_HYPOS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.USER_NET_LINKS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USER_NET_LINKS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USER_NET_LINKS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.USER_NET_LINKS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.USER_NET_LIST TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USER_NET_LIST TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USER_NET_LIST TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.USER_NET_LIST TO CASUS_PLAYER;
GRANT DELETE ON CASUS.USER_NET_LISTS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USER_NET_LISTS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USER_NET_LISTS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.USER_NET_LISTS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_PLAYER;
GRANT DELETE ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.USER_SUMMARY_STATEMENTS TO CASUS_PLAYER;
GRANT ALTER ON CASUS.USRANS_CHGLOG TO CASUS_PLAYER;
GRANT DELETE ON CASUS.USRANS_CHGLOG TO CASUS_PLAYER;
GRANT INSERT ON CASUS.USRANS_CHGLOG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.USRANS_CHGLOG TO CASUS_PLAYER;
GRANT UPDATE ON CASUS.USRANS_CHGLOG TO CASUS_PLAYER;
GRANT SELECT ON CASUS.VARARRAY_TABLE TO CASUS_PLAYER;
GRANT SELECT ON CASUS.VARARRAY_TABLE_VA TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.VERSIONINGCREATEPATHS TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.VERSIONINGDOCLEAN TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANONECASE TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.VERSIONINGDOCLEANWALKUP TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.VERSIONINGREMOVE TO CASUS_PLAYER;
GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CONNECT;
--
-- Create Schema Script
--   Database Version            : 11.2.0.4.0
--   Database Compatible Level   : 11.2.0.0.0
--   Script Compatible Level     : 11.2.0.0.0
--   Toad Version                : 12.12.0.39
--   DB Connect String           : 192.168.1.13:1521/CASUS2
--   Schema                      : CRT
--   Script Created by           : CASUS
--   Script Created at           : 28.09.2018 22:01:23
--   Notes                       : 
--

-- Object Counts: 
--   Roles: 4           System Privileges: 211  Roles: 16           Grants: 274 
--   Users: 1           System Privileges: 1    Roles: 4                 
--   Tablespaces: 3     Datafiles: 2        Tempfiles: 1 
-- 
--   Directories: 4 
--   Indexes: 17        Columns: 23         
--   Object Privileges: 4 
--   Sequences: 3 
--   Tables: 24         Columns: 229        Constraints: 5      
--   Views: 1           Columns: 3          


-- "Set define off" turns off substitution variables.
Set define off; 

--
-- DATA_PUMP_DIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
DATA_PUMP_DIR AS 
'/opt/oracle/oracle11/admin/casus2/dpdump/';


--
-- ORACLE_OCM_CONFIG_DIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
ORACLE_OCM_CONFIG_DIR AS 
'/opt/oracle/oracle11/product/11.2.0/dbhome_1/ccr/hosts/odn13.instruct.eu/state';


--
-- ORACLE_OCM_CONFIG_DIR2  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
ORACLE_OCM_CONFIG_DIR2 AS 
'/opt/oracle/oracle11/product/11.2.0/dbhome_1/ccr/state';


--
-- XMLDIR  (Directory) 
--
CREATE OR REPLACE DIRECTORY 
XMLDIR AS 
'/opt/oracle/oracle11/product/11.2.0/dbhome_1/rdbms/xml';


--
-- INDX  (Tablespace) 
--
CREATE TABLESPACE INDX DATAFILE 
  '/opt/oracle/oracle11/oradata/casus2/indx01.dbf' SIZE 19590M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED
LOGGING
ONLINE
EXTENT MANAGEMENT LOCAL AUTOALLOCATE
BLOCKSIZE 8K
SEGMENT SPACE MANAGEMENT AUTO
FLASHBACK ON;


--
-- TEMP  (Tablespace) 
--
CREATE TEMPORARY TABLESPACE TEMP TEMPFILE 
  '/opt/oracle/oracle11/oradata/casus2/temp01.dbf' SIZE 896M AUTOEXTEND ON NEXT 640K MAXSIZE UNLIMITED
TABLESPACE GROUP ''
EXTENT MANAGEMENT LOCAL UNIFORM SIZE 1M;


--
-- USERS  (Tablespace) 
--
CREATE TABLESPACE USERS DATAFILE 
  '/opt/oracle/oracle11/oradata/casus2/users01.dbf' SIZE 9923840K AUTOEXTEND ON NEXT 1280K MAXSIZE UNLIMITED
LOGGING
ONLINE
EXTENT MANAGEMENT LOCAL AUTOALLOCATE
BLOCKSIZE 8K
SEGMENT SPACE MANAGEMENT AUTO
FLASHBACK ON;


--
-- "DEFAULT"  (Profile) 
--
CREATE PROFILE "DEFAULT" LIMIT
  SESSIONS_PER_USER UNLIMITED
  CPU_PER_SESSION UNLIMITED
  CPU_PER_CALL UNLIMITED
  CONNECT_TIME UNLIMITED
  IDLE_TIME UNLIMITED
  LOGICAL_READS_PER_SESSION UNLIMITED
  LOGICAL_READS_PER_CALL UNLIMITED
  COMPOSITE_LIMIT UNLIMITED
  PRIVATE_SGA UNLIMITED
  FAILED_LOGIN_ATTEMPTS UNLIMITED
  PASSWORD_LIFE_TIME UNLIMITED
  PASSWORD_REUSE_TIME UNLIMITED
  PASSWORD_REUSE_MAX UNLIMITED
  PASSWORD_LOCK_TIME 1
  PASSWORD_GRACE_TIME 7
  PASSWORD_VERIFY_FUNCTION NULL;


--
-- AUTHENTICATEDUSER  (Role) 
--
CREATE ROLE AUTHENTICATEDUSER NOT IDENTIFIED;


--
-- CONNECT  (Role) 
--
CREATE ROLE CONNECT NOT IDENTIFIED;

-- Object privileges granted to CONNECT
GRANT EXECUTE ON CASUS.UPDATE_SESSION_AVGS TO CONNECT;

-- System privileges granted to CONNECT
GRANT CREATE SESSION TO CONNECT;


--
-- DBA  (Role) 
--
CREATE ROLE DBA NOT IDENTIFIED;

-- Object privileges granted to DBA
GRANT EXECUTE ON SYS.AS_REPLAY TO DBA;
GRANT DEBUG ON SYS.AW$ TO DBA;
GRANT SELECT ON SYS.AW$ TO DBA;
GRANT DEBUG ON SYS.AW_OBJ$ TO DBA;
GRANT SELECT ON SYS.AW_OBJ$ TO DBA;
GRANT DEBUG ON SYS.AW_PROP$ TO DBA;
GRANT SELECT ON SYS.AW_PROP$ TO DBA;
GRANT ALTER ON SYS.AWSEQ$ TO DBA;
GRANT SELECT ON SYS.AWSEQ$ TO DBA;
GRANT DEBUG ON SYS.AW_TRACK$ TO DBA;
GRANT SELECT ON SYS.AW_TRACK$ TO DBA;
GRANT EXECUTE ON SYS.DBMS_ADR TO DBA;
GRANT EXECUTE ON SYS.DBMS_AUTO_SQLTUNE TO DBA;
GRANT EXECUTE ON SYS.DBMS_AUTO_TASK_ADMIN TO DBA;
GRANT EXECUTE ON SYS.DBMS_AUTO_TASK_IMMEDIATE TO DBA;
GRANT EXECUTE ON SYS.DBMS_CACHEUTIL TO DBA;
GRANT EXECUTE ON SYS.DBMS_DEFER_QUERY TO DBA;
GRANT EXECUTE ON SYS.DBMS_DEFER_SYS TO DBA;
GRANT EXECUTE ON SYS.DBMS_DNFS TO DBA;
GRANT EXECUTE ON SYS.DBMS_FEATURE_USAGE_REPORT TO DBA;
GRANT EXECUTE ON SYS.DBMS_FLASHBACK TO DBA;
GRANT EXECUTE ON SYS.DBMS_FLASHBACK_ARCHIVE TO DBA;
GRANT EXECUTE ON SYS.DBMS_HM TO DBA;
GRANT EXECUTE ON SYS.DBMS_IR TO DBA;
GRANT EXECUTE ON SYS.DBMS_LOGSTDBY TO DBA;
GRANT EXECUTE ON SYS.DBMS_MONITOR TO DBA;
GRANT EXECUTE ON SYS.DBMS_NETWORK_ACL_ADMIN TO DBA;
GRANT EXECUTE ON SYS.DBMS_RAT_MASK TO DBA;
GRANT EXECUTE ON SYS.DBMS_RESULT_CACHE TO DBA;
GRANT EXECUTE ON SYS.DBMS_RESUMABLE TO DBA;
GRANT EXECUTE ON SYS.DBMS_SERVER_ALERT TO DBA;
GRANT EXECUTE ON SYS.DBMS_SERVER_TRACE TO DBA;
GRANT EXECUTE ON SYS.DBMS_SERVICE TO DBA;
GRANT EXECUTE ON SYS.DBMS_STORAGE_MAP TO DBA;
GRANT EXECUTE ON SYS.DBMS_TDB TO DBA;
GRANT EXECUTE ON SYS.DBMS_UADV_ARR TO DBA;
GRANT EXECUTE ON SYS.DBMS_UNDO_ADV TO DBA;
GRANT EXECUTE ON SYS.DBMS_WLM TO DBA;
GRANT EXECUTE ON SYS.DBMS_WORKLOAD_CAPTURE TO DBA;
GRANT EXECUTE ON SYS.DBMS_WORKLOAD_REPLAY TO DBA;
GRANT EXECUTE ON SYS.DBMS_WORKLOAD_REPOSITORY TO DBA;
GRANT EXECUTE ON SYS.DBMS_XS_PRINCIPALS TO DBA;
GRANT EXECUTE ON SYS.DBMS_XS_PRINCIPALS_INT TO DBA;
GRANT EXECUTE ON SYS.HM_SQLTK_INTERNAL TO DBA;
GRANT EXECUTE ON SYS.LOAD_UNDO_STAT TO DBA;
GRANT ALTER ON SYS.MAP_OBJECT TO DBA;
GRANT DEBUG ON SYS.MAP_OBJECT TO DBA;
GRANT DELETE ON SYS.MAP_OBJECT TO DBA;
GRANT FLASHBACK ON SYS.MAP_OBJECT TO DBA;
GRANT INSERT ON SYS.MAP_OBJECT TO DBA;
GRANT ON COMMIT REFRESH ON SYS.MAP_OBJECT TO DBA;
GRANT QUERY REWRITE ON SYS.MAP_OBJECT TO DBA;
GRANT SELECT ON SYS.MAP_OBJECT TO DBA;
GRANT UPDATE ON SYS.MAP_OBJECT TO DBA;
GRANT DEBUG ON SYS.OLAP_TAB$ TO DBA;
GRANT SELECT ON SYS.OLAP_TAB$ TO DBA;
GRANT DEBUG ON SYS.OLAP_TAB_COL$ TO DBA;
GRANT SELECT ON SYS.OLAP_TAB_COL$ TO DBA;
GRANT DEBUG ON SYS.OLAP_TAB_HIER$ TO DBA;
GRANT SELECT ON SYS.OLAP_TAB_HIER$ TO DBA;
GRANT EXECUTE ON SYS.OUTLN_EDIT_PKG TO DBA;
GRANT EXECUTE ON SYS.OUTLN_PKG TO DBA;
GRANT DEBUG ON SYS.PS$ TO DBA;
GRANT SELECT ON SYS.PS$ TO DBA;
GRANT EXECUTE ON SYS.RESET_UNDO_STAT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_ADR_CONTROL TO DBA;
GRANT SELECT ON SYS.V_$DIAG_ADR_INVALIDATION TO DBA;
GRANT SELECT ON SYS.V_$DIAG_ALERT_EXT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_AMS_XACTION TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USER_ACTION TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USER_ACTION_DEF TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USR_ACT_PARAM TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USR_ACT_PARAM_DEF TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USR_INC_ACT_MAP TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DDE_USR_INC_TYPE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DFW_CONFIG_CAPTURE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DFW_CONFIG_ITEM TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DIAGV_INCIDENT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_DIR_EXT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_EM_DIAG_JOB TO DBA;
GRANT SELECT ON SYS.V_$DIAG_EM_TARGET_INFO TO DBA;
GRANT SELECT ON SYS.V_$DIAG_EM_USER_ACTIVITY TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_FDG_SET TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_FINDING TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_INFO TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_MESSAGE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_RECOMMENDATION TO DBA;
GRANT SELECT ON SYS.V_$DIAG_HM_RUN TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INCCKEY TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INCIDENT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INCIDENT_FILE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INC_METER_CONFIG TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INC_METER_IMPT_DEF TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INC_METER_INFO TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INC_METER_PK_IMPTS TO DBA;
GRANT SELECT ON SYS.V_$DIAG_INC_METER_SUMMARY TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_CONFIGURATION TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_FILE_COPY_LOG TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_FILE_METADATA TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PACKAGE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PACKAGE_FILE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PACKAGE_HISTORY TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PACKAGE_INCIDENT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PKG_UNPACK_HIST TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_PROGRESS_LOG TO DBA;
GRANT SELECT ON SYS.V_$DIAG_IPS_REMOTE_PACKAGE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_PICKLEERR TO DBA;
GRANT SELECT ON SYS.V_$DIAG_PROBLEM TO DBA;
GRANT SELECT ON SYS.V_$DIAG_RELMD_EXT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_SWEEPERR TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_ACTINC TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_ACTPROB TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VEM_USER_ACTLOG TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VEM_USER_ACTLOG1 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VHM_RUN TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIEW TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIEWCOL TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_INCCOUNT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_INCFCOUNT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VINCIDENT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VINCIDENT_FILE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VINC_METER_INFO TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_INC_METER_INFO_PROB TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_FILE_COPY_LOG TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_FILE_METADATA TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PACKAGE_FILE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PACKAGE_HISTORY TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PACKAGE_MAIN_INT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PACKAGE_SIZE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PKG_FILE TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PKG_INC_CAND TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PKG_INC_DTL TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PKG_INC_DTL1 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VIPS_PKG_MAIN_PROBLEM TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_IPSPRBCNT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_IPSPRBCNT1 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_NFCINC TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VNOT_EXIST_INCIDENT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM_BUCKET TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM_BUCKET_COUNT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM_BUCKET1 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM_INT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM_LASTINC TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM1 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VPROBLEM2 TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VSHOWCATVIEW TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VSHOWINCB TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VSHOWINCB_I TO DBA;
GRANT SELECT ON SYS.V_$DIAG_V_SWPERRCOUNT TO DBA;
GRANT SELECT ON SYS.V_$DIAG_VTEST_EXISTS TO DBA;
GRANT SELECT ON SYS.V$XS_SESSION TO DBA;
GRANT SELECT ON SYS.V$XS_SESSION_ATTRIBUTE TO DBA;
GRANT SELECT ON SYS.V$XS_SESSION_ROLE TO DBA;
GRANT EXECUTE ON XDB.DBMS_CSX_ADMIN TO DBA;
GRANT EXECUTE ON XDB.DBMS_XDB_ADMIN TO DBA;
GRANT ALTER ON XDB.XDB$ACL TO DBA;
GRANT DEBUG ON XDB.XDB$ACL TO DBA;
GRANT DELETE ON XDB.XDB$ACL TO DBA;
GRANT FLASHBACK ON XDB.XDB$ACL TO DBA;
GRANT INSERT ON XDB.XDB$ACL TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$ACL TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$ACL TO DBA;
GRANT SELECT ON XDB.XDB$ACL TO DBA;
GRANT UPDATE ON XDB.XDB$ACL TO DBA;
GRANT ALTER ON XDB.XDB$CONFIG TO DBA;
GRANT DEBUG ON XDB.XDB$CONFIG TO DBA;
GRANT DELETE ON XDB.XDB$CONFIG TO DBA;
GRANT FLASHBACK ON XDB.XDB$CONFIG TO DBA;
GRANT INSERT ON XDB.XDB$CONFIG TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$CONFIG TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$CONFIG TO DBA;
GRANT SELECT ON XDB.XDB$CONFIG TO DBA;
GRANT UPDATE ON XDB.XDB$CONFIG TO DBA;
GRANT ALTER ON XDB.XDB$D_LINK TO DBA;
GRANT DEBUG ON XDB.XDB$D_LINK TO DBA;
GRANT DELETE ON XDB.XDB$D_LINK TO DBA;
GRANT FLASHBACK ON XDB.XDB$D_LINK TO DBA;
GRANT INSERT ON XDB.XDB$D_LINK TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$D_LINK TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$D_LINK TO DBA;
GRANT SELECT ON XDB.XDB$D_LINK TO DBA;
GRANT UPDATE ON XDB.XDB$D_LINK TO DBA;
GRANT ALTER ON XDB.XDB$H_INDEX TO DBA;
GRANT DEBUG ON XDB.XDB$H_INDEX TO DBA;
GRANT DELETE ON XDB.XDB$H_INDEX TO DBA;
GRANT FLASHBACK ON XDB.XDB$H_INDEX TO DBA;
GRANT INSERT ON XDB.XDB$H_INDEX TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$H_INDEX TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$H_INDEX TO DBA;
GRANT SELECT ON XDB.XDB$H_INDEX TO DBA;
GRANT UPDATE ON XDB.XDB$H_INDEX TO DBA;
GRANT ALTER ON XDB.XDB$H_LINK TO DBA;
GRANT DEBUG ON XDB.XDB$H_LINK TO DBA;
GRANT DELETE ON XDB.XDB$H_LINK TO DBA;
GRANT FLASHBACK ON XDB.XDB$H_LINK TO DBA;
GRANT INSERT ON XDB.XDB$H_LINK TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$H_LINK TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$H_LINK TO DBA;
GRANT SELECT ON XDB.XDB$H_LINK TO DBA;
GRANT UPDATE ON XDB.XDB$H_LINK TO DBA;
GRANT ALTER ON XDB.XDB$NLOCKS TO DBA;
GRANT DEBUG ON XDB.XDB$NLOCKS TO DBA;
GRANT DELETE ON XDB.XDB$NLOCKS TO DBA;
GRANT FLASHBACK ON XDB.XDB$NLOCKS TO DBA;
GRANT INSERT ON XDB.XDB$NLOCKS TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$NLOCKS TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$NLOCKS TO DBA;
GRANT SELECT ON XDB.XDB$NLOCKS TO DBA;
GRANT UPDATE ON XDB.XDB$NLOCKS TO DBA;
GRANT ALTER ON XDB.XDB$RESCONFIG TO DBA;
GRANT DEBUG ON XDB.XDB$RESCONFIG TO DBA;
GRANT DELETE ON XDB.XDB$RESCONFIG TO DBA;
GRANT FLASHBACK ON XDB.XDB$RESCONFIG TO DBA;
GRANT INSERT ON XDB.XDB$RESCONFIG TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$RESCONFIG TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$RESCONFIG TO DBA;
GRANT SELECT ON XDB.XDB$RESCONFIG TO DBA;
GRANT UPDATE ON XDB.XDB$RESCONFIG TO DBA;
GRANT ALTER ON XDB.XDB$RESOURCE TO DBA;
GRANT DEBUG ON XDB.XDB$RESOURCE TO DBA;
GRANT DELETE ON XDB.XDB$RESOURCE TO DBA;
GRANT FLASHBACK ON XDB.XDB$RESOURCE TO DBA;
GRANT INSERT ON XDB.XDB$RESOURCE TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XDB$RESOURCE TO DBA;
GRANT QUERY REWRITE ON XDB.XDB$RESOURCE TO DBA;
GRANT SELECT ON XDB.XDB$RESOURCE TO DBA;
GRANT UPDATE ON XDB.XDB$RESOURCE TO DBA;
GRANT ALTER ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT DEBUG ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT DELETE ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT FLASHBACK ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT INSERT ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT ON COMMIT REFRESH ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT QUERY REWRITE ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT SELECT ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT UPDATE ON XDB.X$PT4FGF11FH12E8EV0G751A5OKR14 TO DBA;
GRANT ALTER ON XDB.XS$DATA_SECURITY TO DBA;
GRANT DEBUG ON XDB.XS$DATA_SECURITY TO DBA;
GRANT DELETE ON XDB.XS$DATA_SECURITY TO DBA;
GRANT FLASHBACK ON XDB.XS$DATA_SECURITY TO DBA;
GRANT INSERT ON XDB.XS$DATA_SECURITY TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XS$DATA_SECURITY TO DBA;
GRANT QUERY REWRITE ON XDB.XS$DATA_SECURITY TO DBA;
GRANT SELECT ON XDB.XS$DATA_SECURITY TO DBA;
GRANT UPDATE ON XDB.XS$DATA_SECURITY TO DBA;
GRANT ALTER ON XDB.XS$PRINCIPALS TO DBA;
GRANT DEBUG ON XDB.XS$PRINCIPALS TO DBA;
GRANT DELETE ON XDB.XS$PRINCIPALS TO DBA;
GRANT FLASHBACK ON XDB.XS$PRINCIPALS TO DBA;
GRANT INSERT ON XDB.XS$PRINCIPALS TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XS$PRINCIPALS TO DBA;
GRANT QUERY REWRITE ON XDB.XS$PRINCIPALS TO DBA;
GRANT SELECT ON XDB.XS$PRINCIPALS TO DBA;
GRANT UPDATE ON XDB.XS$PRINCIPALS TO DBA;
GRANT ALTER ON XDB.XS$ROLESETS TO DBA;
GRANT DEBUG ON XDB.XS$ROLESETS TO DBA;
GRANT DELETE ON XDB.XS$ROLESETS TO DBA;
GRANT FLASHBACK ON XDB.XS$ROLESETS TO DBA;
GRANT INSERT ON XDB.XS$ROLESETS TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XS$ROLESETS TO DBA;
GRANT QUERY REWRITE ON XDB.XS$ROLESETS TO DBA;
GRANT SELECT ON XDB.XS$ROLESETS TO DBA;
GRANT UPDATE ON XDB.XS$ROLESETS TO DBA;
GRANT ALTER ON XDB.XS$SECURITYCLASS TO DBA;
GRANT DEBUG ON XDB.XS$SECURITYCLASS TO DBA;
GRANT DELETE ON XDB.XS$SECURITYCLASS TO DBA;
GRANT FLASHBACK ON XDB.XS$SECURITYCLASS TO DBA;
GRANT INSERT ON XDB.XS$SECURITYCLASS TO DBA;
GRANT ON COMMIT REFRESH ON XDB.XS$SECURITYCLASS TO DBA;
GRANT QUERY REWRITE ON XDB.XS$SECURITYCLASS TO DBA;
GRANT SELECT ON XDB.XS$SECURITYCLASS TO DBA;
GRANT UPDATE ON XDB.XS$SECURITYCLASS TO DBA;

-- System privileges granted to DBA
GRANT ADMINISTER ANY SQL TUNING SET TO DBA WITH ADMIN OPTION;
GRANT ADMINISTER DATABASE TRIGGER TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'DBA', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => TRUE);
END;
/
GRANT ADMINISTER SQL MANAGEMENT OBJECT TO DBA WITH ADMIN OPTION;
GRANT ADMINISTER SQL TUNING SET TO DBA WITH ADMIN OPTION;
GRANT ADVISOR TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY CLUSTER TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY DIMENSION TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY EDITION TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT ALTER ANY INDEX TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY OUTLINE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY ROLE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT ALTER ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY SQL PROFILE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY TRIGGER TO DBA WITH ADMIN OPTION;
GRANT ALTER ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT ALTER DATABASE TO DBA WITH ADMIN OPTION;
GRANT ALTER PROFILE TO DBA WITH ADMIN OPTION;
GRANT ALTER RESOURCE COST TO DBA WITH ADMIN OPTION;
GRANT ALTER ROLLBACK SEGMENT TO DBA WITH ADMIN OPTION;
GRANT ALTER SESSION TO DBA WITH ADMIN OPTION;
GRANT ALTER SYSTEM TO DBA WITH ADMIN OPTION;
GRANT ALTER TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT ALTER USER TO DBA WITH ADMIN OPTION;
GRANT ANALYZE ANY TO DBA WITH ADMIN OPTION;
GRANT ANALYZE ANY DICTIONARY TO DBA WITH ADMIN OPTION;
GRANT AUDIT ANY TO DBA WITH ADMIN OPTION;
GRANT AUDIT SYSTEM TO DBA WITH ADMIN OPTION;
GRANT BACKUP ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT BECOME USER TO DBA WITH ADMIN OPTION;
GRANT CHANGE NOTIFICATION TO DBA WITH ADMIN OPTION;
GRANT COMMENT ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT COMMENT ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CLUSTER TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CONTEXT TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY DIMENSION TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY DIRECTORY TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY EDITION TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT CREATE ANY INDEX TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY JOB TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY OUTLINE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY PROCEDURE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT CREATE ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY SQL PROFILE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY SYNONYM TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY TRIGGER TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT CREATE ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT CREATE CLUSTER TO DBA WITH ADMIN OPTION;
GRANT CREATE CUBE TO DBA WITH ADMIN OPTION;
GRANT CREATE CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT CREATE CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT CREATE DATABASE LINK TO DBA WITH ADMIN OPTION;
GRANT CREATE DIMENSION TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_EVALUATION_CONTEXT_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT CREATE EXTERNAL JOB TO DBA WITH ADMIN OPTION;
GRANT CREATE INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE JOB TO DBA WITH ADMIN OPTION;
GRANT CREATE LIBRARY TO DBA WITH ADMIN OPTION;
GRANT CREATE MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT CREATE MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT CREATE MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT CREATE OPERATOR TO DBA WITH ADMIN OPTION;
GRANT CREATE PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT CREATE PROFILE TO DBA WITH ADMIN OPTION;
GRANT CREATE PUBLIC DATABASE LINK TO DBA WITH ADMIN OPTION;
GRANT CREATE PUBLIC SYNONYM TO DBA WITH ADMIN OPTION;
GRANT CREATE ROLE TO DBA WITH ADMIN OPTION;
GRANT CREATE ROLLBACK SEGMENT TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_SET_OBJ,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT CREATE SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT CREATE SESSION TO DBA WITH ADMIN OPTION;
GRANT CREATE SYNONYM TO DBA WITH ADMIN OPTION;
GRANT CREATE TABLE TO DBA WITH ADMIN OPTION;
GRANT CREATE TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT CREATE TRIGGER TO DBA WITH ADMIN OPTION;
GRANT CREATE TYPE TO DBA WITH ADMIN OPTION;
GRANT CREATE USER TO DBA WITH ADMIN OPTION;
GRANT CREATE VIEW TO DBA WITH ADMIN OPTION;
GRANT DEBUG ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT DEBUG CONNECT SESSION TO DBA WITH ADMIN OPTION;
GRANT DELETE ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT DELETE ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT DELETE ANY TABLE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'DEQUEUE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => TRUE);
END;
/
GRANT DROP ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CLUSTER TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CONTEXT TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT DROP ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT DROP ANY DIMENSION TO DBA WITH ADMIN OPTION;
GRANT DROP ANY DIRECTORY TO DBA WITH ADMIN OPTION;
GRANT DROP ANY EDITION TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT DROP ANY INDEX TO DBA WITH ADMIN OPTION;
GRANT DROP ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT DROP ANY MATERIALIZED VIEW TO DBA WITH ADMIN OPTION;
GRANT DROP ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT DROP ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT DROP ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT DROP ANY OUTLINE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY ROLE TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT DROP ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY SQL PROFILE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY SYNONYM TO DBA WITH ADMIN OPTION;
GRANT DROP ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY TRIGGER TO DBA WITH ADMIN OPTION;
GRANT DROP ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT DROP ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT DROP PROFILE TO DBA WITH ADMIN OPTION;
GRANT DROP PUBLIC DATABASE LINK TO DBA WITH ADMIN OPTION;
GRANT DROP PUBLIC SYNONYM TO DBA WITH ADMIN OPTION;
GRANT DROP ROLLBACK SEGMENT TO DBA WITH ADMIN OPTION;
GRANT DROP TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT DROP USER TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'ENQUEUE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => TRUE);
END;
/
GRANT EXECUTE ANY ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY CLASS TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT EXECUTE ANY INDEXTYPE TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY LIBRARY TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY OPERATOR TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY PROCEDURE TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ANY PROGRAM TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE_SET,
  GRANTEE      => 'DBA',
  GRANT_OPTION => TRUE);
END;
/
GRANT EXECUTE ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT EXECUTE ASSEMBLY TO DBA WITH ADMIN OPTION;
GRANT EXPORT FULL DATABASE TO DBA WITH ADMIN OPTION;
GRANT FLASHBACK ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT FLASHBACK ARCHIVE ADMINISTER TO DBA WITH ADMIN OPTION;
GRANT FORCE ANY TRANSACTION TO DBA WITH ADMIN OPTION;
GRANT FORCE TRANSACTION TO DBA WITH ADMIN OPTION;
GRANT GLOBAL QUERY REWRITE TO DBA WITH ADMIN OPTION;
GRANT GRANT ANY OBJECT PRIVILEGE TO DBA WITH ADMIN OPTION;
GRANT GRANT ANY PRIVILEGE TO DBA WITH ADMIN OPTION;
GRANT GRANT ANY ROLE TO DBA WITH ADMIN OPTION;
GRANT IMPORT FULL DATABASE TO DBA WITH ADMIN OPTION;
GRANT INSERT ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT INSERT ANY MEASURE FOLDER TO DBA WITH ADMIN OPTION;
GRANT INSERT ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT LOCK ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT MANAGE ANY FILE GROUP TO DBA WITH ADMIN OPTION;
BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'DBA',
  ADMIN_OPTION => TRUE);
END;
/
GRANT MANAGE FILE GROUP TO DBA WITH ADMIN OPTION;
GRANT MANAGE SCHEDULER TO DBA WITH ADMIN OPTION;
GRANT MANAGE TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT MERGE ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT ON COMMIT REFRESH TO DBA WITH ADMIN OPTION;
GRANT QUERY REWRITE TO DBA WITH ADMIN OPTION;
GRANT READ ANY FILE GROUP TO DBA WITH ADMIN OPTION;
GRANT RESTRICTED SESSION TO DBA WITH ADMIN OPTION;
GRANT RESUMABLE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY DICTIONARY TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY MINING MODEL TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY SEQUENCE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT SELECT ANY TRANSACTION TO DBA WITH ADMIN OPTION;
GRANT UNDER ANY TABLE TO DBA WITH ADMIN OPTION;
GRANT UNDER ANY TYPE TO DBA WITH ADMIN OPTION;
GRANT UNDER ANY VIEW TO DBA WITH ADMIN OPTION;
GRANT UNLIMITED TABLESPACE TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY CUBE TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY CUBE BUILD PROCESS TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY CUBE DIMENSION TO DBA WITH ADMIN OPTION;
GRANT UPDATE ANY TABLE TO DBA WITH ADMIN OPTION;

-- Roles granted to DBA
--
-- DATAPUMP_EXP_FULL_DATABASE  (Role) 
--
GRANT DATAPUMP_EXP_FULL_DATABASE TO DBA;
--
-- DATAPUMP_IMP_FULL_DATABASE  (Role) 
--
GRANT DATAPUMP_IMP_FULL_DATABASE TO DBA;
--
-- DELETE_CATALOG_ROLE  (Role) 
--
GRANT DELETE_CATALOG_ROLE TO DBA WITH ADMIN OPTION;
--
-- EXECUTE_CATALOG_ROLE  (Role) 
--
GRANT EXECUTE_CATALOG_ROLE TO DBA WITH ADMIN OPTION;
--
-- EXP_FULL_DATABASE  (Role) 
--
GRANT EXP_FULL_DATABASE TO DBA;
--
-- GATHER_SYSTEM_STATISTICS  (Role) 
--
GRANT GATHER_SYSTEM_STATISTICS TO DBA;
--
-- IMP_FULL_DATABASE  (Role) 
--
GRANT IMP_FULL_DATABASE TO DBA;
--
-- JAVA_ADMIN  (Role) 
--
GRANT JAVA_ADMIN TO DBA;
--
-- JAVA_DEPLOY  (Role) 
--
GRANT JAVA_DEPLOY TO DBA;
--
-- OLAP_DBA  (Role) 
--
GRANT OLAP_DBA TO DBA;
--
-- OLAP_XS_ADMIN  (Role) 
--
GRANT OLAP_XS_ADMIN TO DBA;
--
-- SCHEDULER_ADMIN  (Role) 
--
GRANT SCHEDULER_ADMIN TO DBA WITH ADMIN OPTION;
--
-- SELECT_CATALOG_ROLE  (Role) 
--
GRANT SELECT_CATALOG_ROLE TO DBA WITH ADMIN OPTION;
--
-- WM_ADMIN_ROLE  (Role) 
--
GRANT WM_ADMIN_ROLE TO DBA;
--
-- XDBADMIN  (Role) 
--
GRANT XDBADMIN TO DBA;
--
-- XDB_SET_INVOKER  (Role) 
--
GRANT XDB_SET_INVOKER TO DBA;


--
-- RESOURCE  (Role) 
--
CREATE ROLE RESOURCE NOT IDENTIFIED;

-- System privileges granted to RESOURCE
GRANT CREATE CLUSTER TO RESOURCE;
GRANT CREATE INDEXTYPE TO RESOURCE;
GRANT CREATE OPERATOR TO RESOURCE;
GRANT CREATE PROCEDURE TO RESOURCE;
GRANT CREATE SEQUENCE TO RESOURCE;
GRANT CREATE TABLE TO RESOURCE;
GRANT CREATE TRIGGER TO RESOURCE;
GRANT CREATE TYPE TO RESOURCE;


--
-- CRT  (User) 
--
CREATE USER CRT
  IDENTIFIED BY <password>
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  ACCOUNT UNLOCK;

-- 4 Roles for CRT 
--
-- AUTHENTICATEDUSER  (Role) 
--
GRANT AUTHENTICATEDUSER TO CRT WITH ADMIN OPTION;
--
-- CONNECT  (Role) 
--
GRANT CONNECT TO CRT WITH ADMIN OPTION;
--
-- DBA  (Role) 
--
GRANT DBA TO CRT;
--
-- RESOURCE  (Role) 
--
GRANT RESOURCE TO CRT WITH ADMIN OPTION;
ALTER USER CRT DEFAULT ROLE AUTHENTICATEDUSER, CONNECT, RESOURCE;

-- 1 System Privilege for CRT 
GRANT UNLIMITED TABLESPACE TO CRT WITH ADMIN OPTION;


--
-- CR_SEQ  (Sequence) 
--
CREATE SEQUENCE CRT.CR_SEQ
  START WITH 1163502
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- LIST_SEQ  (Sequence) 
--
CREATE SEQUENCE CRT.LIST_SEQ
  START WITH 326567
  MAXVALUE 999999999999999999999999999
  MINVALUE 150000
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- USER_SEQ  (Sequence) 
--
CREATE SEQUENCE CRT.USER_SEQ
  START WITH 15432
  MAXVALUE 9999999999999999999999999999
  MINVALUE 150
  NOCYCLE
  NOCACHE
  NOORDER;


--
-- CLINREASON_LIST  (Table) 
--
CREATE TABLE CRT.CLINREASON_LIST
(
  ITEM_ID           NUMBER                      DEFAULT -1,
  LANGUAGE          VARCHAR2(5 BYTE),
  NAME              VARCHAR2(4000 BYTE),
  ITEM_NOTE         VARCHAR2(2000 BYTE),
  ITEM_TYPE         VARCHAR2(10 BYTE)           DEFAULT -1,
  ITEM_LEVEL        NUMBER                      DEFAULT -1,
  CODE              VARCHAR2(100 BYTE),
  MESH_UI           VARCHAR2(20 BYTE),
  SOURCE            VARCHAR2(20 BYTE),
  ITEM_DESCRIPTION  VARCHAR2(2000 BYTE),
  MESH_EC           VARCHAR2(500 BYTE),
  MESH_CATEGORY     VARCHAR2(500 BYTE),
  IGNORE            NUMBER                      DEFAULT 0,
  CREATION_DATE     DATE                        DEFAULT SYSDATE,
  SYNDROME          NUMBER                      DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CLINREASON_LIST_CODES  (Table) 
--
CREATE TABLE CRT.CLINREASON_LIST_CODES
(
  ITEM_ID  NUMBER,
  CODE     VARCHAR2(100 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CLINREASON_LIST_SYN  (Table) 
--
CREATE TABLE CRT.CLINREASON_LIST_SYN
(
  ITEM_ID        NUMBER,
  NAME           VARCHAR2(1000 BYTE),
  ID             NUMBER                         DEFAULT -1,
  LANG           VARCHAR2(2 BYTE)               DEFAULT 'EN',
  RATING_WEIGHT  FLOAT(126)                     DEFAULT 1,
  SOURCE         VARCHAR2(10 BYTE)              DEFAULT 'MESH',
  IGNORE         NUMBER                         DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CONNECTION  (Table) 
--
CREATE TABLE CRT.CONNECTION
(
  ID             NUMBER                         NOT NULL,
  TARGET_ID      NUMBER                         NOT NULL,
  ILLSCRIPT_ID   NUMBER                         NOT NULL,
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  START_ID       NUMBER                         NOT NULL,
  START_TYPE     NUMBER,
  TARGET_TYPE    NUMBER,
  WEIGHT         NUMBER                         DEFAULT -1,
  STAGE          NUMBER                         DEFAULT -1,
  START_EP_IDX   NUMBER                         DEFAULT 0,
  TARGET_EP_IDX  NUMBER                         DEFAULT 0,
  TARGET_EP_Y    NUMBER                         DEFAULT -1,
  TARGET_EP_X    NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CRUSER  (Table) 
--
CREATE TABLE CRT.CRUSER
(
  USER_ID        NUMBER,
  USER_ID_EXT    VARCHAR2(200 BYTE)             DEFAULT -1,
  SYSTEM_ID      NUMBER                         DEFAULT -1,
  FIRSTNAME      VARCHAR2(200 BYTE),
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  USERNAME       VARCHAR2(100 BYTE),
  PASSWORD       VARCHAR2(100 BYTE),
  EDITOR         NUMBER                         DEFAULT 0,
  INCLUDE_IN_BD  NUMBER                         DEFAULT 1,
  USER_ID_EXT2   VARCHAR2(100 BYTE)             DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;

COMMENT ON COLUMN CRT.CRUSER.INCLUDE_IN_BD IS '0 = testaccount, 1 = include, 2 = case story study, 3 = krakow study (po)';

COMMENT ON COLUMN CRT.CRUSER.USER_ID_EXT2 IS 'decrypted external userId';


--
-- ERROR  (Table) 
--
CREATE TABLE CRT.ERROR
(
  ID             NUMBER,
  DEST_ID        NUMBER,
  TYPE           NUMBER,
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  DISCR          VARCHAR2(5 BYTE),
  STAGE          NUMBER                         DEFAULT -1,
  IDX            NUMBER                         DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- FEEDBACK  (Table) 
--
CREATE TABLE CRT.FEEDBACK
(
  ID               NUMBER,
  PATILLSCRIPT_ID  NUMBER,
  FEEDBACK_TYPE    NUMBER,
  TASK_TYPE        NUMBER,
  STAGE            NUMBER,
  CREATION_DATE    DATE                         DEFAULT SYSDATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LEARNING  (Table) 
--
CREATE TABLE CRT.LEARNING
(
  ID               NUMBER,
  PATILLSCRIPT_ID  NUMBER,
  VP_ID            VARCHAR2(50 BYTE),
  ACTIVE_LEARNING  FLOAT(126)                   DEFAULT 0,
  SCAFFOLDING      FLOAT(126)                   DEFAULT 0,
  USER_ID          NUMBER                       DEFAULT 0,
  CREATION_DATE    DATE                         DEFAULT SYSDATE,
  TIP              NUMBER                       DEFAULT -1,
  DELETE_FLAG      NUMBER                       DEFAULT 0,
  SUMMST           NUMBER                       DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- LOG  (Table) 
--
CREATE TABLE CRT.LOG
(
  SESSION_ID       NUMBER                       DEFAULT -1,
  ACTION           NUMBER,
  CREATION_DATE    DATE                         DEFAULT SYSDATE,
  ID               NUMBER,
  SOURCE_ID        NUMBER,
  SOURCE_ID2       NUMBER                       DEFAULT -1,
  STAGE            NUMBER                       DEFAULT -1,
  PATILLSCRIPT_ID  NUMBER                       DEFAULT -1,
  SOURCE_TXT       VARCHAR2(4000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PARENT_SYSTEM  (Table) 
--
CREATE TABLE CRT.PARENT_SYSTEM
(
  INTERNAL_ID  NUMBER,
  SYTEM_NAME   VARCHAR2(200 BYTE),
  SYSTEM_ID    VARCHAR2(200 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PATIENT_ILLNESSSCRIPT  (Table) 
--
CREATE TABLE CRT.PATIENT_ILLNESSSCRIPT
(
  ID                 NUMBER,
  COURSEOFTIME       NUMBER,
  PATIENT_ID         NUMBER,
  CREATION_DATE      DATE                       DEFAULT SYSDATE,
  DIAGNOSIS_ID       NUMBER,
  TYPE               NUMBER,
  USER_ID            NUMBER,
  LOCALE             VARCHAR2(20 BYTE),
  SUMMST_ID          NUMBER                     DEFAULT -1,
  PARENT_ID          NUMBER                     DEFAULT -1,
  STAGE              NUMBER                     DEFAULT -1,
  DDX_SUBMITTED      NUMBER                     DEFAULT 0,
  CONFIDENCE         NUMBER                     DEFAULT -1,
  PEER_SYNC          NUMBER                     DEFAULT 0,
  MAX_DDX_SUBMITTED  NUMBER                     DEFAULT -1,
  LAST_ACCESS_DATE   DATE                       DEFAULT SYSDATE,
  VP_ID              VARCHAR2(50 BYTE),
  SHOW_SOL           NUMBER                     DEFAULT -1,
  EXT_UID            VARCHAR2(200 BYTE),
  DELETE_FLAG        NUMBER                     DEFAULT 0,
  FINAL_DDX_TYPE     NUMBER                     DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- PEER  (Table) 
--
CREATE TABLE CRT.PEER
(
  ACTION         NUMBER                         DEFAULT -1,
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  CHANGE_DATE    DATE                           DEFAULT SYSDATE,
  ITEM_ID        NUMBER                         DEFAULT -1,
  PEER_NUM       NUMBER                         DEFAULT 0,
  ID             NUMBER,
  STAGE          NUMBER                         DEFAULT -1,
  PARENT_ID      NUMBER                         DEFAULT -1,
  SCORE_SUM      FLOAT(126)                     DEFAULT 0,
  VP_ID          VARCHAR2(50 BYTE),
  ORG_SCORE_EXP  NUMBER                         DEFAULT 0,
  SCORE_EXP      NUMBER                         DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- RELATION_DIAGNOSIS  (Table) 
--
CREATE TABLE CRT.RELATION_DIAGNOSIS
(
  SOURCE_ID      NUMBER,
  DEST_ID        NUMBER,
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  ID             NUMBER,
  IDX            NUMBER,
  X              NUMBER,
  Y              NUMBER,
  COLOR          VARCHAR2(50 BYTE)              DEFAULT '#ffffff',
  MNM            NUMBER                         DEFAULT 0,
  STAGE          NUMBER                         DEFAULT 1,
  SYN_ID         NUMBER                         DEFAULT -1,
  TIER           NUMBER                         DEFAULT 0,
  RULED_OUT      NUMBER                         DEFAULT 0,
  WORKING_DDX    NUMBER                         DEFAULT -1,
  PREFIX         VARCHAR2(50 BYTE),
  FINAL_DDX      NUMBER                         DEFAULT -1,
  PREVALENCE     NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- RELATION_MANAGEMENT  (Table) 
--
CREATE TABLE CRT.RELATION_MANAGEMENT
(
  SOURCE_ID      NUMBER,
  DEST_ID        NUMBER,
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  ID             NUMBER,
  IDX            NUMBER,
  X              NUMBER,
  Y              NUMBER,
  STAGE          NUMBER                         DEFAULT 1,
  SYN_ID         NUMBER                         DEFAULT -1,
  PREFIX         VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- RELATION_PROBLEM  (Table) 
--
CREATE TABLE CRT.RELATION_PROBLEM
(
  SOURCE_ID      NUMBER,
  DEST_ID        NUMBER,
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  ID             NUMBER,
  IDX            NUMBER,
  X              NUMBER,
  Y              NUMBER,
  SYN_ID         VARCHAR2(50 BYTE),
  STAGE          NUMBER                         DEFAULT 1,
  PREFIX         VARCHAR2(50 BYTE),
  PROTOTYPICAL   NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- RELATION_SYNDROME  (Table) 
--
CREATE TABLE CRT.RELATION_SYNDROME
(
  ID           NUMBER                           NOT NULL,
  SYNDROME_ID  NUMBER,
  CHILD_ID     NUMBER
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- RELATION_TEST  (Table) 
--
CREATE TABLE CRT.RELATION_TEST
(
  SOURCE_ID      NUMBER,
  DEST_ID        NUMBER,
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  ID             NUMBER,
  IDX            NUMBER,
  X              NUMBER,
  Y              NUMBER,
  STAGE          NUMBER                         DEFAULT 1,
  SYN_ID         NUMBER                         DEFAULT -1,
  PREFIX         VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SCORE  (Table) 
--
CREATE TABLE CRT.SCORE
(
  ID                       NUMBER,
  PATIENTILLNESSSCRIPT_ID  NUMBER,
  SCORE                    FLOAT(126)           DEFAULT -1,
  ACTION_ITEM_ID           NUMBER,
  CREATION_DATE            DATE                 DEFAULT SYSDATE,
  WEIGHT                   NUMBER               DEFAULT 1,
  ITEM_TYPE                NUMBER,
  SCORE_EXP                FLOAT(126)           DEFAULT -1,
  SCORE_PEER               FLOAT(126)           DEFAULT -1,
  SCORE_ILLSCR             FLOAT(126)           DEFAULT -1,
  TIMING                   NUMBER               DEFAULT -1,
  FEEDBACK                 NUMBER               DEFAULT 0,
  STAGE                    NUMBER               DEFAULT -1,
  EXPITEM_ID               NUMBER               DEFAULT -1,
  ORG_SCORE_EXP            NUMBER               DEFAULT -1,
  USER_ID                  NUMBER               DEFAULT -1,
  PARENT_ID                NUMBER               DEFAULT -1,
  VP_ID                    VARCHAR2(50 BYTE),
  DISTANCE                 NUMBER               DEFAULT -99,
  DELETE_FLAG              NUMBER               DEFAULT 0,
  DETAILS                  VARCHAR2(4000 BYTE),
  SCORE_DTEAILS            VARCHAR2(1000 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SEMANTIC_QUALIFIERS  (Table) 
--
CREATE TABLE CRT.SEMANTIC_QUALIFIERS
(
  ID           NUMBER                           DEFAULT -1,
  TEXT         VARCHAR2(200 BYTE),
  CATEGORY     NUMBER                           DEFAULT -1,
  LANGUAGE     VARCHAR2(2 BYTE),
  CONTRASTS    NUMBER                           DEFAULT -1,
  SYNONYMAOF   NUMBER                           DEFAULT -1,
  ADDED        NUMBER                           DEFAULT -1,
  DELETE_FLAG  NUMBER                           DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SETTINGS  (Table) 
--
CREATE TABLE CRT.SETTINGS
(
  ID                 NUMBER,
  USER_ID            NUMBER,
  VP_ID              VARCHAR2(20 BYTE),
  EXP_FEEDBACK_MODE  NUMBER,
  CREATION_DATE      DATE                       DEFAULT SYSDATE,
  DDX_MODE           NUMBER                     DEFAULT 0,
  LIST_MODE          NUMBER                     DEFAULT 0
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SUMMSTATEMENT  (Table) 
--
CREATE TABLE CRT.SUMMSTATEMENT
(
  ID               NUMBER,
  TEXT             VARCHAR2(4000 BYTE),
  CREATION_DATE    DATE                         DEFAULT SYSDATE,
  STAGE            NUMBER                       DEFAULT -1,
  PATILLSCRIPT_ID  NUMBER                       DEFAULT -1,
  ANALYZED         NUMBER                       DEFAULT 0,
  TYPE             NUMBER                       DEFAULT 1,
  LANG             VARCHAR2(2 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- SUMSTATEMENT_SQ  (Table) 
--
CREATE TABLE CRT.SUMSTATEMENT_SQ
(
  SUMST_ID       NUMBER,
  SQ_ID          NUMBER,
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  ID             NUMBER,
  TEXT           VARCHAR2(100 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- TYPEAHEAD  (Table) 
--
CREATE TABLE CRT.TYPEAHEAD
(
  USER_ID        NUMBER                         DEFAULT -1,
  VP_ID          VARCHAR2(20 BYTE)              DEFAULT -1,
  TEXT           VARCHAR2(4000 BYTE),
  FINAL_ITEM_ID  NUMBER                         DEFAULT -1,
  ID             NUMBER                         DEFAULT -1,
  SCRIPT_ID      NUMBER                         DEFAULT -1,
  CREATION_DATE  DATE                           DEFAULT SYSDATE,
  TYPE           NUMBER                         DEFAULT -1
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- VPID_SYSTEM  (Table) 
--
CREATE TABLE CRT.VPID_SYSTEM
(
  VP_ID      NUMBER                             DEFAULT -1,
  SYSTEM_ID  NUMBER,
  ID         NUMBER,
  VP_NAME    VARCHAR2(500 BYTE),
  PARENT_ID  VARCHAR2(50 BYTE)
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOCOMPRESS ;


--
-- CLINREASON_IST_COMBI_IDX  (Index) 
--
CREATE INDEX CRT.CLINREASON_IST_COMBI_IDX ON CRT.CLINREASON_LIST
(ITEM_TYPE, IGNORE, LANGUAGE, SOURCE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CLINREASON_LIST_CODES_ID_IDX  (Index) 
--
CREATE INDEX CRT.CLINREASON_LIST_CODES_ID_IDX ON CRT.CLINREASON_LIST_CODES
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CLINREASON_LIST_TYPE_IDX  (Index) 
--
CREATE INDEX CRT.CLINREASON_LIST_TYPE_IDX ON CRT.CLINREASON_LIST
(ITEM_TYPE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CR_CODE_LANG_IDX  (Index) 
--
CREATE INDEX CRT.CR_CODE_LANG_IDX ON CRT.CLINREASON_LIST
(LANGUAGE, CODE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- CR_LIST_ID_IDX  (Index) 
--
CREATE INDEX CRT.CR_LIST_ID_IDX ON CRT.CLINREASON_LIST
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- ERROR_DESTID_IDX  (Index) 
--
CREATE INDEX CRT.ERROR_DESTID_IDX ON CRT.ERROR
(DEST_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- FEEDBACK_PISID_IDX  (Index) 
--
CREATE INDEX CRT.FEEDBACK_PISID_IDX ON CRT.FEEDBACK
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- LOG_SCRIPTID_IDX  (Index) 
--
CREATE INDEX CRT.LOG_SCRIPTID_IDX ON CRT.LOG
(PATILLSCRIPT_ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PATILLSCRIPT_ID_IDX  (Index) 
--
CREATE UNIQUE INDEX CRT.PATILLSCRIPT_ID_IDX ON CRT.PATIENT_ILLNESSSCRIPT
(ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- PTIS_USRID_VPID_TYPE_IDX  (Index) 
--
CREATE INDEX CRT.PTIS_USRID_VPID_TYPE_IDX ON CRT.PATIENT_ILLNESSSCRIPT
(USER_ID, VP_ID, TYPE)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- REL_DIAG_IDX  (Index) 
--
CREATE INDEX CRT.REL_DIAG_IDX ON CRT.RELATION_DIAGNOSIS
(ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- REL_MGR_IDX  (Index) 
--
CREATE INDEX CRT.REL_MGR_IDX ON CRT.RELATION_MANAGEMENT
(ID)
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SCORE_ILLSCRIPTID_IDX  (Index) 
--
CREATE INDEX CRT.SCORE_ILLSCRIPTID_IDX ON CRT.SCORE
(PATIENTILLNESSSCRIPT_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SCORE_USRID_IDX  (Index) 
--
CREATE INDEX CRT.SCORE_USRID_IDX ON CRT.SCORE
(USER_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SUMMST_ID_IDX  (Index) 
--
CREATE INDEX CRT.SUMMST_ID_IDX ON CRT.SUMMSTATEMENT
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SYN_ID_IDX  (Index) 
--
CREATE INDEX CRT.SYN_ID_IDX ON CRT.CLINREASON_LIST_SYN
(ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- SYN_ITEMID_IDX  (Index) 
--
CREATE INDEX CRT.SYN_ITEMID_IDX ON CRT.CLINREASON_LIST_SYN
(ITEM_ID)
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--
-- VP_LISTITEM_VIEW  (View) 
--
CREATE OR REPLACE FORCE VIEW CRT.VP_LISTITEM_VIEW
(
    VP_ID,
    SOURCE_ID,
    NAME,
    item_type,
    item_synonym,
    pis_id
)
AS
    SELECT pis.vp_id, rp.source_id, cl.NAME, 1, 0, pis.id
      FROM patient_illnessscript pis, relation_problem rp, clinreason_list cl
     WHERE     pis.TYPE = 2
           AND pis.delete_flag = 0
           AND pis.ID = rp.dest_id
           AND (rp.source_id = cl.item_id)
    UNION
    SELECT pis.vp_id, rp.source_id, cl.NAME, 1, 1, pis.id
      FROM patient_illnessscript  pis,
           relation_problem       rp,
           clinreason_list_syn    cl
     WHERE     pis.TYPE = 2
           AND pis.delete_flag = 0
           AND cl.item_id = 0
           AND pis.ID = rp.dest_id
           AND (rp.source_id = cl.item_id)
    UNION
    SELECT pis.vp_id, rp.source_id, cl.NAME, 2, 0, pis.id
      FROM patient_illnessscript  pis,
           relation_diagnosis     rp,
           clinreason_list        cl
     WHERE     pis.TYPE = 2
           AND pis.delete_flag = 0
           AND pis.ID = rp.dest_id
           AND (rp.source_id = cl.item_id)
    UNION
    SELECT pis.vp_id, rp.source_id, cl.NAME, 2, 1, pis.id
      FROM patient_illnessscript  pis,
           relation_diagnosis     rp,
           clinreason_list_syn    cl
     WHERE     pis.TYPE = 2
           AND pis.delete_flag = 0
           AND cl.item_id = 0
           AND pis.ID = rp.dest_id
           AND (rp.source_id = cl.item_id)
    UNION
    SELECT pis.vp_id, rp.source_id, cl.NAME, 3, 0, pis.id
      FROM patient_illnessscript pis, relation_test rp, clinreason_list cl
     WHERE     pis.TYPE = 2
           AND pis.delete_flag = 0
           AND pis.ID = rp.dest_id
           AND (rp.source_id = cl.item_id)
    UNION
    SELECT pis.vp_id, rp.source_id, cl.NAME, 3, 1, pis.id
      FROM patient_illnessscript  pis,
           relation_test          rp,
           clinreason_list_syn    cl
     WHERE     pis.TYPE = 2
           AND pis.delete_flag = 0
           AND cl.item_id = 0
           AND pis.ID = rp.dest_id
           AND (rp.source_id = cl.item_id)
    UNION
    SELECT pis.vp_id, rp.source_id, cl.NAME, 4, 0, pis.id
      FROM patient_illnessscript  pis,
           relation_management    rp,
           clinreason_list        cl
     WHERE     pis.TYPE = 2
           AND pis.delete_flag = 0
           AND pis.ID = rp.dest_id
           AND (rp.source_id = cl.item_id)
    UNION
    SELECT pis.vp_id, rp.source_id, cl.NAME, 4, 1, pis.id
      FROM patient_illnessscript  pis,
           relation_management    rp,
           clinreason_list_syn    cl
     WHERE     pis.TYPE = 2
           AND pis.delete_flag = 0
           AND cl.item_id = 0
           AND pis.ID = rp.dest_id
           AND (rp.source_id = cl.item_id);
           

COMMENT ON COLUMN CRT.VP_LISTITEM_VIEW.ITEM_SYNONYM IS '0 for main item, 1 for synonyns';

COMMENT ON COLUMN CRT.VP_LISTITEM_VIEW.ITEM_TYPE IS '1=problem, 2=diagonsis, 3=test,4=management';

COMMENT ON COLUMN CRT.VP_LISTITEM_VIEW.NAME IS 'item name';

COMMENT ON COLUMN CRT.VP_LISTITEM_VIEW.SOURCE_ID IS 'item_id';

COMMENT ON COLUMN CRT.VP_LISTITEM_VIEW.VP_ID IS 'vp';

COMMENT ON COLUMN CRT.VP_LISTITEM_VIEW.PIS_ID IS 'expert(s) patient illness script id';


GRANT READ, WRITE ON DIRECTORY DATA_PUMP_DIR TO EXP_FULL_DATABASE;

GRANT READ, WRITE ON DIRECTORY DATA_PUMP_DIR TO IMP_FULL_DATABASE;

GRANT READ, WRITE ON DIRECTORY ORACLE_OCM_CONFIG_DIR TO ORACLE_OCM;

GRANT READ, WRITE ON DIRECTORY ORACLE_OCM_CONFIG_DIR2 TO ORACLE_OCM;

