 <ui:composition 
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core">
<!-- problem scores for all VPs of user -->

<!-- <div class="chart_header">#{prop['chart.all.tests']}</div>-->
	<svg id="testchart"  class="chart svgsmall"></svg>

<script language="JavaScript">
	var testdata = [];
	var testpeerdata = [];
	var testorgdata = [];
	<ui:repeat value="#{crtContext.learningAnalyticsContainer.VPTestScores}" var="scoreItem3">
		testdata.push({ x: #{scoreItem3.stage}, y: #{scoreItem3.scoreBasedOnExpPerc}, title:"#{prop['charts.card']} #{scoreItem3.stage}" });
		testorgdata.push({ x: #{scoreItem3.stage}, y: #{scoreItem3.orgScoreBasedOnExpPerc}, title: "#{prop['charts.card']} #{scoreItem3.stage}" });
	</ui:repeat>
	<ui:repeat value="#{crtContext.learningAnalyticsContainer.VPTestPeers}" var="scoreItemP">
		testpeerdata.push({ x: #{scoreItemP.stage}, y: #{scoreItemP.expPeerPercentagePerc}, title: "#{prop['charts.card']} #{scoreItem3.stage}" });
	</ui:repeat>
	/*if(peerChk=="1")
		printGroupedBarChart(testdata, testpeerdata, 150, 250, "testchart","Diagnostic steps");
	else */
		//printBarChart(testdata, "testchart","Diagnostic steps", false);
	printBarLineComboChartTwoLines(testdata, testorgdata, testpeerdata, "testchart","Tests", false);

/*	function printLargeTst(){
		currentChartNum = 4;
		if(peerStatus==1)
			printBarLineComboChartTwoLines(testdata, testorgdata, testpeerdata, "chartlarge","Tests", false);

			//printBarLineComboChart(testdata, testpeerdata, "chartlarge","Tst");
		else
			printBarChart(testdata, "chartlarge","Diagnostic steps", true);
		}*/
</script>
</ui:composition>