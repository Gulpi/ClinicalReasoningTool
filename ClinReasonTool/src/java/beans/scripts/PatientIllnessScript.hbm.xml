<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="beans.scripts"> 

	<class name="PatientIllnessScript" table="crt.patient_illnessscript">
		<cache usage="nonstrict-read-write" />
		<comment>Patient Illness Script</comment>	
	
		<id name="id" type="long" column="id">
			<generator class="sequence">
				<param name ="sequence">CRT.CR_SEQ</param>
			</generator>
		</id>
		<property name="userId" column="user_id" type="long" />			
		<property name="courseOfTime" column="courseoftime" type="int"/>	
		<!--  <property name="parentId" column="parent_id" type="long"/>-->	
		<property name="submittedStage" column="ddx_submitted" type="int"/>
		<property name="type" column="type" type="int"/>
		<property name="locale" column="locale" update="false" type="locale"/>	
		<property name="currentStage" column="stage" type="int"/>	
		<property name="confidence" column="confidence" type="int"/>	
		<property name="lastAccessDate" column="last_access_date" type="timestamp"/>
		<property name="vpId" column="vp_id" type="string"/>	
		<property name="showSolution" column="show_sol" type="int"/>
		<!--  <property name="creationDate" column="creation_date" update="false" type="timestamp"/>-->
	    <!-- <many-to-one name="summSt" column="summst_id" not-null="false" update="false" insert="false" lazy="false" />-->
	    <property name="summStId" column="summst_id" type="long"/>
	    <property name="peerSync" column="peer_sync" type="boolean"/>
	     <property name="maxSubmittedStage" column="max_ddx_submitted" type="int"/>
	     <property name="extUId" column="ext_uid" type="string"/>
	     <property name="deleteFlag" column="delete_flag" type="boolean"/>
	      <property name="finalDDXType" column="final_ddx_type" type="int"/>
	     
	
		<list name="problems" table="crt.relation_problem" lazy="false"> 
    		<key column="dest_id"/> <!-- dest_id = patientIllnessScript id -->
    		<list-index column="idx" base="0"/>
    		<one-to-many class="beans.relation.RelationProblem"/>   		
		</list>	
		<list name="diagnoses" table="crt.relation_diagnosis" lazy="false"> 
    		<key column="dest_id"/> <!-- dest_id = patientIllnessScript id -->
    		<list-index column="idx" base="0"/>
    		<one-to-many class="beans.relation.RelationDiagnosis"/>   		
		</list>	
		<list name="tests" table="crt.relation_test" lazy="false"> 
    		<key column="dest_id"/> <!-- dest_id = patientIllnessScript id -->
    		<list-index column="idx" base="0"/>
    		<one-to-many class="beans.relation.RelationTest"/>   		
		</list>	
		<!-- <list name="epis" table="crt.relation_epi" lazy="false"> 
    		<key column="dest_id"/> 
    		<list-index column="idx" base="0"/>
    		<one-to-many class="beans.relation.RelationEpi"/>   		
		</list>	-->
		<list name="mngs" table="crt.relation_management" lazy="false"> 
    		<key column="dest_id"/> <!-- dest_id = patientIllnessScript id -->
    		<list-index column="idx" base="0"/>
    		<one-to-many class="beans.relation.RelationManagement"/>   		
		</list>	
		<list name="errors" table="crt.error" lazy="false"> <!-- table="crt.relation_problem"-->
    		<key column="dest_id"/> <!-- dest_id = patientIllnessScript id -->
    		<list-index column="idx" base="0"/>
    		<one-to-many class="beans.error.MyError"/>   		
		</list>			
		<map name="conns" table="crt.connection" lazy="false" order-by="id" >
	   		<key column="illscript_id" />
	   		<map-key column="id" type="long"/>	   		
	    	<one-to-many class="beans.relation.Connection" />
	    </map>		
	    <sql-query name="script.selByRelDDX">select pis.id, pis.vp_id, pis.type, rd.source_id from patient_illnessscript pis where (pis.user_id=:userId or pis.type=2) and pis.id in(select rd.dest_id from relation_diagnosis rd where source_id in(:ids)) and pis.id = rd.dest_id</sql-query>
	    <sql-query name="script.selByRelProb">select pis.id, pis.vp_id, pis.type, rd.source_id from patient_illnessscript pis where (pis.user_id=:userId or pis.type=2) and pis.id in(select rd.dest_id from relation_problem rd where source_id in(:ids)) and pis.id = rd.dest_id</sql-query>
	    <sql-query name="script.selByRelTest">select pis.id, pis.vp_id, pis.type, rd.source_id from patient_illnessscript pis where (pis.user_id=:userId or pis.type=2) and pis.id in(select rd.dest_id from relation_test rd where source_id in(:ids)) and pis.id = rd.dest_id</sql-query>
	    <sql-query name="script.selByRelMng">select pis.id, pis.vp_id, pis.type, rd.source_id from patient_illnessscript pis where (pis.user_id=:userId or pis.type=2) and pis.id in(select rd.dest_id from relation_management rd where source_id in(:ids)) and pis.id = rd.dest_id </sql-query>
	    
</class>
</hibernate-mapping>